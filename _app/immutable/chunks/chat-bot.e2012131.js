import{s as qD,c as dh,n as Om,r as jD,d as Mm,o as KD,e as XD}from"./scheduler.6db7f009.js";import{S as YD,i as ZD,g as Bn,s as Cu,h as Ln,j as Es,x as JD,c as Du,f as En,k as ve,a as Ec,y as on,B as Bm,z as fh,A as QD,e as Lm,m as q0,n as j0,o as K0}from"./index.d9468d15.js";import{j as t2}from"./singletons.74dbd124.js";import{p as e2}from"./stores.13ee871b.js";import{m as ph}from"./store.6cbc4a4d.js";function n2(n,t){for(var e=0;e<t.length;e++){const s=t[e];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in n)){const o=Object.getOwnPropertyDescriptor(s,r);o&&Object.defineProperty(n,r,o.get?o:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}function Pm(n){return(n==null?void 0:n.length)!==void 0?n:Array.from(n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s2=1e-7,r2=1e-4;class X0{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class Rd{refCount(t){return kn("refCount")}incRef(t){return kn("incRef")}timerAvailable(){return!0}time(t){return kn("time")}read(t){return kn("read")}readSync(t){return kn("readSync")}readToGPU(t,e){return kn("readToGPU")}numDataIds(){return kn("numDataIds")}disposeData(t,e){return kn("disposeData")}write(t,e,s){return kn("write")}move(t,e,s,r,o){return kn("move")}createTensorFromGPUData(t,e,s){return kn("createTensorFromGPUData")}memory(){return kn("memory")}floatPrecision(){return kn("floatPrecision")}epsilon(){return this.floatPrecision()===32?s2:r2}dispose(){return kn("dispose")}}function kn(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o2(n){let t=n.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,Ro(n,t,e)}function Zr(n,t,e){return Math.max(n,Math.min(t,e))}function _d(n){return n%2===0?n:n+1}function Ro(n,t,e){const s=n[t];n[t]=n[e],n[e]=s}function i2(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e];return t}function k(n,t){if(!n)throw new Error(typeof t=="string"?t:t())}function Od(n,t,e=""){k(jt(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function Y0(n){k(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function X(n){if(n.length===0)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function jt(n,t){if(n===t)return!0;if(n==null||t==null||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function Ho(n){return n%1===0}function Ph(n){const t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function Lo(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function zm(n,t=r=>0,e,s){return new Promise((r,o)=>{let i=0;const a=()=>{if(n()){r();return}i++;const u=t(i);if(e!=null&&i>=e){o();return}s!=null?s(a,u):setTimeout(a,u)};a()})}function Z0(n,t){let e=1,s=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)e*=n[o];else if(n[o]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(s===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(e===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const r=n.slice();return r[s]=t/e,r}function Mt(n,t){const e=t.length;return n=n==null?t.map((s,r)=>r):[].concat(n),k(n.every(s=>s>=-e&&s<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),k(n.every(s=>Ho(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?e+s:s)}function kr(n,t){const e=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,o=t==null||r?null:Mt(t,n).sort();let i=0;for(let a=0;a<n.length;++a){if(o!=null){if(o[i]===a&&n[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${n[a]}' is not 1`);(o[i]==null||o[i]>a)&&n[a]===1&&(e.push(n[a]),s.push(a)),o[i]<=a&&i++}n[a]!==1&&(e.push(n[a]),s.push(a))}return{newShape:e,keptDims:s}}function tn(n,t){return Ce(n,t)}function Ce(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else if(n==="bool")e=new Uint8Array(t);else if(n==="string")e=new Array(t);else throw new Error(`Unknown data type ${n}`);return e}function a2(n,t){for(let e=0;e<n.length;e++){const s=n[e];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function u2(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function J0(n,t){return!(t==="complex64"||t==="float32"&&n!=="complex64"||t==="int32"&&n!=="float32"&&n!=="complex64"||t==="bool"&&n==="bool")}function Wu(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function c2(n){if(n==null)return 0;let t=0;return n.forEach(e=>t+=e.length),t}function na(n){return typeof n=="string"||n instanceof String}function l2(n){return typeof n=="boolean"}function zh(n){return typeof n=="number"}function ui(n){return Array.isArray(n)?ui(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":zh(n)?"float32":na(n)?"string":l2(n)?"bool":"float32"}function Vh(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Wh(n,t){for(let e=t;e<n;++e)if(n%e===0)return e;return n}function vt(n){const t=n.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=n[t-1];for(let s=t-3;s>=0;--s)e[s]=e[s+1]*n[s+1];return e}function Q0(n,t,e,s=!1){const r=new Array;if(t.length===1){const o=t[0]*(s?2:1);for(let i=0;i<o;i++)r[i]=e[n+i]}else{const o=t[0],i=t.slice(1),a=i.reduce((u,c)=>u*c)*(s?2:1);for(let u=0;u<o;u++)r[u]=Q0(n+u*a,i,e,s)}return r}function gs(n,t,e=!1){if(n.length===0)return t[0];const s=n.reduce((r,o)=>r*o)*(e?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return Q0(0,n,t,e)}function h2(n,t){if(Array.isArray(n))return n;if(t==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(t==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${t}`)}function Md(n,t){const e=en(n,t);for(let s=0;s<e.length;s++)e[s]=1;return e}function en(n,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function t1(n,t){const e=n.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return gs(n,new Float32Array(e));if(t==="int32")return gs(n,new Int32Array(e));if(t==="bool")return gs(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function sr(n){n.forEach(t=>{k(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Os(n,t,e){if(t===0)return 0;if(t===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=e[r]*n[r];return s}function ci(n,t,e){if(t===0)return[];if(t===1)return[n];const s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/e[r]),n-=s[r]*e[r];return s[s.length-1]=n,s}function Bd(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vm="tfjsflags";class d2{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=f2,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(U().getBool("IS_TEST")||U().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,s){if(this.flagRegistry[t]={evaluationFn:e,setHook:s},this.urlFlags[t]!=null){const r=this.urlFlags[t];U().getBool("IS_TEST")||U().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${r}.`),this.set(t,r)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Bd(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);Vm in t&&t[Vm].split(",").forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=m2(r,o)})}}function f2(n){const t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...s)=>(p2(t,s[0],s[1]),s.join("="))),t}function p2(n,t,e){n[decodeURIComponent(t)]=decodeURIComponent(e||"")}function m2(n,t){const e=t.toLowerCase();return e==="true"||e==="false"?e==="true":`${+e}`===e?+e:t}function U(){return e1}let e1=null;function g2(n){e1=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let mh;function n1(){if(mh==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");mh=n}return mh}function x2(){const n=n1();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Ld(n,t){const e=x2();if(e.has(n))return e.get(n);{const s=t();return e.set(n,s),e.get(n)}}const Nc="Abs",sa="Acos",ra="Acosh",li="Add",Pd="AddN",zd="All",Vd="Any",Ac="ArgMax",Tc="ArgMin",oa="Asin",ia="Asinh",aa="Atan",ua="Atanh",ca="Atan2",Fc="AvgPool",Wd="AvgPoolGrad",Rc="AvgPool3D",Ud="AvgPool3DGrad",_c="BatchMatMul",Oc="BatchToSpaceND",Gd="Bincount",Hd="BitwiseAnd",b2="BroadcastTo",s1="BroadcastArgs",la="Cast",ha="Ceil",da="ClipByValue",qd="Complex",Mc="ComplexAbs",Bc="Concat",Lc="Conv2D",jd="Conv2DBackpropFilter",Pc="Conv2DBackpropInput",zc="Conv3D",Kd="Conv3DBackpropFilterV2",Xd="Conv3DBackpropInputV2",fa="Cos",pa="Cosh",Yd="Cumprod",Vc="Cumsum",Zd="CropAndResize",Jd="DenseBincount",Qd="DepthToSpace",Wc="DepthwiseConv2dNative",tf="DepthwiseConv2dNativeBackpropFilter",ef="DepthwiseConv2dNativeBackpropInput",r1="Diag",Uc="Dilation2D",Uh="Dilation2DBackpropInput",Gh="Dilation2DBackpropFilter",w2="Draw",ma="RealDiv",nf="Einsum",ga="Elu",sf="EluGrad",xa="Erf",Gc="Equal",ba="Exp",Hc="ExpandDims",wa="Expm1",rf="FFT",of="Fill",af="FlipLeftRight",ya="Floor",va="FloorDiv",qc="FusedBatchNorm",jc="GatherV2",o1="GatherNd",Kc="Greater",Ca="GreaterEqual",Da="Identity",uf="IFFT",cf="Imag",Ia="IsFinite",$a="IsInf",ka="IsNan",Xc="LeakyRelu",Yc="Less",Zc="LessEqual",i1="LinSpace",Sa="Log",Ea="Log1p",Jc="LogicalAnd",Qc="LogicalNot",tl="LogicalOr",y2="LogSoftmax",el="LRN",lf="LRNGrad",nl="Max",Na="Maximum",sl="MaxPool",hf="MaxPoolGrad",rl="MaxPool3D",df="MaxPool3DGrad",a1="MaxPoolWithArgmax",ol="Mean",il="Min",Aa="Minimum",al="MirrorPad",Ta="Mod",u1="Multinomial",Fa="Multiply",ul="Neg",cl="NotEqual",ff="NonMaxSuppressionV3",pf="NonMaxSuppressionV4",mf="NonMaxSuppressionV5",ll="OnesLike",hl="OneHot",dl="Pack",fl="PadV2",Ra="Pow",pl="Prelu",ml="Prod",c1="RaggedGather",l1="RaggedRange",h1="RaggedTensorToTensor",gf="Range",xf="Real",_a="Reciprocal",Oa="Relu",gl="Reshape",xl="ResizeNearestNeighbor",bf="ResizeNearestNeighborGrad",bl="ResizeBilinear",wf="ResizeBilinearGrad",Ma="Relu6",wl="Reverse",Ba="Round",La="Rsqrt",d1="ScatterNd",f1="TensorScatterUpdate",p1="SearchSorted",yl="Select",Pa="Selu",vl="Slice",za="Sin",Va="Sinh",Wa="Sign",Ua="Sigmoid",Ga="Softplus",Ha="Sqrt",Cl="Sum",Dl="SpaceToBatchND",Il="SplitV",$l="Softmax",m1="SparseFillEmptyRows",g1="SparseReshape",x1="SparseSegmentMean",b1="SparseSegmentSum",w1="SparseToDense",qa="SquaredDifference",yf="Square",vf="StaticRegexReplace",Cf="StridedSlice",y1="StringNGrams",v1="StringSplit",C1="StringToHashBucketFast",ja="Sub",Ka="Tan",Xa="Tanh",Ya="Tile",Df="TopK",If="Transform",Po="Transpose",$f="Unique",kl="Unpack",Sl="UnsortedSegmentSum",El="ZerosLike",Za="Step",v2="FromPixels",kf="RotateWithOffset",Uu="_FusedMatMul",Gu="FusedConv2D",D1="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pn(...n){U().getBool("IS_TEST")||U().getBool("PROD")||console.warn(...n)}function C2(...n){U().getBool("IS_TEST")||U().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hu=Ld("kernelRegistry",()=>new Map),Hh=Ld("gradRegistry",()=>new Map);function Wm(n,t){const e=$1(n,t);return Hu.get(e)}function Um(n){return Hh.get(n)}function Gm(n){const t=Hu.entries(),e=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[o,i]=r,[a]=o.split("_");a===n&&e.push(i)}return e}function I1(n){const{kernelName:t,backendName:e}=n,s=$1(t,e);Hu.has(s)&&Pn(`The kernel '${t}' for backend '${e}' is already registered`),Hu.set(s,n)}function D2(n){const{kernelName:t}=n;Hh.has(t)&&U().getBool("DEBUG")&&Pn(`Overriding the gradient for '${t}'`),Hh.set(t,n)}function $1(n,t){return`${t}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k1(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var fo=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Nl(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function I2(n){if(n.__esModule)return n;var t=n.default;if(typeof t=="function"){var e=function s(){return this instanceof s?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};e.prototype=t.prototype}else e={};return Object.defineProperty(e,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var r=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(e,s,r.get?r:{enumerable:!0,get:function(){return n[s]}})}),e}var S1=le,Zn=null;try{Zn=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function le(n,t,e){this.low=n|0,this.high=t|0,this.unsigned=!!e}le.prototype.__isLong__;Object.defineProperty(le.prototype,"__isLong__",{value:!0});function Mn(n){return(n&&n.__isLong__)===!0}le.isLong=Mn;var Hm={},qm={};function po(n,t){var e,s,r;return t?(n>>>=0,(r=0<=n&&n<256)&&(s=qm[n],s)?s:(e=he(n,(n|0)<0?-1:0,!0),r&&(qm[n]=e),e)):(n|=0,(r=-128<=n&&n<128)&&(s=Hm[n],s)?s:(e=he(n,n<0?-1:0,!1),r&&(Hm[n]=e),e))}le.fromInt=po;function Jn(n,t){if(isNaN(n))return t?Hr:Qn;if(t){if(n<0)return Hr;if(n>=E1)return T1}else{if(n<=-Km)return An;if(n+1>=Km)return A1}return n<0?Jn(-n,t).neg():he(n%qo|0,n/qo|0,t)}le.fromNumber=Jn;function he(n,t,e){return new le(n,t,e)}le.fromBits=he;var qu=Math.pow;function Sf(n,t,e){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return Qn;if(typeof t=="number"?(e=t,t=!1):t=!!t,e=e||10,e<2||36<e)throw RangeError("radix");var s;if((s=n.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return Sf(n.substring(1),t,e).neg();for(var r=Jn(qu(e,8)),o=Qn,i=0;i<n.length;i+=8){var a=Math.min(8,n.length-i),u=parseInt(n.substring(i,i+a),e);if(a<8){var c=Jn(qu(e,a));o=o.mul(c).add(Jn(u))}else o=o.mul(r),o=o.add(Jn(u))}return o.unsigned=t,o}le.fromString=Sf;function Ds(n,t){return typeof n=="number"?Jn(n,t):typeof n=="string"?Sf(n,t):he(n.low,n.high,typeof t=="boolean"?t:n.unsigned)}le.fromValue=Ds;var jm=65536,$2=1<<24,qo=jm*jm,E1=qo*qo,Km=E1/2,Xm=po($2),Qn=po(0);le.ZERO=Qn;var Hr=po(0,!0);le.UZERO=Hr;var Mo=po(1);le.ONE=Mo;var N1=po(1,!0);le.UONE=N1;var qh=po(-1);le.NEG_ONE=qh;var A1=he(-1,2147483647,!1);le.MAX_VALUE=A1;var T1=he(-1,-1,!0);le.MAX_UNSIGNED_VALUE=T1;var An=he(0,-2147483648,!1);le.MIN_VALUE=An;var ht=le.prototype;ht.toInt=function(){return this.unsigned?this.low>>>0:this.low};ht.toNumber=function(){return this.unsigned?(this.high>>>0)*qo+(this.low>>>0):this.high*qo+(this.low>>>0)};ht.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(An)){var e=Jn(t),s=this.div(e),r=s.mul(e).sub(this);return s.toString(t)+r.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var o=Jn(qu(t,6),this.unsigned),i=this,a="";;){var u=i.div(o),c=i.sub(u.mul(o)).toInt()>>>0,l=c.toString(t);if(i=u,i.isZero())return l+a;for(;l.length<6;)l="0"+l;a=""+l+a}};ht.getHighBits=function(){return this.high};ht.getHighBitsUnsigned=function(){return this.high>>>0};ht.getLowBits=function(){return this.low};ht.getLowBitsUnsigned=function(){return this.low>>>0};ht.getNumBitsAbs=function(){if(this.isNegative())return this.eq(An)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&!(t&1<<e);e--);return this.high!=0?e+33:e+1};ht.isZero=function(){return this.high===0&&this.low===0};ht.eqz=ht.isZero;ht.isNegative=function(){return!this.unsigned&&this.high<0};ht.isPositive=function(){return this.unsigned||this.high>=0};ht.isOdd=function(){return(this.low&1)===1};ht.isEven=function(){return(this.low&1)===0};ht.equals=function(t){return Mn(t)||(t=Ds(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};ht.eq=ht.equals;ht.notEquals=function(t){return!this.eq(t)};ht.neq=ht.notEquals;ht.ne=ht.notEquals;ht.lessThan=function(t){return this.comp(t)<0};ht.lt=ht.lessThan;ht.lessThanOrEqual=function(t){return this.comp(t)<=0};ht.lte=ht.lessThanOrEqual;ht.le=ht.lessThanOrEqual;ht.greaterThan=function(t){return this.comp(t)>0};ht.gt=ht.greaterThan;ht.greaterThanOrEqual=function(t){return this.comp(t)>=0};ht.gte=ht.greaterThanOrEqual;ht.ge=ht.greaterThanOrEqual;ht.compare=function(t){if(Mn(t)||(t=Ds(t)),this.eq(t))return 0;var e=this.isNegative(),s=t.isNegative();return e&&!s?-1:!e&&s?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};ht.comp=ht.compare;ht.negate=function(){return!this.unsigned&&this.eq(An)?An:this.not().add(Mo)};ht.neg=ht.negate;ht.add=function(t){Mn(t)||(t=Ds(t));var e=this.high>>>16,s=this.high&65535,r=this.low>>>16,o=this.low&65535,i=t.high>>>16,a=t.high&65535,u=t.low>>>16,c=t.low&65535,l=0,h=0,d=0,f=0;return f+=o+c,d+=f>>>16,f&=65535,d+=r+u,h+=d>>>16,d&=65535,h+=s+a,l+=h>>>16,h&=65535,l+=e+i,l&=65535,he(d<<16|f,l<<16|h,this.unsigned)};ht.subtract=function(t){return Mn(t)||(t=Ds(t)),this.add(t.neg())};ht.sub=ht.subtract;ht.multiply=function(t){if(this.isZero())return Qn;if(Mn(t)||(t=Ds(t)),Zn){var e=Zn.mul(this.low,this.high,t.low,t.high);return he(e,Zn.get_high(),this.unsigned)}if(t.isZero())return Qn;if(this.eq(An))return t.isOdd()?An:Qn;if(t.eq(An))return this.isOdd()?An:Qn;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(Xm)&&t.lt(Xm))return Jn(this.toNumber()*t.toNumber(),this.unsigned);var s=this.high>>>16,r=this.high&65535,o=this.low>>>16,i=this.low&65535,a=t.high>>>16,u=t.high&65535,c=t.low>>>16,l=t.low&65535,h=0,d=0,f=0,m=0;return m+=i*l,f+=m>>>16,m&=65535,f+=o*l,d+=f>>>16,f&=65535,f+=i*c,d+=f>>>16,f&=65535,d+=r*l,h+=d>>>16,d&=65535,d+=o*c,h+=d>>>16,d&=65535,d+=i*u,h+=d>>>16,d&=65535,h+=s*l+r*c+o*u+i*a,h&=65535,he(f<<16|m,h<<16|d,this.unsigned)};ht.mul=ht.multiply;ht.divide=function(t){if(Mn(t)||(t=Ds(t)),t.isZero())throw Error("division by zero");if(Zn){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?Zn.div_u:Zn.div_s)(this.low,this.high,t.low,t.high);return he(e,Zn.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Hr:Qn;var s,r,o;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return Hr;if(t.gt(this.shru(1)))return N1;o=Hr}else{if(this.eq(An)){if(t.eq(Mo)||t.eq(qh))return An;if(t.eq(An))return Mo;var i=this.shr(1);return s=i.div(t).shl(1),s.eq(Qn)?t.isNegative()?Mo:qh:(r=this.sub(t.mul(s)),o=s.add(r.div(t)),o)}else if(t.eq(An))return this.unsigned?Hr:Qn;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();o=Qn}for(r=this;r.gte(t);){s=Math.max(1,Math.floor(r.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(s)/Math.LN2),u=a<=48?1:qu(2,a-48),c=Jn(s),l=c.mul(t);l.isNegative()||l.gt(r);)s-=u,c=Jn(s,this.unsigned),l=c.mul(t);c.isZero()&&(c=Mo),o=o.add(c),r=r.sub(l)}return o};ht.div=ht.divide;ht.modulo=function(t){if(Mn(t)||(t=Ds(t)),Zn){var e=(this.unsigned?Zn.rem_u:Zn.rem_s)(this.low,this.high,t.low,t.high);return he(e,Zn.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};ht.mod=ht.modulo;ht.rem=ht.modulo;ht.not=function(){return he(~this.low,~this.high,this.unsigned)};ht.and=function(t){return Mn(t)||(t=Ds(t)),he(this.low&t.low,this.high&t.high,this.unsigned)};ht.or=function(t){return Mn(t)||(t=Ds(t)),he(this.low|t.low,this.high|t.high,this.unsigned)};ht.xor=function(t){return Mn(t)||(t=Ds(t)),he(this.low^t.low,this.high^t.high,this.unsigned)};ht.shiftLeft=function(t){return Mn(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?he(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):he(0,this.low<<t-32,this.unsigned)};ht.shl=ht.shiftLeft;ht.shiftRight=function(t){return Mn(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?he(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):he(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};ht.shr=ht.shiftRight;ht.shiftRightUnsigned=function(t){if(Mn(t)&&(t=t.toInt()),t&=63,t===0)return this;var e=this.high;if(t<32){var s=this.low;return he(s>>>t|e<<32-t,e>>>t,this.unsigned)}else return t===32?he(e,0,this.unsigned):he(e>>>t-32,0,this.unsigned)};ht.shru=ht.shiftRightUnsigned;ht.shr_u=ht.shiftRightUnsigned;ht.toSigned=function(){return this.unsigned?he(this.low,this.high,!1):this};ht.toUnsigned=function(){return this.unsigned?this:he(this.low,this.high,!0)};ht.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};ht.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};ht.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};le.fromBytes=function(t,e,s){return s?le.fromBytesLE(t,e):le.fromBytesBE(t,e)};le.fromBytesLE=function(t,e){return new le(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};le.fromBytesBE=function(t,e){return new le(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)};const F1=Nl(S1),k2=n2({__proto__:null,default:F1},[S1]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wr=F1||k2;function Al(n){return Wr.fromString(n,!0,16)}const R1=Al("c3a5c85c97cb3127"),zr=Al("b492b66fbe98f273"),un=Al("9ae16a3b2f90404f");function jh(n){return n.xor(n.shru(47))}function _1(n,t,e){const s=n.slice(t,t+e);return Wr.fromBytes(Array.from(s),!0,!0)}function re(n,t){return _1(n,t,8)}function Ym(n,t){return _1(n,t,4)}function We(n,t){return t===0?n:n.shru(t).or(n.shl(64-t))}function fr(n,t,e=Al("9ddfea08eb382d69")){let s=n.xor(t).mul(e);s=s.xor(s.shru(47));let r=t.xor(s).mul(e);return r=r.xor(r.shru(47)),r=r.mul(e),r}function S2(n,t,e,s,r,o){r=r.add(n),o=We(o.add(r).add(s),21);const i=r;return r=r.add(t),r=r.add(e),o=o.add(We(r,44)),[r.add(s),o.add(i)]}function Iu(n,t,e,s){return S2(re(n,t),re(n,t+8),re(n,t+16),re(n,t+24),e,s)}function E2(n,t=n.length){if(t>=8){const e=un.add(t*2),s=re(n,0).add(un),r=re(n,t-8),o=We(r,37).mul(e).add(s),i=We(s,25).add(r).mul(e);return fr(o,i,e)}if(t>=4){const e=un.add(t*2),s=Ym(n,0);return fr(s.shl(3).add(t),Ym(n,t-4),e)}if(t>0){const e=n[0],s=n[t>>1],r=n[t-1],o=e+(s<<8),i=t+(r<<2);return jh(un.mul(o).xor(R1.mul(i))).mul(un)}return un}function N2(n,t=n.length){const e=un.add(t*2),s=re(n,0).mul(zr),r=re(n,8),o=re(n,t-8).mul(e),i=re(n,t-16).mul(un);return fr(We(s.add(r),43).add(We(o,30)).add(i),s.add(We(r.add(un),18)).add(o),e)}function A2(n,t=n.length){const e=un.add(t*2),s=re(n,0).mul(un),r=re(n,8),o=re(n,t-8).mul(e),i=re(n,t-16).mul(un),a=We(s.add(r),43).add(We(o,30)).add(i),u=fr(a,s.add(We(r.add(un),18)).add(o),e),c=re(n,16).mul(e),l=re(n,24),h=a.add(re(n,t-32)).mul(e),d=u.add(re(n,t-24)).mul(e);return fr(We(c.add(l),43).add(We(h,30)).add(d),c.add(We(l.add(s),18)).add(h),e)}function T2(n,t=n.length){const e=Wr.fromNumber(81,!0);if(t<=32)return t<=16?E2(n,t):N2(n,t);if(t<=64)return A2(n,t);let s=e,r=e.mul(zr).add(113),o=jh(r.mul(un).add(113)).mul(un),i=[Wr.UZERO,Wr.UZERO],a=[Wr.UZERO,Wr.UZERO];s=s.mul(un).add(re(n,0));let u=0;const c=(t-1>>6)*64,l=c+(t-1&63)-63;do s=We(s.add(r).add(i[0]).add(re(n,u+8)),37).mul(zr),r=We(r.add(i[1]).add(re(n,u+48)),42).mul(zr),s=s.xor(a[1]),r=r.add(i[0]).add(re(n,u+40)),o=We(o.add(a[0]),33).mul(zr),i=Iu(n,u,i[1].mul(zr),s.add(a[0])),a=Iu(n,u+32,o.add(a[1]),r.add(re(n,u+16))),[o,s]=[s,o],u+=64;while(u!==c);const h=zr.add(o.and(255).shl(1));return u=l,a[0]=a[0].add(t-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),s=We(s.add(r).add(i[0]).add(re(n,u+8)),37).mul(h),r=We(r.add(i[1]).add(re(n,u+48)),42).mul(h),s=s.xor(a[1].mul(9)),r=r.add(i[0].mul(9).add(re(n,u+40))),o=We(o.add(a[0]),33).mul(h),i=Iu(n,u,i[1].mul(h),s.add(a[0])),a=Iu(n,u+32,o.add(a[1]),r.add(re(n,u+16))),[o,s]=[s,o],fr(fr(i[0],a[0],h).add(jh(r).mul(R1)).add(o),fr(i[1],a[1],h).add(s),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sr(n,t){return t==="string"?pr(n):mo([n],t)}function F2(n,t){return n instanceof Float32Array&&t==="float32"||n instanceof Int32Array&&t==="int32"||n instanceof Uint8Array&&t==="bool"}function mo(n,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=Jr(n)),U().getBool("DEBUG")&&a2(n,t),F2(n,t))return n;if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool"){const e=new Uint8Array(n.length);for(let s=0;s<e.length;++s)Math.round(n[s])!==0&&(e[s]=1);return e}else throw new Error(`Unknown data type ${t}`)}function gn(){return U().platform.now()}function pr(n,t="utf-8"){return t=t||"utf-8",U().platform.encode(n,t)}function br(n,t="utf-8"){return t=t||"utf-8",U().platform.decode(n,t)}function ns(n){return U().platform.isTypedArray!=null?U().platform.isTypedArray(n):k1(n)}function Jr(n,t=[],e=!1){if(t==null&&(t=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||Bd(n)||n==null||ns(n)&&e)t.push(n);else if(Array.isArray(n)||ns(n))for(let s=0;s<n.length;++s)Jr(n[s],t,e);else{let s=-1;for(const r of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)Jr(n[r],t,e)}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class R2{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new O2)}profileKernel(t,e,s){let r;const o=()=>{r=s()};let i;const a=gn();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(o);else{o();for(const c of r)c.dataSync();i=Promise.resolve({kernelMs:gn()-a})}if(U().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<r.length;c++){const l=r[c];l.data().then(h=>{_2(h,l.dtype,t)})}return{kernelName:t,outputs:r,inputs:e,timeMs:i.then(c=>c.kernelMs),extraInfo:i.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:s,timeMs:r,inputs:o,extraInfo:i}=t;s.forEach(a=>{Promise.all([a.data(),r,i]).then(u=>{this.logger.logKernelProfile(e,a,u[0],u[1],o,u[2])})})}}function _2(n,t,e){if(t!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${e}'`),!0}return!1}class O2{logKernelProfile(t,e,s,r,o,i){const a=typeof r=="number"?Lo(`${r}ms`,9):r.error,u=Lo(t,25),c=e.rank,l=e.size,h=Lo(e.shape.toString(),14);let d="";for(const f in o){const m=o[f];if(m!=null){const p=m.shape||e.shape,x=p.length;d+=`${f}: ${x}D ${x>0?p:""} `}}console.log(`%c${u}	%c${a}	%c${c}D ${h}	%c${l}	%c${d}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M2(n,t,e){const s={},r={};for(let u=0;u<t.length;u++)s[t[u].id]=!0;for(let u=0;u<n.length;u++){const c=n[u],l=c.inputs;for(const h in l){const d=l[h];let f=!1;for(let m=0;m<t.length;m++)if(s[d.id]){c.outputs.forEach(p=>s[p.id]=!0),f=!0,r[c.id]=!0;break}if(f)break}}const o={};o[e.id]=!0;const i={};for(let u=n.length-1;u>=0;u--){const c=n[u],l=c.inputs;for(let h=0;h<c.outputs.length;h++)if(o[c.outputs[h].id]){for(const d in l)o[l[d].id]=!0,i[c.id]=!0;break}}const a=[];for(let u=0;u<n.length;u++){const c=n[u];if(r[c.id]&&i[c.id]){const l={};for(const d in c.inputs){const f=c.inputs[d];s[f.id]&&(l[d]=f)}const h=Object.assign({},c);h.inputs=l,h.outputs=c.outputs,a.push(h)}}return a}function B2(n,t,e,s){for(let r=t.length-1;r>=0;r--){const o=t[r],i=[];if(o.outputs.forEach(u=>{const c=n[u.id];c!=null?i.push(c):i.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const a=o.gradient(i);for(const u in o.inputs){if(!(u in a))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(a)}.`);const c=e(()=>a[u]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${c.dtype}'`);const l=o.inputs[u];if(!jt(c.shape,l.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${u}' has shape '${c.shape}', which does not match the shape of the input '${l.shape}'`);if(n[l.id]==null)n[l.id]=c;else{const h=n[l.id];n[l.id]=s(h,c),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zm=20,Ei=3,gh=7;function L2(n,t,e,s){const r=vt(t),o=P2(n,t,e,r),i=t.length,a=Pu(n,t,e,r,o),u=["Tensor"];return s&&(u.push(`  dtype: ${e}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(a.map(c=>"    "+c).join(`
`)),u.join(`
`)}function P2(n,t,e,s){const r=X(t),o=s[s.length-1],i=new Array(o).fill(0),a=t.length,u=e==="complex64"?_i(n):n;if(a>1)for(let c=0;c<r/o;c++){const l=c*o;for(let h=0;h<o;h++)i[h]=Math.max(i[h],Ri(u[l+h],0,e).length)}return i}function Ri(n,t,e){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(gh))} + ${parseFloat(n[1].toFixed(gh))}j`:na(n)?s=`'${n}'`:e==="bool"?s=O1(n):s=parseFloat(n.toFixed(gh)).toString(),Lo(s,t)}function O1(n){return n===0?"false":"true"}function Pu(n,t,e,s,r,o=!0){const i=e==="complex64"?2:1,a=t[0],u=t.length;if(u===0){if(e==="complex64"){const p=_i(n);return[Ri(p[0],0,e)]}return e==="bool"?[O1(n[0])]:[n[0].toString()]}if(u===1){if(a>Zm){const x=Ei*i;let g=Array.from(n.slice(0,x)),b=Array.from(n.slice((a-Ei)*i,a*i));return e==="complex64"&&(g=_i(g),b=_i(b)),["["+g.map((w,y)=>Ri(w,r[y],e)).join(", ")+", ..., "+b.map((w,y)=>Ri(w,r[a-Ei+y],e)).join(", ")+"]"]}return["["+(e==="complex64"?_i(n):Array.from(n)).map((x,g)=>Ri(x,r[g],e)).join(", ")+"]"]}const c=t.slice(1),l=s.slice(1),h=s[0]*i,d=[];if(a>Zm){for(let p=0;p<Ei;p++){const x=p*h,g=x+h;d.push(...Pu(n.slice(x,g),c,e,l,r,!1))}d.push("...");for(let p=a-Ei;p<a;p++){const x=p*h,g=x+h;d.push(...Pu(n.slice(x,g),c,e,l,r,p===a-1))}}else for(let p=0;p<a;p++){const x=p*h,g=x+h;d.push(...Pu(n.slice(x,g),c,e,l,r,p===a-1))}const f=u===2?",":"";d[0]="["+(a>0?d[0]+f:"");for(let p=1;p<d.length-1;p++)d[p]=" "+d[p]+f;let m=`,
`;for(let p=2;p<u;p++)m+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(o?"":m),d}function _i(n){const t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class je{constructor(t,e,s){if(this.dtype=e,this.shape=t.slice(),this.size=X(t),s!=null){const r=s.length;k(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Ce(e,this.size),this.strides=vt(t)}set(t,...e){e.length===0&&(e=[0]),k(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const s=this.locToIndex(e);this.values[s]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(const r of t){if(r<0||r>=this.shape[e]){const o=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(o)}e++}let s=t[t.length-1];for(let r=0;r<t.length-1;++r)s+=this.strides[r]*t[r];return this.values[s]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let s=0;s<t.length-1;++s)e+=this.strides[s]*t[s];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const e=new Array(this.shape.length);for(let s=0;s<e.length-1;++s)e[s]=Math.floor(t/this.strides[s]),t-=e[s]*this.strides[s];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return ds().makeTensor(this.values,this.shape,this.dtype)}}let ds=null,_o=null;function z2(n){ds=n}function V2(n){_o=n}class Te{constructor(t,e,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=X(t),this.strides=vt(t),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return _o.buffer(this.shape,this.dtype,t)}bufferSync(){return _o.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return gs(this.shape,t,this.dtype==="complex64")}arraySync(){return gs(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=ds().read(this.dataId);if(this.dtype==="string"){const e=await t;try{return e.map(s=>br(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),ds().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=ds().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>br(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await ds().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),ds().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return _o.print(this,t)}clone(){return this.throwIfDisposed(),_o.clone(this)}toString(t=!1){const e=this.dataSync();return L2(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),_o.cast(this,t)}variable(t=!0,e,s){return this.throwIfDisposed(),ds().makeVariable(this,t,e,s)}}Object.defineProperty(Te,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function K(){return Ld("Tensor",()=>Te)}K();class ju extends Te{constructor(t,e,s,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=s}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!jt(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);ds().disposeTensor(this),this.dataId=t.dataId,ds().incRef(this,null)}dispose(){ds().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(ju,Symbol.hasInstance,{value:n=>n instanceof Te&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Jm;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(Jm||(Jm={}));var Kh;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(Kh||(Kh={}));var Xh;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(Xh||(Xh={}));var Yh;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(Yh||(Yh={}));var Zh;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(Zh||(Zh={}));const W2={float32:Yh,int32:Kh,bool:Xh,complex64:Zh};function Fn(n,t){if(n==="string"||t==="string"){if(n==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return W2[n][t]}function Ef(n){return Fn(n,"int32")}function M1(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function B1(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ie(n,t){if(n.dtype===t.dtype)return[n,t];const e=Fn(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function L1(n){const t=[];return P1(n,t,new Set),t}function P1(n,t,e){if(n==null)return;if(n instanceof Te){t.push(n);return}if(!U2(n))return;const s=n;for(const r in s){const o=s[r];e.has(o)||(e.add(o),P1(o,t,e))}}function U2(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xh(n){return n.kernelName!=null}class Qm{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class jo{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Qm}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,s=1){return t in this.registryFactory?(Pn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:s},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:e,asyncInit:s}=this.initializeBackend(t);if(!(s?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new R2(this.backendInstance),!0}setupRegisteredKernels(){Gm(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Gm(t).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const s=e.factory();if(s&&!(s instanceof Rd)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,o=s.then(i=>r<this.pendingBackendInitId?!1:(this.registry[t]=i,this.pendingBackendInit=null,!0)).catch(i=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,Pn(`Initialization of backend ${t} failed`),Pn(i.stack||i.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[t]=s,{success:!0,asyncInit:!1}}catch(s){return Pn(`Initialization of backend ${t} failed`),Pn(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e],{success:r,asyncInit:o}=this.initializeBackend(s);if(o||r)return{name:s,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const s=this.state.tensorInfo.get(e),r=s.backend,o=this.readSync(e),i=r.refCount(e);r.disposeData(e,!0),s.backend=t,t.move(e,o,s.shape,s.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let s=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=e(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(t,e,s){t();try{const r=s();return e(),r}catch(r){throw e(),r}}nextTensorId(){return jo.nextTensorId++}nextVariableId(){return jo.nextVariableId++}clone(t){const e=B.runKernel(Da,{x:t}),s={x:t},r=i=>({x:()=>{const a="float32",u={x:i},c={dtype:a};return B.runKernel(la,u,c)}}),o=[];return this.addTapeNode(this.state.activeScope.name,s,[e],r,o,{}),e}runKernel(t,e,s){if(this.backendName==null&&this.backend,!(Wm(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,s){const r=this.backend.numDataIds();let o=0;s.forEach(u=>{o+=u.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-e-o-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,s=[];const r=this.isTapeOn(),o=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let u;const c=xh(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(xh(t)){const{kernelName:m,inputs:p,attrs:x}=t;this.backendName==null&&this.backend;const g=Wm(m,this.backendName);k(g!=null,()=>`Cannot find registered kernel '${m}' for backend '${this.backendName}'`),a=()=>{const b=this.backend.numDataIds();u=g.kernelFunc({inputs:p,attrs:x,backend:this.backend});const w=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(m,b,w);const y=w.map(v=>v.rank!=null?v:this.makeTensorFromTensorInfo(v));if(r){const v=this.getTensorsForGradient(m,p,y);s=this.saveTensorsForBackwardMode(v)}return y}}else{const{forwardFunc:m}=t,p=x=>{r&&(s=x.map(g=>this.keep(this.clone(g))))};a=()=>{const x=this.backend.numDataIds();u=this.tidy(()=>m(this.backend,p));const g=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,x,g),g}}const{inputs:l,attrs:h}=t,d=xh(t)?null:t.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=a():(f=this.profiler.profileKernel(c,l,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),e=f.outputs)}),r&&this.addTapeNode(c,l,e,d,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(m=>l[m]!=null?l[m].shape:null),outputShapes:e.map(m=>m.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(t,e,s){const r=Um(t);if(r!=null){const o=r.inputsToSave||[],i=r.outputsToSave||[];let a;r.saveAllInputs?(k(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(e).map(c=>e[c])):a=o.map(c=>e[c]);const u=s.filter((c,l)=>i[l]);return a.concat(u)}return[]}makeTensor(t,e,s,r){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let o=t;s==="string"&&na(t[0])&&(o=t.map(u=>pr(u)));const i=r.write(o,e,s),a=new Te(e,s,i,this.nextTensorId());if(this.trackTensor(a,r),s==="string"){const u=this.state.tensorInfo.get(i),c=c2(o);this.state.numBytes+=c-u.bytes,u.bytes=c}return a}makeTensorFromDataId(t,e,s,r){s=s||"float32";const o={dataId:t,shape:e,dtype:s};return this.makeTensorFromTensorInfo(o,r)}makeTensorFromTensorInfo(t,e){const{dataId:s,shape:r,dtype:o}=t,i=new Te(r,o,s,this.nextTensorId());return this.trackTensor(i,e),i}makeVariable(t,e=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==t.dtype&&(t=t.cast(r));const o=new ju(t,e,s,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let s=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(s=t.size*Wu(t.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:s})),t instanceof ju||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const s=t.size*Wu(t.dtype);this.state.numBytes-=s}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,s,r,o,i){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:s,saved:o},u=Um(t);u!=null&&(r=u.gradFunc),r!=null&&(a.gradient=c=>(c=c.map((l,h)=>{if(l==null){const d=s[h],f=en(d.size,d.dtype);return this.makeTensor(f,d.shape,d.dtype)}return l}),r(c.length>1?c:c[0],o,i))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=L1(t),s=new Set(e.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const i=this.state.activeScope.track[o];!i.kept&&!s.has(i.id)&&i.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(o=>{!o.kept&&o.scopeId===r.id&&this.track(o)})}gradients(t,e,s,r=!1){if(k(e.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));k(o instanceof Te,()=>"The result y returned by f() must be a tensor.");const i=M2(this.state.activeTape,e,o);if(!r&&i.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[o.id]=s??G2(o.shape),B2(a,i,c=>this.tidy(c),H2);const u=e.map(c=>a[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const l of c.saved)l.dispose()}),this.state.activeTape=null),{value:o,grads:u}})}customGrad(t){return k(Vh(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{k(e.every(a=>a instanceof Te),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};e.forEach((a,u)=>{r[u]=a});const o=(a,u)=>(s=t(...e,u),k(s.value instanceof Te,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),k(Vh(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),i=(a,u)=>{const c=s.gradFunc(a,u),l=Array.isArray(c)?c:[c];k(l.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),k(l.every(d=>d instanceof Te),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return l.forEach((d,f)=>{h[f]=()=>d}),h};return this.runKernelFunc({forwardFunc:o,backwardsFunc:i,inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=gn(),s=await this.backend.time(t);return s.wallMs=gn()-e,s}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Qm;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}jo.nextTensorId=0;jo.nextVariableId=0;function G2(n){const t=Md(X(n),"float32");return B.makeTensor(t,n,"float32")}function z1(){const n=n1();if(n._tfengine==null){const t=new d2(n);n._tfengine=new jo(t)}return g2(n._tfengine.ENV),z2(()=>n._tfengine),n._tfengine}const B=z1();function H2(n,t){const e={a:n,b:t};return B.runKernel(li,e)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q2(){return typeof navigator<"u"&&navigator!=null}function V1(n){if(n||q2()){if(n||(n=navigator),n.product==="ReactNative")return!0;const t=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!t){const e=n;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function W1(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yn=U();yn.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});yn.registerFlag("IS_BROWSER",()=>W1());yn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");yn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));yn.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));yn.registerFlag("PROD",()=>!1);yn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>yn.getBool("DEBUG"));yn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);yn.registerFlag("IS_TEST",()=>!1);yn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>yn.getBool("DEBUG"));yn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);yn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);yn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tl(n,t){let e=n;if(ns(n))return t==="string"?[]:[n.length];if(M1(n)){const r=n.channels||"RGBA";return[n.height,n.width*r.length]}else if(B1(n))return[n.buffer.size/(t==null?4:Wu(t))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(e)||ns(e)&&t!=="string";)s.push(e.length),e=e[0];return Array.isArray(n)&&U().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&U1(n,s,[]),s}function U1(n,t,e){if(e=e||[],!Array.isArray(n)&&!ns(n)){k(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}k(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),k(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);const s=t.slice(1);for(let r=0;r<n.length;++r)U1(n[r],s,e.concat(r))}function tg(n,t,e,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==t||n==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${s}' must be ${n} tensor, but got ${t} tensor`)}}function T(n,t,e,s="numeric"){if(n instanceof K())return tg(s,n.dtype,t,e),n;let r=ui(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),tg(s,r,t,e),n==null||!ns(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const u=n==null?"null":n.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${u}'`)}const o=Tl(n,r);!ns(n)&&!Array.isArray(n)&&(n=[n]);const a=r!=="string"?mo(n,r):Jr(n,[],!0);return B.makeTensor(a,o,r)}function G1(n,t,e,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,i)=>T(o,`${t}[${i}]`,e,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j2="__op";function V(n){const t=Object.keys(n);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const s=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+j2;const r=(...o)=>{B.startScope(e);try{const i=s(...o);return Bd(i)&&console.error("Cannot return a Promise inside of tidy."),B.endScope(i),i}catch(i){throw B.endScope(null),i}};return Object.defineProperty(r,"name",{value:e,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K2(n,t){const e=T(n,"real","complex"),s=T(t,"imag","complex");Od(e.shape,s.shape,`real and imag shapes, ${e.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:e,imag:s};return B.runKernel(qd,r)}const Qr=V({complex_:K2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fl(n,t,e,s){if(s==null)s=ui(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(B1(n)||M1(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return B.backend.createTensorFromGPUData(n,t||e,s)}if(!ns(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){sr(t);const r=X(t),o=X(e);k(r===o,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${o}`);for(let i=0;i<e.length;++i){const a=e[i],u=i===e.length-1?a!==X(t.slice(i)):!0;k(e[i]===t[i]||!u,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!ns(n)&&!Array.isArray(n)&&(n=[n]),t=t||e,n=s!=="string"?mo(n,s):Jr(n,[],!0),B.makeTensor(n,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zo(n,t,e){const s=Tl(n,e);return Fl(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ku={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Er{static join(t){return new Er(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(s=>ns(s)?s.buffer:s),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let s=0;s<t.length;s++){const r=t[s];s!==t.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=e+r.byteLength;this.shards.push({buffer:r,start:e,end:o}),e=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,e=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);const s=this.findShardForByte(t);if(s===-1)throw new Error(`Could not find start shard for byte ${t}`);const r=e-t,o=new ArrayBuffer(r),i=new Uint8Array(o);let a=0;for(let u=s;u<this.shards.length;u++){const c=this.shards[u],h=t+a-c.start,d=a,m=Math.min(e,c.end)-c.start,p=new Uint8Array(c.buffer,h,m-h);if(i.set(p,d),a+=p.length,e<c.end)break}return o}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(r){return t<r.start?-1:t>=r.end?1:0}if(e(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=X2(this.shards,e);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function X2(n,t){let e=0,s=n.length;for(;e<=s;){const r=Math.floor((s-e)/2)+e,o=t(n[r]);if(o===0)return r;o<0?s=r:e=r+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ks(){return B}function Jh(){return B.memory()}function W(n,t){return B.tidy(n,t)}function _t(n){L1(n).forEach(e=>e.dispose())}function Ms(n){return B.keep(n)}function H1(n,t,e=1){return B.registerBackend(n,t,e)}function Y2(){return B.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ko=4;async function eg(n,t){const e=[],s=[],r=Array.isArray(n)?n.map(i=>i.name):Object.keys(n);for(let i=0;i<r.length;++i){const a=r[i],u=Array.isArray(n)?n[i].tensor:n[a];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${u.dtype}`);const c={name:a,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const l=new Promise(async h=>{const d=await u.bytes(),f=d.reduce((x,g)=>x+g.length,0)+Ko*d.length,m=new Uint8Array(f);let p=0;for(let x=0;x<d.length;x++){const g=d[x],b=new Uint8Array(new Uint32Array([g.length]).buffer);m.set(b,p),p+=Ko,m.set(g,p),p+=g.length}h(m)});s.push(l)}else s.push(u.data());t!=null&&(c.group=t),e.push(c)}const o=await Promise.all(s);return{data:tI(o),specs:e}}function Z2(n,t){const e=new Er(n),s={};let r=0;for(const o of t){const i=J2(o,(a,u)=>e.slice(r+a,r+u));s[o.name]=Q2(o,e.slice(r,r+i)),r+=i}return s}function J2(n,t){const e=X(n.shape);let s;if("quantization"in n){const r=n.quantization;s=Ku[r.dtype]}else if(n.dtype==="string"){let r=0;for(let o=0;o<e;o++)r+=Ko+new Uint32Array(t(r,r+Ko))[0];return r}else s=Ku[n.dtype];return e*s}function Q2(n,t){const e=n.name,s=n.dtype,r=n.shape,o=X(r);let i,a=0;if("quantization"in n){const u=n.quantization;if(u.dtype==="uint8"||u.dtype==="uint16"){if(!("min"in u&&"scale"in u))throw new Error(`Weight ${n.name} with quantization ${u.dtype} doesn't have corresponding metadata min and scale.`)}else if(u.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${u.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${u.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const c=Ku[u.dtype],l=u.dtype==="uint8"?new Uint8Array(t):new Uint16Array(t);if(s==="float32")if(u.dtype==="uint8"||u.dtype==="uint16"){i=new Float32Array(l.length);for(let h=0;h<l.length;h++){const d=l[h];i[h]=d*u.scale+u.min}}else if(u.dtype==="float16")i=lI()(l);else throw new Error(`Unsupported quantization type ${u.dtype} for weight type float32.`);else if(s==="int32"){if(u.dtype!=="uint8"&&u.dtype!=="uint16")throw new Error(`Unsupported quantization type ${u.dtype} for weight type int32.`);i=new Int32Array(l.length);for(let h=0;h<l.length;h++){const d=l[h];i[h]=Math.round(d*u.scale+u.min)}}else throw new Error(`Unsupported dtype in weight '${e}': ${s}`);a+=o*c}else if(s==="string"){const u=X(n.shape);i=[];for(let c=0;c<u;c++){const l=new Uint32Array(t.slice(a,a+Ko))[0];a+=Ko;const h=new Uint8Array(t.slice(a,a+l));i.push(h),a+=l}}else{const u=Ku[s];if(s==="float32")i=new Float32Array(t);else if(s==="int32")i=new Int32Array(t);else if(s==="bool")i=new Uint8Array(t);else if(s==="complex64"){i=new Float32Array(t);const c=new Float32Array(i.length/2),l=new Float32Array(i.length/2);for(let m=0;m<c.length;m++)c[m]=i[m*2],l[m]=i[m*2+1];const h=zo(c,r,"float32"),d=zo(l,r,"float32"),f=Qr(h,d);return h.dispose(),d.dispose(),f}else throw new Error(`Unsupported dtype in weight '${e}': ${s}`);a+=o*u}return zo(i,r,s)}function tI(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0;const e=[];n.forEach(o=>{if(t+=o.byteLength,e.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(t);let r=0;return e.forEach(o=>{s.set(new Uint8Array(o.buffer),r),r+=o.byteLength}),s.buffer}const Nf=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function ng(n){return Nf?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function eI(n){if(Nf)return Buffer.from(n).toString("base64");const t=new Uint8Array(n);let e="";for(let s=0,r=t.length;s<r;s++)e+=String.fromCharCode(t[s]);return btoa(e)}function nI(n){if(Nf){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(n),e=new Uint8Array(t.length);for(let s=0;s<t.length;++s)e.set([t.charCodeAt(s)],s);return e.buffer}function sI(n){return Er.join(n)}function rI(n,t){const e={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:t};return n.signature!=null&&(e.signature=n.signature),n.userDefinedMetadata!=null&&(e.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(e.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(e.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(e.trainingConfig=n.trainingConfig),e}function oI(n,t,e){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=e}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function iI(n,t){let e,s;return n.weightsManifest!=null&&([e,s]=await t(n.weightsManifest)),oI(n,e,s)}function Af(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:ng(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:ng(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new Er(n.weightData).byteLength}}function sg(n){const t=[];for(const e of n)t.push(...e.weights);return t}function aI(){const n=e=>{let s=e<<13,r=0;for(;!(s&8388608);)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=n(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function uI(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let t=1;t<31;t++)n[t]=t<<23;for(let t=33;t<63;t++)n[t]=2147483648+(t-32<<23);return n}function cI(){const n=new Uint32Array(64);for(let t=0;t<64;t++)n[t]=1024;return n[0]=n[32]=0,n}function lI(){const n=aI(),t=uI(),e=cI();return s=>{const r=new ArrayBuffer(4*s.length),o=new Uint32Array(r);for(let i=0;i<s.length;i++){const a=s[i],u=n[e[a>>10]+(a&1023)]+t[a>>10];o[i]=u}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pe{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Pe.instance==null&&(Pe.instance=new Pe),Pe.instance}static registerSaveRouter(t){Pe.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Pe.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Pe.getHandlers(t,"save")}static getLoadHandlers(t,e){return Pe.getHandlers(t,"load",e)}static getHandlers(t,e,s){const r=[];return(e==="load"?Pe.getInstance().loadRouters:Pe.getInstance().saveRouters).forEach(i=>{const a=i(t,s);a!==null&&r.push(a)}),r}}const hI=n=>Pe.getSaveHandlers(n),dI=(n,t)=>Pe.getLoadHandlers(n,t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qh="tensorflowjs",td=1,qr="models_store",cr="model_info_store";function q1(){if(!U().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ed(n){const t=n.result;t.createObjectStore(qr,{keyPath:"modelPath"}),t.createObjectStore(cr,{keyPath:"modelPath"})}class to{constructor(t){if(this.indexedDB=q1(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((s,r)=>{const o=this.indexedDB.open(Qh,td);o.onupgradeneeded=()=>ed(o),o.onsuccess=()=>{const i=o.result;if(e==null){const a=i.transaction(qr,"readonly"),c=a.objectStore(qr).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return i.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(c.result.modelArtifacts)},c.onerror=l=>(i.close(),r(c.error)),a.oncomplete=()=>i.close()}else{e.weightData=Er.join(e.weightData);const a=Af(e),u=i.transaction(cr,"readwrite");let c=u.objectStore(cr),l;try{l=c.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(d){return r(d)}let h;l.onsuccess=()=>{h=i.transaction(qr,"readwrite");const d=h.objectStore(qr);let f;try{f=d.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:a})}catch(m){return r(m)}f.onsuccess=()=>s({modelArtifactsInfo:a}),f.onerror=m=>{c=u.objectStore(cr);const p=c.delete(this.modelPath);p.onsuccess=()=>(i.close(),r(f.error)),p.onerror=x=>(i.close(),r(f.error))}},l.onerror=d=>(i.close(),r(l.error)),u.oncomplete=()=>{h==null?i.close():h.oncomplete=()=>i.close()}}},o.onerror=i=>r(o.error)})}}to.URL_SCHEME="indexeddb://";const j1=n=>U().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(to.URL_SCHEME)?fI(n.slice(to.URL_SCHEME.length)):null;Pe.registerSaveRouter(j1);Pe.registerLoadRouter(j1);function fI(n){return new to(n)}function pI(n){return n.startsWith(to.URL_SCHEME)?n.slice(to.URL_SCHEME.length):n}class mI{constructor(){this.indexedDB=q1()}async listModels(){return new Promise((t,e)=>{const s=this.indexedDB.open(Qh,td);s.onupgradeneeded=()=>ed(s),s.onsuccess=()=>{const r=s.result,o=r.transaction(cr,"readonly"),a=o.objectStore(cr).getAll();a.onsuccess=()=>{const u={};for(const c of a.result)u[c.modelPath]=c.modelArtifactsInfo;t(u)},a.onerror=u=>(r.close(),e(a.error)),o.oncomplete=()=>r.close()},s.onerror=r=>e(s.error)})}async removeModel(t){return t=pI(t),new Promise((e,s)=>{const r=this.indexedDB.open(Qh,td);r.onupgradeneeded=()=>ed(r),r.onsuccess=()=>{const o=r.result,i=o.transaction(cr,"readwrite"),a=i.objectStore(cr),u=a.get(t);let c;u.onsuccess=()=>{if(u.result==null)return o.close(),s(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const l=a.delete(t),h=()=>{c=o.transaction(qr,"readwrite");const f=c.objectStore(qr).delete(t);f.onsuccess=()=>e(u.result.modelArtifactsInfo),f.onerror=m=>s(u.error)};l.onsuccess=h,l.onerror=d=>(h(),o.close(),s(u.error))}},u.onerror=l=>(o.close(),s(u.error)),i.oncomplete=()=>{c==null?o.close():c.oncomplete=()=>o.close()}},r.onerror=o=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zs="/",Oo="tensorflowjs_models",K1="info",gI="model_topology",xI="weight_specs",bI="weight_data",wI="model_metadata";function X1(n){return{info:[Oo,n,K1].join(Zs),topology:[Oo,n,gI].join(Zs),weightSpecs:[Oo,n,xI].join(Zs),weightData:[Oo,n,bI].join(Zs),modelMetadata:[Oo,n,wI].join(Zs)}}function Y1(n){for(const t of Object.values(n))window.localStorage.removeItem(t)}function yI(n){const t=n.split(Zs);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(Zs)}function vI(n){return n.startsWith(eo.URL_SCHEME)?n.slice(eo.URL_SCHEME.length):n}class eo{constructor(t){if(!U().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=X1(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),s=JSON.stringify(t.weightSpecs),r=Af(t),o=Er.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,eI(o));const i={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:r}}catch{throw Y1(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const a=JSON.parse(o);e.format=a.format,e.generatedBy=a.generatedBy,e.convertedBy=a.convertedBy,a.signature!=null&&(e.signature=a.signature),a.userDefinedMetadata!=null&&(e.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(e.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(e.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(e.trainingConfig=a.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=nI(i),e}}eo.URL_SCHEME="localstorage://";const Z1=n=>U().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(eo.URL_SCHEME)?CI(n.slice(eo.URL_SCHEME.length)):null;Pe.registerSaveRouter(Z1);Pe.registerLoadRouter(Z1);function CI(n){return new eo(n)}class DI{constructor(){k(U().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),k(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=Oo+Zs,s=Zs+K1;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(e)&&o.endsWith(s)){const i=yI(o);t[i]=JSON.parse(this.LS.getItem(o))}}return t}async removeModel(t){t=vI(t);const e=X1(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(e.info));return Y1(e),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rg="://";class Ss{constructor(){this.managers={}}static getInstance(){return Ss.instance==null&&(Ss.instance=new Ss),Ss.instance}static registerManager(t,e){k(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(rg)&&(t=t.slice(0,t.indexOf(rg))),k(t.length>0,()=>"scheme must not be an empty string.");const s=Ss.getInstance();k(s.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),s.managers[t]=e}static getManager(t){const e=Ss.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(Ss.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class II{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!U().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return k1(t)}}if(U().get("IS_BROWSER")){U().setPlatform("browser",new II);try{Ss.registerManager(eo.URL_SCHEME,new DI)}catch{}try{Ss.registerManager(to.URL_SCHEME,new mI)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $I={importFetch:()=>require("node-fetch")};let bh;class kI{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return U().global.fetch!=null?U().global.fetch(t,e):(bh==null&&(bh=$I.importFetch()),bh(t,e))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}}U().get("IS_NODE")&&!U().get("IS_BROWSER")&&U().setPlatform("node",new kI);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ot(n,t="float32",e){return t=t||"float32",sr(n),new je(n,t,e)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SI(n,t){const e=T(n,"x","cast");if(!u2(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:e},r={dtype:t};return B.runKernel(la,s,r)}const mt=V({cast_:SI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EI(n){const e={x:T(n,"x","clone","string_or_numeric")};return B.runKernel(Da,e)}const Kr=V({clone_:EI});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NI(n,t=!1){console.log(n.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */z1();const AI={buffer:Ot,cast:mt,clone:Kr,print:NI};V2(AI);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TI(n,t){let e=T(n,"a","add"),s=T(t,"b","add");[e,s]=Ie(e,s);const r={a:e,b:s};return B.runKernel(li,r)}const rt=V({add_:TI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FI(n,t){let e=T(n,"a","floorDiv"),s=T(t,"b","floorDiv");[e,s]=Ie(e,s);const r={a:e,b:s};return B.runKernel(va,r)}const J1=V({floorDiv_:FI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RI(n,t){let e=T(n,"a","div"),s=T(t,"b","div");if([e,s]=Ie(e,s),e.dtype==="int32"&&s.dtype==="int32")return J1(e,s);const r={a:e,b:s},o={};return B.runKernel(ma,r,o)}const $t=V({div_:RI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _I(n,t){let e=T(n,"a","mul"),s=T(t,"b","mul");[e,s]=Ie(e,s);const r={a:e,b:s};return B.runKernel(Fa,r)}const M=V({mul_:_I});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OI(n){const t=T(n,"x","abs");if(t.dtype==="complex64"){const e={x:t};return B.runKernel(Mc,e)}else{const e={x:t};return B.runKernel(Nc,e)}}const an=V({abs_:OI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MI(n){const e={x:T(n,"x","acos")};return B.runKernel(sa,e)}const BI=V({acos_:MI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LI(n){const e={x:T(n,"x","acosh")};return B.runKernel(ra,e)}const PI=V({acosh_:LI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zI(n,t=null,e=!1){const r={x:T(n,"x","all","bool")},o={axis:t,keepDims:e};return B.runKernel(zd,r,o)}const Q1=V({all_:zI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VI(n,t=null,e=!1){const r={x:T(n,"x","any","bool")},o={axis:t,keepDims:e};return B.runKernel(Vd,r,o)}const nd=V({any_:VI});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WI(n,t=0){const s={x:T(n,"x","argMax")},r={axis:t};return B.runKernel(Ac,s,r)}const Wi=V({argMax_:WI});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UI(n,t=0){const s={x:T(n,"x","argMin")},r={axis:t};return B.runKernel(Tc,s,r)}const GI=V({argMin_:UI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HI(n){const e={x:T(n,"x","asin")};return B.runKernel(oa,e)}const qI=V({asin_:HI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jI(n){const e={x:T(n,"x","asinh")};return B.runKernel(ia,e)}const KI=V({asinh_:jI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XI(n){const e={x:T(n,"x","atan")};return B.runKernel(aa,e)}const YI=V({atan_:XI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZI(n,t){let e=T(n,"a","atan2"),s=T(t,"b","atan2");[e,s]=Ie(e,s);const r={a:e,b:s};return B.runKernel(ca,r)}const JI=V({atan2_:ZI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QI(n){const e={x:T(n,"x","atanh")};return B.runKernel(ua,e)}const t$=V({atanh_:QI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ja(n,t,e,s,r="NHWC",o){const i=n[3],a=[...t,i],u=or(r);return Ke(n,a,e,o,s,null,null,u)}function rs(n,t,e,s,r,o,i="channelsLast"){const[a,u]=Ui(t);let c;if(i==="channelsLast")c=[a,u,n[3],n[3]];else if(i==="channelsFirst")c=[a,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return Ke(n,c,e,s,r,o,!1,i)}function rr(n,t,e,s,r,o,i="NDHWC"){const[a,u,c]=sd(t);let l,h;if(i==="NDHWC")h="channelsLast",l=[a,u,c,n[4],n[4]];else if(i==="NCDHW")h="channelsFirst",l=[a,u,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return Nr(n,l,e,s,r,!1,h,o)}function Ke(n,t,e,s,r,o,i=!1,a="channelsLast"){let[u,c,l,h]=[-1,-1,-1,-1];if(a==="channelsLast")[u,c,l,h]=n;else if(a==="channelsFirst")[u,h,c,l]=n;else throw new Error(`Unknown dataFormat ${a}`);const[d,f,,m]=t,[p,x]=Ui(e),[g,b]=Ui(s),w=Vo(d,g),y=Vo(f,b),{padInfo:v,outHeight:C,outWidth:D}=s$(r,c,l,p,x,w,y,o,a),I=i?m*h:m;let $;return a==="channelsFirst"?$=[u,I,C,D]:a==="channelsLast"&&($=[u,C,D,I]),{batchSize:u,dataFormat:a,inHeight:c,inWidth:l,inChannels:h,outHeight:C,outWidth:D,outChannels:I,padInfo:v,strideHeight:p,strideWidth:x,filterHeight:d,filterWidth:f,effectiveFilterHeight:w,effectiveFilterWidth:y,dilationHeight:g,dilationWidth:b,inShape:n,outShape:$,filterShape:t}}function Nr(n,t,e,s,r,o=!1,i="channelsLast",a){let[u,c,l,h,d]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[u,c,l,h,d]=n;else if(i==="channelsFirst")[u,d,c,l,h]=n;else throw new Error(`Unknown dataFormat ${i}`);const[f,m,p,,x]=t,[g,b,w]=sd(e),[y,v,C]=sd(s),D=Vo(f,y),I=Vo(m,v),$=Vo(p,C),{padInfo:S,outDepth:E,outHeight:N,outWidth:R}=r$(r,c,l,h,g,b,w,D,I,$,a),L=o?x*d:x;let O;return i==="channelsFirst"?O=[u,L,E,N,R]:i==="channelsLast"&&(O=[u,E,N,R,L]),{batchSize:u,dataFormat:i,inDepth:c,inHeight:l,inWidth:h,inChannels:d,outDepth:E,outHeight:N,outWidth:R,outChannels:L,padInfo:S,strideDepth:g,strideHeight:b,strideWidth:w,filterDepth:f,filterHeight:m,filterWidth:p,effectiveFilterDepth:D,effectiveFilterHeight:I,effectiveFilterWidth:$,dilationDepth:y,dilationHeight:v,dilationWidth:C,inShape:n,outShape:O,filterShape:t}}function e$(n,t,e,s,r){s==null&&(s=Tf(n,t,e));const o=n[0],i=n[1],a=Gi((o-t+2*s)/e+1,r),u=Gi((i-t+2*s)/e+1,r);return[a,u]}function n$(n,t,e,s,r,o){r==null&&(r=Tf(n,t[0],s[0]));const i=[0,0,0,e];for(let a=0;a<3;a++)n[a]+2*r>=t[a]&&(i[a]=Gi((n[a]-t[a]+2*r)/s[a]+1,o));return i}function Tf(n,t,e,s=1){const r=Vo(t,s);return Math.floor((n[0]*(e-1)-e+r)/2)}function Ui(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function sd(n){return typeof n=="number"?[n,n,n]:n}function Vo(n,t){return t<=1?n:n+(n-1)*(t-1)}function s$(n,t,e,s,r,o,i,a,u){let c,l,h;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const f=e$([t,e],o,s,n,a);l=f[0],h=f[1]}else if(n==="same"){l=Math.ceil(t/s),h=Math.ceil(e/r);const d=Math.max(0,(l-1)*s+o-t),f=Math.max(0,(h-1)*r+i-e),m=Math.floor(d/2),p=d-m,x=Math.floor(f/2),g=f-x;c={top:m,bottom:p,left:x,right:g,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-o+1)/s),h=Math.ceil((e-i+1)/r);else if(typeof n=="object"){const d=u==="channelsLast"?n[1][0]:n[2][0],f=u==="channelsLast"?n[1][1]:n[2][1],m=u==="channelsLast"?n[2][0]:n[3][0],p=u==="channelsLast"?n[2][1]:n[3][1];c={top:d,bottom:f,left:m,right:p,type:d===0&&f===0&&m===0&&p===0?"VALID":"EXPLICIT"},l=Gi((t-o+d+f)/s+1,a),h=Gi((e-i+m+p)/r+1,a)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:l,outWidth:h}}function r$(n,t,e,s,r,o,i,a,u,c,l){let h,d,f,m;if(n==="valid"&&(n=0),typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const x=n$([t,e,s,1],[a,u,c],1,[r,o,i],n,l);d=x[0],f=x[1],m=x[2]}else if(n==="same"){d=Math.ceil(t/r),f=Math.ceil(e/o),m=Math.ceil(s/i);const p=(d-1)*r+a-t,x=(f-1)*o+u-e,g=(m-1)*i+c-s,b=Math.floor(p/2),w=p-b,y=Math.floor(x/2),v=x-y,C=Math.floor(g/2),D=g-C;h={top:y,bottom:v,left:C,right:D,front:b,back:w,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:d,outHeight:f,outWidth:m}}function Gi(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function no(n){const[t,e,s]=Ui(n);return t===1&&e===1&&s===1}function nn(n,t){return no(n)||no(t)}function so(n){return Ui(n).every(t=>t>0)}function or(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Cn(n,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")k(Ho(t),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(r=>{k(Ho(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${r}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${t}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o$(n,t){const s={x:T(n,"x","reshape","string_or_numeric")},r={shape:t};return B.runKernel(gl,s,r)}const z=V({reshape_:o$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i$(n,t,e,s,r){const o=T(n,"x","avgPool","float32"),i=1;k(nn(e,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`);let a=o,u=!1;o.rank===3&&(u=!0,a=z(o,[1,o.shape[0],o.shape[1],o.shape[2]])),k(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),Cn("avgPool",s,r);const c={x:a},l={filterSize:t,strides:e,pad:s,dimRoundingMode:r};let h=B.runKernel(Fc,c,l);return h=mt(h,o.dtype),u?z(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Ff=V({avgPool_:i$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a$(n,t,e,s,r,o="NDHWC"){const i=T(n,"x","avgPool3d","float32");let a=i,u=!1;i.rank===4&&(u=!0,a=z(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),k(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),k(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),k(typeof e=="number"&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),Cn("avgPool3d",s,r);const c={x:a},l={filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:o};let h=B.runKernel(Rc,c,l);return h=mt(h,a.dtype),u?z(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const u$=V({avgPool3d_:a$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c$(n,t=0){k(n.length>=1,()=>"Pass at least one tensor to concat");const e=G1(n,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),e.length===1)return Kr(e[0]);const s=e,r={axis:t};return B.runKernel(Bc,s,r)}const wn=V({concat_:c$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l$(n,t,e=!1,s=!1){let r=T(n,"a","matMul"),o=T(t,"b","matMul");[r,o]=Ie(r,o);const i={a:r,b:o},a={transposeA:e,transposeB:s};return B.runKernel(_c,i,a)}const Ht=V({matMul_:l$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h$(n){const e={x:T(n,"x","sigmoid","float32")};return B.runKernel(Ua,e)}const hi=V({sigmoid_:h$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d$(n,t,e){const s=T(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},o={begin:t,size:e};return B.runKernel(vl,r,o)}const oe=V({slice_:d$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f$(n){const e={x:T(n,"x","tanh","float32")};return B.runKernel(Xa,e)}const Rf=V({tanh_:f$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p$(n,t,e){const s=T(n,"x","batchToSpaceND"),r=t.reduce((a,u)=>a*u);k(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),k(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),k(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);const o={x:s},i={blockShape:t,crops:e};return B.runKernel(Oc,o,i)}const _f=V({batchToSpaceND_:p$});function m$(n){let t;return n.rank===0||n.rank===1?t=z(n,[1,1,1,n.size]):n.rank===2?t=z(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?t=z(n,[1,n.shape[0],n.shape[1],n.shape[2]]):t=n,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g$(n,t,e,s,r,o){o==null&&(o=.001);const i=T(n,"x","batchNorm"),a=T(t,"mean","batchNorm"),u=T(e,"variance","batchNorm");let c;r!=null&&(c=T(r,"scale","batchNorm"));let l;s!=null&&(l=T(s,"offset","batchNorm")),k(a.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k(l==null||a.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:m$(i),scale:c,offset:l,mean:a,variance:u},f={varianceEpsilon:o},m=B.runKernel(qc,d,f);return z(m,i.shape)}const Rl=V({batchNorm_:g$});function x$(n,t,e,s,r,o){const i=T(n,"x","batchNorm"),a=T(t,"mean","batchNorm"),u=T(e,"variance","batchNorm");let c;r!=null&&(c=T(r,"scale","batchNorm"));let l;return s!=null&&(l=T(s,"offset","batchNorm")),k(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),k(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),k(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&k(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),l!=null&&k(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),Rl(i,a,u,l,c,o)}const b$=V({batchNorm2d_:x$});function w$(n,t,e,s,r,o){const i=T(n,"x","batchNorm"),a=T(t,"mean","batchNorm"),u=T(e,"variance","batchNorm");let c;r!=null&&(c=T(r,"scale","batchNorm"));let l;return s!=null&&(l=T(s,"offset","batchNorm")),k(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),k(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),k(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&k(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),l!=null&&k(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),Rl(i,a,u,l,c,o)}const y$=V({batchNorm3d_:w$});function v$(n,t,e,s,r,o){const i=T(n,"x","batchNorm"),a=T(t,"mean","batchNorm"),u=T(e,"variance","batchNorm");let c;r!=null&&(c=T(r,"scale","batchNorm"));let l;return s!=null&&(l=T(s,"offset","batchNorm")),k(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),k(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),k(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&k(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),l!=null&&k(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),Rl(i,a,u,l,c,o)}const C$=V({batchNorm4d_:v$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D$(n,t,e){const s=T(n,"x","bincount"),r=T(t,"weights","bincount");k(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),k(e>=0,()=>`size must be non-negative, but got ${e}.`),k(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const o={x:s,weights:r},i={size:e};return B.runKernel(Gd,o,i)}const I$=V({bincount_:D$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $$(n,t){let e=T(n,"broadcastTo","x");const s=e.shape;if(sr(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const c=e.shape.slice();for(;c.length<t.length;)c.unshift(1);e=z(e,c)}const r=e.shape,o=Array.from(t);for(let c=t.length-1;c>=0;c--)if(r[c]===t[c])o[c]=1;else if(e.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(o.map((c,l)=>c>1?l:-1).filter(c=>c>=0).length===0)return Kr(e);const a={x:e},u={reps:o};return B.runKernel(Ya,a,u)}const Pi=V({broadcastTo_:$$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k$(n){const e={x:T(n,"x","ceil","float32")};return B.runKernel(ha,e)}const S$=V({ceil_:k$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _l(n,t,e){sr(n),e=e||ui(t);const s={shape:n,value:t,dtype:e};return B.runKernel(of,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E$(n,t,e){const s=T(n,"x","clipByValue");if(k(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return _l(s.shape,t,s.dtype);const r={x:s},o={clipValueMin:t,clipValueMax:e};return B.runKernel(da,r,o)}const Un=V({clipByValue_:E$});function N$(n){return wn(n,0)}const A$=V({concat1d_:N$});function T$(n,t){return wn(n,t)}const F$=V({concat2d_:T$});function R$(n,t){return wn(n,t)}const _$=V({concat3d_:R$});function O$(n,t){return wn(n,t)}const M$=V({concat4d_:O$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B$(n,t,e,s,r="NHWC",o=[1,1],i){const a=T(n,"x","conv2d","float32"),u=T(t,"filter","conv2d","float32");let c=a,l=!1;a.rank===3&&(l=!0,c=z(a,[1,a.shape[0],a.shape[1],a.shape[2]])),k(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),k(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Cn("conv2d",s,i);const h=r==="NHWC"?c.shape[3]:c.shape[1];k(h===u.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`),k(nn(e,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),k(so(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),k(so(e),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:c,filter:u},f={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i},m=B.runKernel(Lc,d,f);return l?z(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const ro=V({conv2d_:B$});function L$(n,t,e,s,r="NWC",o=1,i){const a=T(n,"x","conv1d"),u=T(t,"filter","conv1d");let c=a,l=!1;a.rank===2&&(l=!0,c=z(a,[1,a.shape[0],a.shape[1]])),k(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),k(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Cn("conv1d",s,i),k(c.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`),k(nn(e,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${o}'`),k(so(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),k(so(e),()=>"Error in conv1D: Stride should be larger than 0."),k(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const h=z(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=z(c,[c.shape[0],1,c.shape[1],c.shape[2]]),x=ro(d,h,[1,e],s,"NHWC",[1,o],i);return l?z(x,[x.shape[2],x.shape[3]]):z(x,[x.shape[0],x.shape[2],x.shape[3]])}const tx=V({conv1d_:L$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P$(n,t,e,s,r,o="NHWC",i){k(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let a=n,u=t,c=!1;t.rank===3&&(c=!0,u=z(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,n[0],n[1],n[2]]),k(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),k(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),k(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const l=o==="NHWC"?a[3]:a[1],h=o==="NHWC"?u.shape[3]:u.shape[1];k(l===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[2]}.`),k(h===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${e.shape[3]}.`),Cn("conv2dDerInput",r,i);const d={dy:u,filter:e},f={strides:s,pad:r,dataFormat:o,dimRoundingMode:i,inputShape:a},m=B.runKernel(Pc,d,f);return c?z(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Of=V({conv2DBackpropInput_:P$});function z$(n,t,e,s,r,o){const i=T(n,"x","conv2dTranspose"),a=T(t,"filter","conv2dTranspose");return Of(e,i,a,s,r,"NHWC",o)}const ex=V({conv2dTranspose_:z$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V$(n,t,e,s,r="NDHWC",o=[1,1,1]){const i=T(n,"x","conv3d"),a=T(t,"filter","conv3d");let u=i,c=!1;i.rank===4&&(c=!0,u=z(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),k(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),k(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),k(u.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${a.shape[3]}.`),k(nn(e,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),k(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),k(so(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),k(so(e),()=>"Error in conv3D: Strides should be larger than 0.");const l={x:u,filter:a},h={strides:e,pad:s,dataFormat:r,dilations:o},d=B.runKernel(zc,l,h);return c?z(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const W$=V({conv3d_:V$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U$(n,t,e,s,r){k(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let o=n,i=t,a=!1;t.rank===4&&(a=!0,i=z(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const u=o[4],c=i.shape[4];k(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),k(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),k(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),k(u===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[3]}.`),k(c===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${e.shape[4]}.`);const l={dy:i,filter:e},h={pad:r,strides:s,inputShape:o},d=B.runKernel(Xd,l,h);return a?z(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const nx=V({conv3DBackpropInput_:U$});function G$(n,t,e,s,r){const o=T(n,"x","conv3dTranspose"),i=T(t,"filter","conv3dTranspose");return nx(e,o,i,s,r)}const H$=V({conv3dTranspose_:G$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q$(n){const e={x:T(n,"x","cos","float32")};return B.runKernel(fa,e)}const Mf=V({cos_:q$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j$(n){const e={x:T(n,"x","cosh","float32")};return B.runKernel(pa,e)}const sx=V({cosh_:j$});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K$(n,t=0,e=!1,s=!1){const o={x:T(n,"x","cumprod")},i={axis:t,exclusive:e,reverse:s};return B.runKernel(Yd,o,i)}const rd=V({cumprod_:K$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X$(n,t=0,e=!1,s=!1){const o={x:T(n,"x","cumsum")},i={axis:t,exclusive:e,reverse:s};return B.runKernel(Vc,o,i)}const rx=V({cumsum_:X$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y$(n,t,e,s=!1){const r=T(n,"x","denseBincount"),o=T(t,"weights","denseBincount");k(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),k(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),k(e>=0,()=>`size must be non-negative, but got ${e}.`),k(o.size===r.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${o.shape}.`);const i={x:r,weights:o},a={size:e,binaryOutput:s};return B.runKernel(Jd,i,a)}const og=V({denseBincount_:Y$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z$(n,t,e="NHWC"){const s=T(n,"x","depthToSpace","float32"),r=e==="NHWC"?s.shape[1]:s.shape[2],o=e==="NHWC"?s.shape[2]:s.shape[3],i=e==="NHWC"?s.shape[3]:s.shape[1];k(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),k(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),k(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${t} for depthToSpace with input shape
        ${s.shape}`),k(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`);const a={x:s},u={blockSize:t,dataFormat:e};return B.runKernel(Qd,a,u)}const J$=V({depthToSpace_:Z$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q$(n,t,e,s,r="NHWC",o=[1,1],i){const a=T(n,"x","depthwiseConv2d","float32"),u=T(t,"filter","depthwiseConv2d","float32");let c=a,l=!1;a.rank===3&&(l=!0,c=z(a,[1,a.shape[0],a.shape[1],a.shape[2]])),k(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),k(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const h=r==="NHWC"?c.shape[3]:c.shape[1];k(h===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`),Cn("depthwiseConv2d",s,i);const d={x:c,filter:u},f={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i},m=B.runKernel(Wc,d,f);return l?z(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Bf=V({depthwiseConv2d_:Q$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tk(n,t,e,s,r=[1,1],o="NHWC"){const i=T(n,"x","dilation2d"),a=T(t,"filter","dilation2d");k(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),k(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),k(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let u=i,c=!1;i.rank===3&&(u=z(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0),k(u.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${a.shape[2]}`);const l={x:u,filter:a},h={strides:e,pad:s,dilations:r},d=B.runKernel(Uc,l,h);return c?z(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const ek=V({dilation2d_:tk});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xo(n,t){const e=n.length,s=[];for(let r=0;r<e;r++){const o=e-1-r,i=n[o]||1;(t[t.length-1-r]||1)>1&&i===1&&s.unshift(o)}return s}function Be(n,t){const e=[];for(let s=0;s<t.length;s++){const r=n[n.length-s-1],o=t.length-s-1,i=t[o];(r==null||r===1&&i>1)&&e.unshift(o)}return e}function Tt(n,t){const e=Math.max(n.length,t.length),s=new Array(e);for(let r=0;r<e;r++){let o=n[n.length-r-1];o==null&&(o=1);let i=t[t.length-r-1];if(i==null&&(i=1),o===1)s[e-r-1]=i;else if(i===1)s[e-r-1]=o;else if(o!==i){const a=`Operands could not be broadcast together with shapes ${n} and ${t}.`;throw Error(a)}else s[e-r-1]=o}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nk(n,t){let e=T(n,"a","equal","string_or_numeric"),s=T(t,"b","equal","string_or_numeric");[e,s]=Ie(e,s),Tt(e.shape,s.shape);const r={a:e,b:s};return B.runKernel(Gc,r)}const Vs=V({equal_:nk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sk(n,t,e){const s=T(t,"a","where"),r=T(e,"b","where"),o=T(n,"condition","where","bool"),i=Tt(Tt(o.shape,s.shape),r.shape),a=Pi(o,i),u=Pi(s,i),c=Pi(r,i),l={condition:a,t:u,e:c};return B.runKernel(yl,l)}const ln=V({where_:sk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rk(n){const e={x:T(n,"x","zerosLike")};return B.runKernel(El,e)}const Pt=V({zerosLike_:rk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ok(n,t){let e=T(n,"a","div"),s=T(t,"b","div");[e,s]=Ie(e,s);const r=$t(e,s),o=Pt(r),i=Vs(s,o);return ln(i,o,r)}const ik=V({divNoNan_:ok});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ak(n,t){const e=T(n,"t1","dot"),s=T(t,"t2","dot");k((e.rank===1||e.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${s.rank}.`);const r=e.rank===1?e.size:e.shape[1],o=s.rank===1?s.size:s.shape[0];if(k(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`),e.rank===1&&s.rank===1){const i=z(e,[1,-1]),a=z(s,[-1,1]),u=Ht(i,a);return z(u,[])}else if(e.rank===1&&s.rank===2){const i=z(e,[1,-1]),a=z(s,[s.shape[0],s.shape[1]]),u=Ht(i,a);return z(u,[u.size])}else if(e.rank===2&&s.rank===1){const i=z(s,[-1,1]),a=Ht(e,i);return z(a,[a.size])}else{const i=z(s,[s.shape[0],s.shape[1]]);return Ht(e,i)}}const uk=V({dot_:ak});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ck(n,...t){const e=t.map((r,o)=>T(r,`tensors${o}`,"einsum")),s={equation:n};return B.runKernel(nf,e,s)}const Ni=V({einsum_:ck});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lk(n){const e={x:T(n,"x","elu","float32")};return B.runKernel(ga,e)}const Ol=V({elu_:lk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hk(n){let t=T(n,"x","erf");k(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=mt(t,"float32"));const e={x:t};return B.runKernel(xa,e)}const dk=V({erf_:hk});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lf(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function ox(n,t,e){const s=n.length+t.length,r=[];let o=0,i=0;for(let a=0;a<s;a++)e.indexOf(a)===-1?r.push(n[o++]):r.push(t[i++]);return r}function Ge(n,t){const e=[],s=n.length;for(let o=0;o<s;o++)t.indexOf(o)===-1&&e.push(n[o]);const r=t.map(o=>n[o]);return[e,r]}function Ne(n,t){const e=t.map(s=>1);return ox(n,e,t)}function Xe(n,t,e){k(Lf(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function ge(n,t){if(Lf(n,t))return null;const e=[];for(let s=0;s<t;++s)n.indexOf(s)===-1&&e.push(s);return n.forEach(s=>e.push(s)),e}function Ar(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function $e(n,t){const e=[];for(let s=t-n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fk(n,t=null,e=!1){const r={x:T(n,"x","max")},o={reductionIndices:t,keepDims:e};return B.runKernel(nl,r,o)}const xs=V({max_:fk});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pk(n,t=null,e=!1){const r={x:T(n,"x","min")},o={axis:t,keepDims:e};return B.runKernel(il,r,o)}const Xu=V({min_:pk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mk(n,t){let e=T(n,"base","pow"),s=T(t,"exp","pow");[e,s]=Ie(e,s);const r={a:e,b:s};return B.runKernel(Ra,r)}const Yo=V({pow_:mk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qt(n,t){if((ns(n)&&t!=="string"||Array.isArray(n))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&ns(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Fl(n,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gk(n){const e={x:T(n,"x","sqrt","float32")};return B.runKernel(Ha,e)}const hn=V({sqrt_:gk});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xk(n){const t=T(n,"x","square"),e={};return B.runKernel("Square",{x:t},e)}const ce=V({square_:xk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bk(n,t=null,e=!1){let s=T(n,"x","sum");s.dtype==="bool"&&(s=mt(s,"int32"));const r={x:s},o={axis:t,keepDims:e};return B.runKernel(Cl,r,o)}const Ct=V({sum_:bk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wk(n,t="euclidean",e=null,s=!1){n=T(n,"x","norm");const r=ix(n,t,e);let o=r.shape;if(s){const i=Mt(e,n.shape);o=Ne(r.shape,i)}return z(r,o)}function ix(n,t,e=null){if(n.rank===0)return an(n);if(n.rank!==1&&e===null)return ix(z(n,[-1]),t,e);if(n.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return Ct(an(n),e);if(t===1/0)return xs(an(n),e);if(t===-1/0)return Xu(an(n),e);if(t==="euclidean"||t===2)return hn(Ct(Yo(an(n),qt(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return xs(Ct(an(n),e[0]),e[1]-1);if(t===1/0)return xs(Ct(an(n),e[1]),e[0]);if(t===-1/0)return Xu(Ct(an(n),e[1]),e[0]);if(t==="fro"||t==="euclidean")return hn(Ct(ce(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const Ml=V({norm_:wk});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yk(n,t=null,e=!1){return Ml(n,"euclidean",t,e)}const vk=V({euclideanNorm_:yk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ck(n){const e={x:T(n,"x","exp")};return B.runKernel(ba,e)}const Ws=V({exp_:Ck});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dk(n,t=0){const e=T(n,"x","expandDims","string_or_numeric");k(t<=e.rank,()=>"Axis must be <= rank of the tensor");const s={input:e},r={dim:t};return B.runKernel(Hc,s,r)}const xn=V({expandDims_:Dk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ik(n){const e={x:T(n,"x","expm1")};return B.runKernel(wa,e)}const $k=V({expm1_:Ik});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kk(n,t){const e=T(n,"x","tile","string_or_numeric");k(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);const s={x:e},r={reps:t};return B.runKernel(Ya,s,r)}const ps=V({tile_:kk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sk(n,t,e,s="float32"){t==null&&(t=n);const r=Ot([n,t],s),o=n<=t?n:t;for(let a=0;a<o;++a)r.set(1,a,a);const i=z(r.toTensor(),[n,t]);if(e==null)return i;if(e.length===1)return ps(xn(i,0),[e[0],1,1]);if(e.length===2)return ps(xn(xn(i,0),0),[e[0],e[1],1,1]);if(e.length===3)return ps(xn(xn(xn(i,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}const ax=V({eye_:Sk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ek(n){const e={x:T(n,"x","floor","float32")};return B.runKernel(ya,e)}const Bl=V({floor_:Ek});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nk(n,t,e=0,s=0){const r=T(n,"x","gather"),o=T(t,"indices","gather","int32"),i={x:r,indices:o},a={axis:e,batchDims:s};return B.runKernel(jc,i,a)}const Pf=V({gather_:Nk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ak(n,t){let e=T(n,"a","greater","string_or_numeric"),s=T(t,"b","greater","string_or_numeric");[e,s]=Ie(e,s),Tt(e.shape,s.shape);const r={a:e,b:s};return B.runKernel(Kc,r)}const Gn=V({greater_:Ak});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tk(n,t){let e=T(n,"a","greaterEqual","string_or_numeric"),s=T(t,"b","greaterEqual","string_or_numeric");[e,s]=Ie(e,s),Tt(e.shape,s.shape);const r={a:e,b:s};return B.runKernel(Ca,r)}const go=V({greaterEqual_:Tk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fk(n){const e={input:T(n,"input","imag")};return B.runKernel(cf,e)}const zf=V({imag_:Fk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rk(n){const e={x:T(n,"x","isFinite")};return B.runKernel(Ia,e)}const _k=V({isFinite_:Rk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ok(n){const e={x:T(n,"x","isInf")};return B.runKernel($a,e)}const Mk=V({isInf_:Ok});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bk(n){const e={x:T(n,"x","isNaN")};return B.runKernel(ka,e)}const Lk=V({isNaN_:Bk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pk(n,t=.2){const s={x:T(n,"x","leakyRelu")},r={alpha:t};return B.runKernel(Xc,s,r)}const Vf=V({leakyRelu_:Pk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zk(n,t){let e=T(n,"a","less","string_or_numeric"),s=T(t,"b","less","string_or_numeric");[e,s]=Ie(e,s),Tt(e.shape,s.shape);const r={a:e,b:s};return B.runKernel(Yc,r)}const Yu=V({less_:zk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vk(n,t){let e=T(n,"a","lessEqual","string_or_numeric"),s=T(t,"b","lessEqual","string_or_numeric");[e,s]=Ie(e,s),Tt(e.shape,s.shape);const r={a:e,b:s};return B.runKernel(Zc,r)}const di=V({lessEqual_:Vk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wk(n,t=5,e=1,s=1,r=.5){const o=T(n,"x","localResponseNormalization");k(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),k(Ho(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=o,a=!1;o.rank===3&&(a=!0,i=z(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const u={x:i},c={depthRadius:t,bias:e,alpha:s,beta:r},l=B.runKernel(el,u,c);return a?z(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const Uk=V({localResponseNormalization_:Wk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gk(n){const e={x:T(n,"x","log","float32")};return B.runKernel(Sa,e)}const Us=V({log_:Gk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hk(n){const e={x:T(n,"x","log1p")};return B.runKernel(Ea,e)}const ux=V({log1p_:Hk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qk(n,t){k(Vh(n),()=>"The f passed in variableGrads(f) must be a function"),k(t==null||Array.isArray(t)&&t.every(c=>c instanceof ju),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=t!=null;if(!e){t=[];for(const c in B.registeredVariables)t.push(B.registeredVariables[c])}const s=e?t.filter(c=>!c.trainable):null,r=t.length;t=t.filter(c=>c.trainable),k(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const o=!0,{value:i,grads:a}=B.gradients(n,t,null,o);k(a.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),k(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const u={};return t.forEach((c,l)=>{a[l]!=null&&(u[c.name]=a[l])}),s!=null&&s.forEach(c=>u[c.name]=null),{value:i,grads:u}}function Zo(n){return B.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jk(n){const e={x:T(n,"x","neg")};return B.runKernel(ul,e)}const De=V({neg_:jk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kk(n){const e={x:T(n,"x","softplus")};return B.runKernel(Ga,e)}const Qa=V({softplus_:Kk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xk(n){const t=T(n,"x","logSigmoid");return Zo(s=>({value:De(Qa(De(s))),gradFunc:i=>M(i,hi(De(s)))}))(t)}const Yk=V({logSigmoid_:Xk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zk(n,t){let e=T(n,"a","sub"),s=T(t,"b","sub");[e,s]=Ie(e,s);const r={a:e,b:s};return B.runKernel(ja,r)}const St=V({sub_:Zk});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jk(n,t=-1){const e=T(n,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Zo((r,o)=>{const a=xs(r,t,!0),u=St(r,a),c=St(mt(u,"float32"),Us(Ct(Ws(u),t,!0)));return o([c]),{value:c,gradFunc:(h,d)=>{const[f]=d,m=!0,p=Ws(f);return St(h,M(Ct(h,t,m),p))}}})(e)}const cx=V({logSoftmax_:Jk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qk(n,t=null,e=!1){const s=T(n,"x","logSumExp"),r=Mt(t,s.shape),o=xs(s,r,!0),i=St(s,o),a=Ws(i),u=Ct(a,r),c=Us(u),l=rt(z(o,c.shape),c);if(e){const h=Ne(l.shape,r);return z(l,h)}return l}const lx=V({logSumExp_:Qk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tS(n,t){const e=T(n,"a","logicalAnd","bool"),s=T(t,"b","logicalAnd","bool");Tt(e.shape,s.shape);const r={a:e,b:s};return B.runKernel(Jc,r)}const tr=V({logicalAnd_:tS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eS(n){const e={x:T(n,"x","logicalNot","bool")};return B.runKernel(Qc,e)}const Wf=V({logicalNot_:eS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nS(n,t){const e=T(n,"a","logicalOr","bool"),s=T(t,"b","logicalOr","bool");Tt(e.shape,s.shape);const r={a:e,b:s};return B.runKernel(tl,r)}const hx=V({logicalOr_:nS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sS(n,t){const e=T(n,"a","logicalXor","bool"),s=T(t,"b","logicalXor","bool");return Tt(e.shape,s.shape),tr(hx(n,t),Wf(tr(n,t)))}const rS=V({logicalXor_:sS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oS(n,t,e,s,r){const o=T(n,"x","maxPool"),i=1;let a=o,u=!1;o.rank===3&&(u=!0,a=z(o,[1,o.shape[0],o.shape[1],o.shape[2]])),k(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),k(nn(e,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),Cn("maxPool",s,r);const c={x:a},l={filterSize:t,strides:e,pad:s,dimRoundingMode:r},h=B.runKernel(sl,c,l);return u?z(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Uf=V({maxPool_:oS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iS(n,t=[1,1,1],e,s,r,o="NDHWC"){const i=T(n,"x","maxPool3d");let a=i,u=!1;i.rank===4&&(u=!0,a=z(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),k(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),k(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),Cn("maxPool3d",s,r);const c={x:a},l={filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:o},h=B.runKernel(rl,c,l);return u?z(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const aS=V({maxPool3d_:iS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uS(n,t){let e=T(n,"a","maximum"),s=T(t,"b","maximum");[e,s]=Ie(e,s),e.dtype==="bool"&&(e=mt(e,"int32"),s=mt(s,"int32")),Tt(e.shape,s.shape);const r={a:e,b:s};return B.runKernel(Na,r)}const Tr=V({maximum_:uS});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cS(n,t=null,e=!1){const r={x:T(n,"x","mean")},o={axis:t,keepDims:e};return B.runKernel(ol,r,o)}const Ee=V({mean_:cS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fe(n,t="float32"){if(sr(n),t==="complex64"){const s=Fe(n,"float32"),r=Fe(n,"float32");return Qr(s,r)}const e=en(X(n),t);return B.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fr(n,t="float32"){if(sr(n),t==="complex64"){const s=Fr(n,"float32"),r=Fe(n,"float32");return Qr(s,r)}const e=Md(X(n),t);return B.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lS(n,t){let e=T(n,"a","minimum"),s=T(t,"b","minimum");[e,s]=Ie(e,s),e.dtype==="bool"&&(e=mt(e,"int32"),s=mt(s,"int32")),Tt(e.shape,s.shape);const r={a:e,b:s};return B.runKernel(Aa,r)}const Hi=V({minimum_:lS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hS(n,t,e){k(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const s=T(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");k(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const r=e==="reflect"?1:0;for(let a=0;a<s.rank;a++)k(t[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),k(t[a][0]>=0&&t[a][0]<=s.shape[a]-r&&t[a][1]>=0&&t[a][1]<=s.shape[a]-r,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-r} or less than 0 for input of shape ${s.shape}`);const o={paddings:t,mode:e},i={x:s};return B.runKernel(al,i,o)}const dS=V({mirrorPad_:hS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fS(n,t){let e=T(n,"a","mod"),s=T(t,"b","mod");[e,s]=Ie(e,s);const r={a:e,b:s};return B.runKernel(Ta,r)}const pS=V({mod_:fS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mS(n,t=null,e=!1){n=T(n,"x","moments");const s=Mt(t,n.shape),r=Ee(n,s,e);let o=r.shape;e||(o=Ne(r.shape,s));const i=ce(St(mt(n,"float32"),z(r,o))),a=Ee(i,s,e);return{mean:r,variance:a}}const Gf=V({moments_:mS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gS(n,t){let e=T(n,"a","notEqual","string_or_numeric"),s=T(t,"b","notEqual","string_or_numeric");[e,s]=Ie(e,s),Tt(e.shape,s.shape);const r={a:e,b:s};return B.runKernel(cl,r)}const Zu=V({notEqual_:gS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xS(n,t,e=1,s=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i={indices:T(n,"indices","oneHot","int32")},a={dtype:r,depth:t,onValue:e,offValue:s};return B.runKernel(hl,i,a)}const dx=V({oneHot_:xS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bS(n){const e={x:T(n,"x","onesLike")};return B.runKernel(ll,e)}const ss=V({onesLike_:bS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wS(n,t,e=0){const s=T(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:e},o={x:s};return B.runKernel(fl,o,r)}const Hf=V({pad_:wS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yS(n,t,e){const s=T(n,"x","spaceToBatchND");k(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),k(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),k(s.shape.reduce((i,a,u)=>u>0&&u<=t.length?i&&(a+e[u-1][0]+e[u-1][1])%t[u-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);const r={x:s},o={blockShape:t,paddings:e};return B.runKernel(Dl,r,o)}const qf=V({spaceToBatchND_:yS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vS(n,t,e,s,r,o,i){r==null&&(r=[1,1]),o==null&&(o=1),s===0&&(s="valid");const a=T(n,"x","maxPool");let u=a,c=!1;a.rank===3&&(c=!0,u=z(a,[1,a.shape[0],a.shape[1],a.shape[2]])),k(nn(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const l=rs(u.shape,t,o,r,s),h=[l.dilationHeight,l.dilationWidth];let d;s==="same"?d=DS([l.filterHeight,l.filterWidth],h):d=[[0,0],[0,0]];const f=h[0]===1&&h[1]===1,[m,p]=CS([l.inHeight,l.inWidth],h,d),x=f?s:"valid",g=f?u:qf(u,h,m),w=(e==="avg"?()=>Ff(g,t,o,x,i):()=>Uf(g,t,o,x,i))(),y=f?w:_f(w,h,p);return c?z(y,[y.shape[1],y.shape[2],y.shape[3]]):y}function CS(n,t,e){const s=e.map(l=>l[0]),r=e.map(l=>l[1]),o=n.concat(s,r),i=t.map((l,h)=>(l-o[h]%l)%l),a=r.map((l,h)=>l+i[h]),u=t.map((l,h)=>[s[h],a[h]]),c=t.map((l,h)=>[0,i[h]]);return[u,c]}function DS(n,t){const s=n.map((i,a)=>i+(i-1)*(t[a]-1)).map(i=>i-1),r=s.map(i=>Math.floor(i/2)),o=s.map((i,a)=>i-r[a]);return s.map((i,a)=>[r[a],o[a]])}const IS=V({pool_:vS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $S(n,t){const e=T(n,"x","prelu"),s=T(t,"alpha","prelu"),r={x:e,alpha:s};return B.runKernel(pl,r)}const jf=V({prelu_:$S});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kS(n,t=null,e=!1){let s=T(n,"x","prod");s.dtype==="bool"&&(s=mt(s,"int32"));const r={x:s},o={axis:t,keepDims:e};return B.runKernel(ml,r,o)}const SS=V({prod_:kS});var Kf={exports:{}};Kf.exports;(function(n){(function(t,e,s){function r(u){var c=this,l=a();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=l(" "),c.s1=l(" "),c.s2=l(" "),c.s0-=l(u),c.s0<0&&(c.s0+=1),c.s1-=l(u),c.s1<0&&(c.s1+=1),c.s2-=l(u),c.s2<0&&(c.s2+=1),l=null}function o(u,c){return c.c=u.c,c.s0=u.s0,c.s1=u.s1,c.s2=u.s2,c}function i(u,c){var l=new r(u),h=c&&c.state,d=l.next;return d.int32=function(){return l.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&o(h,l),d.state=function(){return o(l,{})}),d}function a(){var u=4022871197,c=function(l){l=String(l);for(var h=0;h<l.length;h++){u+=l.charCodeAt(h);var d=.02519603282416938*u;u=d>>>0,d-=u,d*=u,u=d>>>0,d-=u,u+=d*4294967296}return(u>>>0)*23283064365386963e-26};return c}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.alea=i})(fo,n,!1)})(Kf);var ES=Kf.exports,Xf={exports:{}};Xf.exports;(function(n){(function(t,e,s){function r(a){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var h=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^h^h>>>8},a===(a|0)?u.x=a:c+=a;for(var l=0;l<c.length+64;l++)u.x^=c.charCodeAt(l)|0,u.next()}function o(a,u){return u.x=a.x,u.y=a.y,u.z=a.z,u.w=a.w,u}function i(a,u){var c=new r(a),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(d+f)/(1<<21);while(m===0);return m},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.xor128=i})(fo,n,!1)})(Xf);var NS=Xf.exports,Yf={exports:{}};Yf.exports;(function(n){(function(t,e,s){function r(a){var u=this,c="";u.next=function(){var h=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(h^h<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,a===(a|0)?u.x=a:c+=a;for(var l=0;l<c.length+64;l++)u.x^=c.charCodeAt(l)|0,l==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(a,u){return u.x=a.x,u.y=a.y,u.z=a.z,u.w=a.w,u.v=a.v,u.d=a.d,u}function i(a,u){var c=new r(a),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(d+f)/(1<<21);while(m===0);return m},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.xorwow=i})(fo,n,!1)})(Yf);var AS=Yf.exports,Zf={exports:{}};Zf.exports;(function(n){(function(t,e,s){function r(a){var u=this;u.next=function(){var l=u.x,h=u.i,d,f;return d=l[h],d^=d>>>7,f=d^d<<24,d=l[h+1&7],f^=d^d>>>10,d=l[h+3&7],f^=d^d>>>3,d=l[h+4&7],f^=d^d<<7,d=l[h+7&7],d=d^d<<13,f^=d^d<<9,l[h]=f,u.i=h+1&7,f};function c(l,h){var d,f=[];if(h===(h|0))f[0]=h;else for(h=""+h,d=0;d<h.length;++d)f[d&7]=f[d&7]<<15^h.charCodeAt(d)+f[d+1&7]<<13;for(;f.length<8;)f.push(0);for(d=0;d<8&&f[d]===0;++d);for(d==8?f[7]=-1:f[d],l.x=f,l.i=0,d=256;d>0;--d)l.next()}c(u,a)}function o(a,u){return u.x=a.x.slice(),u.i=a.i,u}function i(a,u){a==null&&(a=+new Date);var c=new r(a),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(d+f)/(1<<21);while(m===0);return m},h.int32=c.next,h.quick=h,l&&(l.x&&o(l,c),h.state=function(){return o(c,{})}),h}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.xorshift7=i})(fo,n,!1)})(Zf);var TS=Zf.exports,Jf={exports:{}};Jf.exports;(function(n){(function(t,e,s){function r(a){var u=this;u.next=function(){var l=u.w,h=u.X,d=u.i,f,m;return u.w=l=l+1640531527|0,m=h[d+34&127],f=h[d=d+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=h[d]=m^f,u.i=d,m+(l^l>>>16)|0};function c(l,h){var d,f,m,p,x,g=[],b=128;for(h===(h|0)?(f=h,h=null):(h=h+"\0",f=0,b=Math.max(b,h.length)),m=0,p=-32;p<b;++p)h&&(f^=h.charCodeAt((p+32)%h.length)),p===0&&(x=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,p>=0&&(x=x+1640531527|0,d=g[p&127]^=f+x,m=d==0?m+1:0);for(m>=128&&(g[(h&&h.length||0)&127]=-1),m=127,p=4*128;p>0;--p)f=g[m+34&127],d=g[m=m+1&127],f^=f<<13,d^=d<<17,f^=f>>>15,d^=d>>>12,g[m]=f^d;l.w=x,l.X=g,l.i=m}c(u,a)}function o(a,u){return u.i=a.i,u.w=a.w,u.X=a.X.slice(),u}function i(a,u){a==null&&(a=+new Date);var c=new r(a),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(d+f)/(1<<21);while(m===0);return m},h.int32=c.next,h.quick=h,l&&(l.X&&o(l,c),h.state=function(){return o(c,{})}),h}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.xor4096=i})(fo,n,!1)})(Jf);var FS=Jf.exports,Qf={exports:{}};Qf.exports;(function(n){(function(t,e,s){function r(a){var u=this,c="";u.next=function(){var h=u.b,d=u.c,f=u.d,m=u.a;return h=h<<25^h>>>7^d,d=d-f|0,f=f<<24^f>>>8^m,m=m-h|0,u.b=h=h<<20^h>>>12^d,u.c=d=d-f|0,u.d=f<<16^d>>>16^m,u.a=m-h|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,a===Math.floor(a)?(u.a=a/4294967296|0,u.b=a|0):c+=a;for(var l=0;l<c.length+20;l++)u.b^=c.charCodeAt(l)|0,u.next()}function o(a,u){return u.a=a.a,u.b=a.b,u.c=a.c,u.d=a.d,u}function i(a,u){var c=new r(a),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(d+f)/(1<<21);while(m===0);return m},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.tychei=i})(fo,n,!1)})(Qf);var RS=Qf.exports,fx={exports:{}};const _S={},OS=Object.freeze(Object.defineProperty({__proto__:null,default:_S},Symbol.toStringTag,{value:"Module"})),MS=I2(OS);(function(n){(function(t,e,s){var r=256,o=6,i=52,a="random",u=s.pow(r,o),c=s.pow(2,i),l=c*2,h=r-1,d;function f(y,v,C){var D=[];v=v==!0?{entropy:!0}:v||{};var I=g(x(v.entropy?[y,w(e)]:y??b(),3),D),$=new m(D),S=function(){for(var E=$.g(o),N=u,R=0;E<c;)E=(E+R)*r,N*=r,R=$.g(1);for(;E>=l;)E/=2,N/=2,R>>>=1;return(E+R)/N};return S.int32=function(){return $.g(4)|0},S.quick=function(){return $.g(4)/4294967296},S.double=S,g(w($.S),e),(v.pass||C||function(E,N,R,L){return L&&(L.S&&p(L,$),E.state=function(){return p($,{})}),R?(s[a]=E,N):E})(S,I,"global"in v?v.global:this==s,v.state)}function m(y){var v,C=y.length,D=this,I=0,$=D.i=D.j=0,S=D.S=[];for(C||(y=[C++]);I<r;)S[I]=I++;for(I=0;I<r;I++)S[I]=S[$=h&$+y[I%C]+(v=S[I])],S[$]=v;(D.g=function(E){for(var N,R=0,L=D.i,O=D.j,_=D.S;E--;)N=_[L=h&L+1],R=R*r+_[h&(_[L]=_[O=h&O+N])+(_[O]=N)];return D.i=L,D.j=O,R})(r)}function p(y,v){return v.i=y.i,v.j=y.j,v.S=y.S.slice(),v}function x(y,v){var C=[],D=typeof y,I;if(v&&D=="object")for(I in y)try{C.push(x(y[I],v-1))}catch{}return C.length?C:D=="string"?y:y+"\0"}function g(y,v){for(var C=y+"",D,I=0;I<C.length;)v[h&I]=h&(D^=v[h&I]*19)+C.charCodeAt(I++);return w(v)}function b(){try{var y;return d&&(y=d.randomBytes)?y=y(r):(y=new Uint8Array(r),(t.crypto||t.msCrypto).getRandomValues(y)),w(y)}catch{var v=t.navigator,C=v&&v.plugins;return[+new Date,t,C,t.screen,w(e)]}}function w(y){return String.fromCharCode.apply(0,y)}if(g(s.random(),e),n.exports){n.exports=f;try{d=MS}catch{}}else s["seed"+a]=f})(typeof self<"u"?self:fo,[],Math)})(fx);var BS=fx.exports,LS=ES,PS=NS,zS=AS,VS=TS,WS=FS,US=RS,xo=BS;xo.alea=LS;xo.xor128=PS;xo.xorwow=zS;xo.xorshift7=VS;xo.xor4096=WS;xo.tychei=US;var Ll=xo;const px=Nl(Ll);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mx{constructor(t,e,s,r,o){this.mean=t,this.stdDev=e,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=o||Math.random();this.random=Ll.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let t,e,s=!1;for(;!s;){let r,o,i;do r=2*this.random()-1,o=2*this.random()-1,i=r*r+o*o;while(i>=1||i===0);const a=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*r*a,e=this.mean+this.stdDev*o*a,(!this.truncated||this.isValidTruncated(t))&&(s=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class GS{constructor(t=0,e=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Ll.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HS(n,t=0,e=1,s,r){if(sr(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const o=new mx(t,e,s,!1,r),i=Ot(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const qS=V({randomNormal_:HS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jS(n,t=0,e=1,s="float32",r){sr(n);const o=Ot(n,s),i=new GS(t,e,null,r);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const tu=V({randomUniform_:jS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qi(n,t,e=1,s="float32"){if(e===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:t,step:e,dtype:s};return B.runKernel(gf,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KS(n){const e={input:T(n,"input","real")};return B.runKernel(xf,e)}const Ju=V({real_:KS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XS(n){const e={x:T(n,"x","reciprocal")};return B.runKernel(_a,e)}const YS=V({reciprocal_:XS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZS(n){const e={x:T(n,"x","relu")};return B.runKernel(Oa,e)}const bo=V({relu_:ZS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JS(n){const e={x:T(n,"x","relu6")};return B.runKernel(Ma,e)}const gx=V({relu6_:JS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QS(n,t){const s={x:T(n,"x","reverse")},r={dims:t};return B.runKernel(wl,s,r)}const oo=V({reverse_:QS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tE(n){const e={x:T(n,"x","round")};return B.runKernel(Ba,e)}const xx=V({round_:tE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eE(n){const e={x:T(n,"x","rsqrt","float32")};return B.runKernel(La,e)}const bx=V({rsqrt_:eE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nE(n){const e={x:T(n,"x","selu")};return B.runKernel(Pa,e)}const wx=V({selu_:nE});function sE(n,t,e,s,r,o=[1,1],i="NHWC"){const a=T(n,"x","separableConv2d"),u=T(t,"depthwiseFilter","separableConv2d"),c=T(e,"pointwiseFilter","separableConv2d");let l=a,h=!1;if(a.rank===3&&(h=!0,l=z(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");k(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),k(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),k(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),k(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),k(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const d=u.shape[2],f=u.shape[3];k(c.shape[2]===d*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${c.shape[2]}.`);const m=Bf(l,u,s,r,i,o),x=ro(m,c,1,"valid",i);return h?z(x,[x.shape[1],x.shape[2],x.shape[3]]):x}const yx=V({separableConv2d_:sE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rE(n){const e={x:T(n,"x","sign")};return B.runKernel(Wa,e)}const oE=V({sign_:rE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iE(n){const e={x:T(n,"x","sin","float32")};return B.runKernel(za,e)}const vx=V({sin_:iE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aE(n){const e={x:T(n,"x","sinh")};return B.runKernel(Va,e)}const Cx=V({sinh_:aE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uE(n,t,e){const s=T(n,"x","slice1d");return k(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),oe(s,[t],[e])}const tp=V({slice1d_:uE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cE(n,t,e){const s=T(n,"x","slice2d");return k(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),oe(s,t,e)}const Dx=V({slice2d_:cE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lE(n,t,e){const s=T(n,"x","slice3d");return k(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),oe(s,t,e)}const ep=V({slice3d_:lE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hE(n,t,e){const s=T(n,"x","slice4d");return k(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),oe(s,t,e)}const Qu=V({slice4d_:hE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dE(n,t=-1){const e=T(n,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);const s={logits:e},r={dim:t};return B.runKernel($l,s,r)}const np=V({softmax_:dE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fE(n){k(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const t={input:n};return B.runKernel(rf,t)}const Ix=V({fft_:fE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pE(n){k(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const t={input:n};return B.runKernel(uf,t)}const od=V({ifft_:pE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mE(n){const t=n.shape[n.shape.length-1],e=n.size/t;let s;if(t<=2){const r=z(n,[e,t]);s=od(r)}else{const r=[e,2*(t-1)],o=z(Ju(n),[e,t]),i=z(zf(n),[e,t]),a=oo(oe(o,[0,1],[e,t-2]),1),u=M(oo(oe(i,[0,1],[e,t-2]),1),qt(-1)),c=wn([o,a],1),l=wn([i,u],1),h=z(Qr(c,l),[r[0],r[1]]);s=od(h)}if(s=Ju(s),n.rank===3&&n.shape[0]!==0){const r=s,o=n.shape[0];s=z(s,[o,s.shape[0]/o,s.shape[1]]),r.dispose()}return s}const gE=V({irfft_:mE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xE(n,t,e=0){const r={x:T(n,"x","split")},o={numOrSizeSplits:t,axis:e};return B.runKernel(Il,r,o)}const Wn=V({split_:xE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bE(n,t){k(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1];const s=n.size/e;let r;if(t!=null&&t<e){const m=n.shape.map(x=>0),p=n.shape.map(x=>x);p[n.shape.length-1]=t,r=oe(n,m,p),e=t}else if(t!=null&&t>e){const m=n.shape.map(p=>p);m[n.shape.length-1]=t-e,r=wn([n,Fe(m)],n.shape.length-1),e=t}else r=n;const o=Pt(r),i=z(Qr(r,o),[s,e]),a=Ix(i),u=Math.floor(e/2)+1,c=Ju(a),l=zf(a),h=Wn(c,[u,e-u],c.shape.length-1),d=Wn(l,[u,e-u],l.shape.length-1),f=r.shape.slice();return f[r.shape.length-1]=u,z(Qr(h[0],d[0]),f)}const wE=V({rfft_:bE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yE(n,t){let e=T(n,"a","squaredDifference"),s=T(t,"b","squaredDifference");[e,s]=Ie(e,s),Tt(e.shape,s.shape);const r={a:e,b:s},o={};return B.runKernel(qa,r,o)}const vE=V({squaredDifference_:yE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CE(n,t){const e=T(n,"x","squeeze","string_or_numeric");return z(e,kr(e.shape,t).newShape)}const eu=V({squeeze_:CE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DE(n,t=0){const e=G1(n,"tensors","stack","string_or_numeric");k(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&k(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");const s=e,r={axis:t};return B.runKernel(dl,s,r)}const Gs=V({stack_:DE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IE(n,t=0){const s={x:T(n,"x","step")},r={alpha:t};return B.runKernel(Za,s,r)}const nu=V({step_:IE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $E(n,t,e,s,r=0,o=0,i=0,a=0,u=0){const l={x:T(n,"x","stridedSlice","string_or_numeric")},h={begin:t,end:e,strides:s,beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:u};return B.runKernel(Cf,l,h)}const kE=V({stridedSlice_:$E});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SE(n){const e={x:T(n,"x","tan","float32")};return B.runKernel(Ka,e)}const EE=V({tan_:SE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tn(n,t){Y0(n);const e=Tl(n,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Fl(n,null,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wh(n,t,e){if(Y0(n),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=Tl(n,e);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Fl(n,t,s,e)}function $x(n,t,e){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(e.rank<r)throw new Error(o+` update.rank < ${r}. `);if(n.length<s+(e.rank-r))throw new Error(o+` Output shape length < ${s+(e.rank-r)}`);if(e.rank!==r+n.length-s)throw new Error(o+` update.rank != ${r+n.length-s}`);for(let i=0;i<r;++i)if(e.shape[i]!==t.shape[i])throw new Error(o+` updates.shape[${i}] (${e.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<e.rank-r;++i)if(e.shape[i+r]!==n[i+s])throw new Error(o+` updates.shape[${i+r}] (${e.shape[i+r]}) != shape[${i+r}] (${n[i+r]})`)}function NE(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}$x(e,t,n)}function wo(n,t,e){const s=t.shape.length,r=s>1?t.shape[s-1]:1,o=e.length;let i=1;for(let h=r;h<o;++h)i*=e[h];const a=r<1?1:r,u=X(t.shape)/a,c=[...vt(e.slice(0,r)),1],l=X(e);return{sliceRank:r,numUpdates:u,sliceSize:i,strides:c,outputSize:l}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AE(n,t=1,e=!0){const s=T(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const o={x:s},i={k:t,sorted:e},[a,u]=B.runKernel(Df,o,i);return{values:a,indices:u}}const TE=V({topk_:AE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FE(n,t=0,e=1,s,r){if(sr(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new mx(t,e,s,!0,r),i=Ot(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const kx=V({truncatedNormal_:FE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RE(n,t=0){const e=T(n,"x","unique","string_or_numeric");k(e.rank>0,()=>"The input tensor must be at least 1D");const s={x:e},r={axis:t},[o,i]=B.runKernel($f,s,r);return{values:o,indices:i}}const _E=V({unique_:RE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OE(n,t,e){const s=T(n,"x","unsortedSegmentSum"),r=T(t,"segmentIds","unsortedSegmentSum","int32");k(Ho(e),()=>"numSegments must be of dtype int");const o={x:s,segmentIds:r},i={numSegments:e};return B.runKernel(Sl,o,i)}const Sx=V({unsortedSegmentSum_:OE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ME(n,t=0){const e=T(n,"x","unstack","string_or_numeric");k(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);const s={value:e},r={axis:t};return B.runKernel(kl,s,r)}const io=V({unstack_:ME});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BE(n,t=!0,e,s){return B.makeVariable(n,t,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ex(n,t){const e=[];for(let o=0;o<t.length;o++)t[o]&&e.push(o);const s=Ot(n,"int32"),r=Ot([e.length,n.length],"int32");for(let o=0;o<e.length;o++){const i=s.indexToLoc(e[o]),a=o*n.length;r.values.set(i,a)}return r.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LE(n,t,e){const s=T(n,"x","transpose");if(t==null&&(t=s.shape.map((i,a)=>a).reverse()),k(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(i=>{k(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();const r={x:s},o={perm:t};return s.dtype==="complex64"?W(()=>{let i=Ju(s),a=zf(s);return i=B.runKernel(Po,{x:i},o),a=B.runKernel(Po,{x:a},o),e&&(a=De(a)),Qr(i,a)}):B.runKernel(Po,r,o)}const Lt=V({transpose_:LE});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PE(n,t){if(t==null)return n.shape.slice();if(jt(n.shape,t))return t;if(n.shape.length===t.length){const e=[];for(let s=0;s<n.shape.length;s++)t[s]==null&&n.shape[s]!=null?e.push(n.shape[s]):e.push(t[s]);return e}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zE(n,t,e,s){const r=T(n,"x","dropout");if(k(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),k(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return n instanceof Te?r.clone():r;const o=PE(r,e),i=1-t,a=$t(Bl(rt(tu(o,0,1,"float32",s),i)),i);return M(r,a)}const VE=V({dropout_:zE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WE(n,t,e,s,r,o="NHWC",i){let a=n;n.rank===3&&(a=z(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=t;u.rank===3&&(u=z(t,[1,t.shape[0],t.shape[1],t.shape[2]])),k(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),k(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),k(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const c=o==="NHWC"?a.shape[3]:a.shape[1],l=o==="NHWC"?u.shape[3]:u.shape[1];k(c===e[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${e[2]}.`),k(l===e[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${e[3]}).`),Cn("conv2dDerFilter",r,i);const h={x:a,dy:u},d={strides:s,pad:r,dataFormat:o,dimRoundingMode:i,filterShape:e};return B.runKernel(jd,h,d)}const sp=V({conv2DBackpropFilter_:WE});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rp(n,t,e){if(e==null||e==="linear")return n;if(e==="relu")return M(n,nu(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function op(n,t){let e=t;const s=Be(n.shape,t.shape);return s.length>0&&(e=Ct(e,s)),z(e,n.shape)}function ip(n,t,e,s){if(t==="linear")return n;if(t==="relu")return bo(n);if(t==="elu")return Ol(n);if(t==="relu6")return gx(n);if(t==="prelu")return jf(n,e);if(t==="leakyrelu")return Vf(n,s);if(t==="sigmoid")return hi(n);throw new Error(`Unknown fused activation ${t}.`)}const ap=(n,t)=>!(n>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UE({x:n,filter:t,strides:e,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(u=u||"linear",ap(B.state.gradientDepth,u)===!1){k(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let C=ro(n,t,e,s,r,o,i);return a!=null&&(C=rt(C,a)),ip(C,u,c,l)}const h=T(n,"x","conv2d","float32"),d=T(t,"filter","conv2d","float32");let f=h,m=!1;h.rank===3&&(m=!0,f=z(h,[1,h.shape[0],h.shape[1],h.shape[2]])),k(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),k(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Cn("fused conv2d",s,i);const p=r==="NHWC"?f.shape[3]:f.shape[1];k(d.shape[2]===p,()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${d.shape[2]}.`),k(nn(e,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`);const x=Ke(f.shape,d.shape,e,o,s,i);let g;a!=null&&(g=T(a,"bias","fused conv2d"),[g]=Ie(g,h),r==="NHWC"?Tt(x.outShape,g.shape):(k(g.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`),k(g.shape.length===0||g.shape[0]===x.outChannels||g.shape[0]===1,()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${x.outChannels})`)));let b;if(c!=null){const C=c.shape;if(k(C.length<=1||C.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${C.length}.`),C.length===1)k(C[0]===1||C[0]===x.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the number of output channels (${x.outChannels}).`);else if(C.length===3)try{Tt(C,x.outShape)}catch{const I=`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the output shape of the conv2d (${x.outShape}).`;throw Error(I)}b=T(c,"prelu weights","fused conv2d")}const w=(C,D)=>{k(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[I,$,S,E]=D,N=rp(C,S,u);k(no(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const R=Of($.shape,N,I,e,s),L=sp($,N,I.shape,e,s),O=[R,L];if(E!=null){const _=op(E,N);O.push(_)}return O},y={x:f,filter:d,bias:g,preluActivationWeights:b},v={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:u,leakyreluAlpha:l};return a==null?Zo((D,I,$)=>{let S=B.runKernel(Gu,y,v);return $([I,D,S]),m&&(S=z(S,[S.shape[1],S.shape[2],S.shape[3]])),{value:S,gradFunc:w}})(f,d):Zo((D,I,$,S)=>{let E=B.runKernel(Gu,y,v);return S([I,D,E,$]),m&&(E=z(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:w}})(f,d,g)}const GE=V({fusedConv2d_:UE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HE(n,t,e,s,r,o=[1,1],i){let a=n;n.rank===3&&(a=z(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=t;u.rank===3&&(u=z(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:a,dy:u},l={strides:s,pad:r,dimRoundingMode:i,dilations:o,filterShape:e};return B.runKernel(tf,c,l)}const qE=V({depthwiseConv2dNativeBackpropFilter_:HE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jE(n,t,e,s,r,o=[1,1],i){let a=t,u=!1;t.rank===3&&(u=!0,a=z(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:a,filter:e},l={strides:s,pad:r,dimRoundingMode:i,dilations:o,inputShape:n},h=B.runKernel(ef,c,l);return u?z(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const KE=V({depthwiseConv2dNativeBackpropInput_:jE});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XE({a:n,b:t,transposeA:e=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(ap(B.state.gradientDepth,o)===!1){let E=Ht(n,t,e,s);return r!=null&&(E=rt(E,r)),ip(E,o,i,a)}let u=T(n,"a","fused matMul"),c=T(t,"b","fused matMul");[u,c]=Ie(u,c);const l=e?u.shape[u.rank-2]:u.shape[u.rank-1],h=s?c.shape[c.rank-1]:c.shape[c.rank-2],d=e?u.shape[u.rank-1]:u.shape[u.rank-2],f=s?c.shape[c.rank-2]:c.shape[c.rank-1],m=u.shape.slice(0,-2),p=c.shape.slice(0,-2),x=X(m),g=X(p);k(l===h,()=>`Error in fused matMul: inner shapes (${l}) and (${h}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${e} and transposeB=${s} must match.`);const w=Tt(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([d,f]),y=e?z(u,[x,l,d]):z(u,[x,d,l]),v=s?z(c,[g,f,h]):z(c,[g,h,f]);let C;r!=null&&(C=T(r,"bias","fused matMul"),[C]=Ie(C,u),Tt(w,C.shape));let D;i!=null&&(D=T(i,"prelu weights","fused matMul"));const I=(E,N)=>{const[R,L,O,_]=N,j=rp(z(E,O.shape),O,o);let G,q;if(!e&&!s?(G=Ht(j,L,!1,!0),q=Ht(R,j,!0,!1)):!e&&s?(G=Ht(j,L,!1,!1),q=Ht(j,R,!0,!1)):e&&!s?(G=Ht(L,j,!1,!0),q=Ht(R,j,!1,!1)):(G=Ht(L,j,!0,!0),q=Ht(j,R,!0,!0)),r!=null){const J=op(_,j);return[G,q,J]}else return[G,q]},$={a:y,b:v,bias:C,preluActivationWeights:D},S={transposeA:e,transposeB:s,activation:o,leakyreluAlpha:a};return r==null?Zo((N,R,L)=>{const O=B.runKernel(Uu,$,S);return L([N,R,O]),{value:z(O,w),gradFunc:I}})(y,v):Zo((N,R,L,O)=>{const _=B.runKernel(Uu,$,S);return O([N,R,_,L]),{value:z(_,w),gradFunc:I}})(y,v,C)}const ig=V({fusedMatMul_:XE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YE(n,t,e,s,r="bilinear",o=0){const i=T(n,"image","cropAndResize"),a=T(t,"boxes","cropAndResize","float32"),u=T(e,"boxInd","cropAndResize","int32"),c=a.shape[0];k(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),k(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${a.shape}.`),k(u.rank===1&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${a.shape}.`),k(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),k(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),k(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const l={image:i,boxes:a,boxInd:u},h={method:r,extrapolationValue:o,cropSize:s};return B.runKernel(Zd,l,h)}const ZE=V({cropAndResize_:YE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JE(n){const t=T(n,"image","flipLeftRight","float32");k(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const e={image:t};return B.runKernel(af,e,{})}const QE=V({flipLeftRight_:JE});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tN(n){const t=T(n,"image","grayscaleToRGB"),e=t.rank-1,s=t.shape[e];k(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),k(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(t.rank);return r.fill(1,0,e),r[e]=3,ps(t,r)}const eN=V({grayscaleToRGB_:tN});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nN(n){const t=T(n,"image","RGBToGrayscale"),e=t.rank-1,s=t.shape[e];k(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),k(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const r=t.dtype,o=mt(t,"float32"),i=Tn([.2989,.587,.114]);let a;switch(t.rank){case 2:a=Ni("ij,j->i",o,i);break;case 3:a=Ni("ijk,k->ij",o,i);break;case 4:a=Ni("ijkl,l->ijk",o,i);break;case 5:a=Ni("ijklm,m->ijkl",o,i);break;case 6:a=Ni("ijklmn,n->ijklm",o,i);break;default:throw new Error("Not a valid tensor rank.")}return a=xn(a,-1),mt(a,r)}const sN=V({rgbToGrayscale_:nN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rN(n,t,e=0,s=.5){const r=T(n,"image","rotateWithOffset","float32");k(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const o={image:r},i={radians:t,fillValue:e,center:s};return B.runKernel(kf,o,i)}const oN=V({rotateWithOffset_:rN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fi(n,t,e,s,r,o){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),o==null&&(o=0);const i=n.shape[0];return e=Math.min(e,i),k(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),k(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),k(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),k(t.rank===1,()=>"scores must be a 1D tensor"),k(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),k(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:e,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iN(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const o=T(n,"boxes","nonMaxSuppression","float32"),i=T(t,"scores","nonMaxSuppression","float32"),a=fi(o,i,e,s,r);e=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const u={maxOutputSize:e,iouThreshold:s,scoreThreshold:r};return B.runKernel(ff,{boxes:o,scores:i},u)}const aN=V({nonMaxSuppression_:iN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uN(n,t,e){const s=cN(n,t,e),r=s<0?-(s+1):s;n.splice(r,0,t)}function cN(n,t,e){return hN(n,t,e||lN)}function lN(n,t){return n>t?1:n<t?-1:0}function hN(n,t,e){let s=0,r=n.length,o=0,i=!1;for(;s<r;){o=s+(r-s>>>1);const a=e(t,n[o]);a>0?s=o+1:(r=o,i=!a)}return i?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function up(n,t,e,s,r){return hp(n,t,e,s,r,0)}function cp(n,t,e,s,r,o){return hp(n,t,e,s,r,0,!1,o,!0)}function lp(n,t,e,s,r,o){return hp(n,t,e,s,r,o,!0)}function hp(n,t,e,s,r,o,i=!1,a=!1,u=!1){const c=[];for(let x=0;x<t.length;x++)t[x]>r&&c.push({score:t[x],boxIndex:x,suppressBeginIndex:0});c.sort(ag);const l=o>0?-.5/o:0,h=[],d=[];for(;h.length<e&&c.length>0;){const x=c.pop(),{score:g,boxIndex:b,suppressBeginIndex:w}=x;if(g<r)break;let y=!1;for(let v=h.length-1;v>=w;--v){const C=dN(n,b,h[v]);if(C>=s){y=!0;break}if(x.score=x.score*fN(s,l,C),x.score<=r)break}x.suppressBeginIndex=h.length,y||(x.score===g?(h.push(b),d.push(x.score)):x.score>r&&uN(c,x,ag))}const f=h.length,m=e-f;a&&m>0&&(h.push(...new Array(m).fill(0)),d.push(...new Array(m).fill(0)));const p={selectedIndices:h};return i&&(p.selectedScores=d),u&&(p.validOutputs=f),p}function dN(n,t,e){const s=n.subarray(t*4,t*4+4),r=n.subarray(e*4,e*4+4),o=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),u=Math.max(s[1],s[3]),c=Math.min(r[0],r[2]),l=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),f=(a-o)*(u-i),m=(h-c)*(d-l);if(f<=0||m<=0)return 0;const p=Math.max(o,c),x=Math.max(i,l),g=Math.min(a,h),b=Math.min(u,d),w=Math.max(g-p,0)*Math.max(b-x,0);return w/(f+m-w)}function fN(n,t,e){const s=Math.exp(t*e*e);return e<=n?s:0}function ag(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function pN(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const o=T(n,"boxes","nonMaxSuppressionAsync"),i=T(t,"scores","nonMaxSuppressionAsync"),a=fi(o,i,e,s,r);e=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const u=await Promise.all([o.data(),i.data()]),c=u[0],l=u[1],{selectedIndices:h}=up(c,l,e,s,r);return o!==n&&o.dispose(),i!==t&&i.dispose(),Tn(h,"int32")}const mN=pN;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gN(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=T(n,"boxes","nonMaxSuppression"),a=T(t,"scores","nonMaxSuppression"),u=fi(i,a,e,s,r,o);e=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,o=u.softNmsSigma;const c={boxes:i,scores:a},l={maxOutputSize:e,iouThreshold:s,scoreThreshold:r,softNmsSigma:o},h=B.runKernel(mf,c,l);return{selectedIndices:h[0],selectedScores:h[1]}}const xN=V({nonMaxSuppressionWithScore_:gN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function bN(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=T(n,"boxes","nonMaxSuppressionAsync"),a=T(t,"scores","nonMaxSuppressionAsync"),u=fi(i,a,e,s,r,o);e=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,o=u.softNmsSigma;const c=await Promise.all([i.data(),a.data()]),l=c[0],h=c[1],{selectedIndices:d,selectedScores:f}=lp(l,h,e,s,r,o);return i!==n&&i.dispose(),a!==t&&a.dispose(),{selectedIndices:Tn(d,"int32"),selectedScores:Tn(f)}}const wN=bN;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yN(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const i=T(n,"boxes","nonMaxSuppression"),a=T(t,"scores","nonMaxSuppression"),u=fi(i,a,e,s,r,null),c=u.maxOutputSize,l=u.iouThreshold,h=u.scoreThreshold,d={boxes:i,scores:a},f={maxOutputSize:c,iouThreshold:l,scoreThreshold:h,padToMaxOutputSize:o},m=B.runKernel(pf,d,f);return{selectedIndices:m[0],validOutputs:m[1]}}const vN=V({nonMaxSuppressionPadded_:yN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function CN(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const i=T(n,"boxes","nonMaxSuppressionAsync"),a=T(t,"scores","nonMaxSuppressionAsync"),u=fi(i,a,e,s,r,null),c=u.maxOutputSize,l=u.iouThreshold,h=u.scoreThreshold,[d,f]=await Promise.all([i.data(),a.data()]),{selectedIndices:m,validOutputs:p}=cp(d,f,c,l,h,o);return i!==n&&i.dispose(),a!==t&&a.dispose(),{selectedIndices:Tn(m,"int32"),validOutputs:qt(p,"int32")}}const DN=CN;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IN(n,t,e=!1,s=!1){const r=T(n,"images","resizeBilinear");k(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),k(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),k(s===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=r,i=!1;r.rank===3&&(i=!0,o=z(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:o},u={alignCorners:e,halfPixelCenters:s,size:t},c=B.runKernel(bl,a,u);return i?z(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const Nx=V({resizeBilinear_:IN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $N(n,t,e=!1,s=!1){const r=T(n,"images","resizeNearestNeighbor");k(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),k(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),k(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),k(s===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=r,i=!1;r.rank===3&&(i=!0,o=z(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:o},u={alignCorners:e,halfPixelCenters:s,size:t},c=B.runKernel(xl,a,u);return i?z(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const Ax=V({resizeNearestNeighbor_:$N});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kN(n,t="binary",e=!1,s=.5){const r=T(n,"image","threshold"),o=.2989,i=.587,a=.114,u=r.shape[0]*r.shape[1];let c=M(Tn([s]),255),l,h,d,f;if(k(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),k(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),k(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),k(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[l,h,d]=Wn(r,[1,1,1],-1);const x=M(l,o),g=M(h,i),b=M(d,a);f=rt(rt(x,g),b)}else f=n;if(t==="otsu"){const x=I$(mt(xx(f),"int32"),zo([]),256);c=SN(x,u)}const m=e?di(f,c):Gn(f,c);return mt(M(m,255),"int32")}function SN(n,t){let e=Tn([-1]),s=Tn([0]),r=Tn([0]),o,i,a,u,c,l;for(let h=0;h<n.size-1;h++){o=oe(n,0,h+1),i=oe(n,h+1),c=$t(Ct(o),t),l=$t(Ct(i),t);const d=Ct(M(o,qi(0,o.size)));a=$t(d,Ct(o));const f=_l(i.shape,o.size),m=rt(qi(0,i.size),f),p=M(i,m);u=$t(Ct(p),Ct(i));const x=St(a,u),g=St(a,u),b=M(c,l);r=M(M(b,x),g);const w=Gn(r,s);s=ln(w,r,s),e=ln(w,Tn([h]),e)}return e}const EN=V({threshold_:kN});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NN(n,t,e="nearest",s="constant",r=0,o){const i=T(n,"image","transform","float32"),a=T(t,"transforms","transform","float32");k(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),k(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),k(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const u={image:i,transforms:a},c={interpolation:e,fillMode:s,fillValue:r,outputShape:o};return B.runKernel(If,u,c)}const AN=V({transform_:NN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(n,t,e){const s=T(n,"a","bandPart");k(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[o,i]=s.shape.slice(-2);let a,u;typeof t=="number"?(k(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),k(t<=o,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`),a=T(t<0?o:t,"numLower","bandPart")):(k(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=ln(Yu(t,0),o,Hi(t,o))),typeof e=="number"?(k(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),k(e<=i,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${i}).`),u=T(e<0?i:e,"numUpper","bandPart")):(k(e.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),u=ln(Yu(e,0),i,Hi(e,i)));const c=z(qi(0,o,1,"int32"),[-1,1]),l=qi(0,i,1,"int32"),h=St(c,l),d=tr(di(h,a),go(h,De(u))),f=Fe([o,i],s.dtype);return z(Gs(io(z(s,[-1,o,i])).map(m=>ln(d,m,f))),r)}const FN=V({bandPart_:TN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RN(n){let t;if(Array.isArray(n)){t=!1,k(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let o=1;o<n.length;++o)k(n[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${r})`)}else t=!0,n=Wn(n,n.shape[0],0).map(r=>eu(r,[0]));k(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const e=[],s=n;for(let r=0;r<n.length;++r)e.push(B.tidy(()=>{let o=s[r];if(r>0)for(let i=0;i<r;++i){const a=M(Ct(M(e[i],o)),e[i]);o=St(o,a)}return $t(o,Ml(o,"euclidean"))}));return t?Gs(e,0):e}const _N=V({gramSchmidt_:RN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ON(n,t=!1){if(k(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return ug(n,t);{const e=n.shape.slice(0,n.shape.length-2).reduce((u,c)=>u*c),s=io(z(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],o=[];s.forEach(u=>{const[c,l]=ug(u,t);r.push(c),o.push(l)});const i=z(Gs(r,0),n.shape),a=z(Gs(o,0),n.shape);return[i,a]}}function ug(n,t=!1){return B.tidy(()=>{k(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const e=n.shape[0],s=n.shape[1];let r=ax(e),o=Kr(n);const i=wh([[1]],[1,1]);let a=Kr(i);const u=e>=s?s:e;for(let c=0;c<u;++c){const l=o,h=a,d=r;[a,o,r]=B.tidy(()=>{const f=oe(o,[c,c],[e-c,1]),m=Ml(f),p=oe(o,[c,c],[1,1]),x=ln(Gn(p,0),wh([[-1]]),wh([[1]])),g=St(p,M(x,m)),b=$t(f,g);b.shape[0]===1?a=Kr(i):a=wn([i,oe(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);const w=De($t(Ht(x,g),m)),y=oe(o,[c,0],[e-c,s]),v=M(w,a),C=Lt(a);if(c===0)o=St(y,Ht(v,Ht(C,y)));else{const $=St(y,Ht(v,Ht(C,y)));o=wn([oe(o,[0,0],[c,s]),$],0)}const D=Lt(v),I=oe(r,[0,c],[e,r.shape[1]-c]);if(c===0)r=St(I,Ht(Ht(I,a),D));else{const $=St(I,Ht(Ht(I,a),D));r=wn([oe(r,[0,0],[e,c]),$],1)}return[a,o,r]}),_t([l,h,d])}return!t&&e>s&&(r=oe(r,[0,0],[e,s]),o=oe(o,[0,0],[s,s])),[r,o]})}const MN=V({qr_:ON});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Js={flipLeftRight:QE,grayscaleToRGB:eN,resizeNearestNeighbor:Ax,resizeBilinear:Nx,rgbToGrayscale:sN,rotateWithOffset:oN,cropAndResize:ZE,nonMaxSuppression:aN,nonMaxSuppressionAsync:mN,nonMaxSuppressionWithScore:xN,nonMaxSuppressionWithScoreAsync:wN,nonMaxSuppressionPadded:vN,nonMaxSuppressionPaddedAsync:DN,threshold:EN,transform:AN},BN={bandPart:FN,gramSchmidt:_N,qr:MN};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LN=new Map,PN=new Map;class pi{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Yn{constructor(){this.classNameMap={}}static getMap(){return Yn.instance==null&&(Yn.instance=new Yn),Yn.instance}static register(t){Yn.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function et(n,t,e){k(n.className!=null,()=>"Class being registered does not have the static className property defined."),k(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),k(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof e>"u"&&(e=n.className);const s=e,r=t+">"+s;return Yn.register(n),LN.set(r,n),PN.set(n,r),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rr extends pi{minimize(t,e=!1,s){const{value:r,grads:o}=this.computeGradients(t,s);if(s!=null){const i=s.map(a=>({name:a.name,tensor:o[a.name]}));this.applyGradients(i)}else this.applyGradients(o);return _t(o),e?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return qk(t,e)}dispose(){this.iterations_!=null&&_t(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:qt(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Rr,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tx extends Rr{static get className(){return"Adadelta"}constructor(t,e,s=null){super(),this.learningRate=t,this.rho=e,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=B.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=B.registeredVariables[s],i=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:W(()=>Pt(o).variable(i))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:W(()=>Pt(o).variable(i))});const a=Array.isArray(t)?t[r].tensor:t[s];if(a==null)return;const u=this.accumulatedGrads[r].variable,c=this.accumulatedUpdates[r].variable;W(()=>{const l=rt(M(u,this.rho),M(ce(a),1-this.rho)),h=M($t(hn(rt(c,this.epsilon)),hn(rt(u,this.epsilon))),a),d=rt(M(c,this.rho),M(ce(h),1-this.rho));u.assign(l),c.assign(d);const f=rt(M(h,-this.learningRate),o);o.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(_t(this.accumulatedGrads.map(t=>t.variable)),_t(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=t.length/2,s=!1;this.accumulatedGrads=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=t.slice(e,e*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fx extends Rr{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=B.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:W(()=>_l(o.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(t)?t[r].tensor:t[s];if(i==null)return;const a=this.accumulatedGrads[r].variable;W(()=>{const u=rt(a,ce(i));a.assign(u);const c=rt(M($t(i,hn(rt(u,B.backend.epsilon()))),-this.learningRate),o);o.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&_t(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulatedGrads=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rx extends Rr{static get className(){return"Adam"}constructor(t,e,s,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],W(()=>{this.accBeta1=qt(e).variable(),this.accBeta2=qt(s).variable()}),r==null&&(this.epsilon=B.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);W(()=>{const s=St(1,this.accBeta1),r=St(1,this.accBeta2);e.forEach((o,i)=>{const a=B.registeredVariables[o],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:W(()=>Pt(a).variable(u))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${o}/v`,variable:W(()=>Pt(a).variable(u))});const c=Array.isArray(t)?t[i].tensor:t[o];if(c==null)return;const l=this.accumulatedFirstMoment[i].variable,h=this.accumulatedSecondMoment[i].variable,d=rt(M(l,this.beta1),M(c,1-this.beta1)),f=rt(M(h,this.beta2),M(ce(c),1-this.beta2)),m=$t(d,s),p=$t(f,r);l.assign(d),h.assign(f);const x=rt(M($t(m,rt(hn(p),this.epsilon)),-this.learningRate),a);a.assign(x)}),this.accBeta1.assign(M(this.accBeta1,this.beta1)),this.accBeta2.assign(M(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&_t(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&_t(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),W(()=>{this.accBeta1.assign(Yo(this.beta1,this.iterations_+1)),this.accBeta2.assign(Yo(this.beta2,this.iterations_+1))});const e=t.length/2,s=!1;this.accumulatedFirstMoment=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _x extends Rr{static get className(){return"Adamax"}constructor(t,e,s,r=null,o=0){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],W(()=>{this.iteration=qt(0).variable(),this.accBeta1=qt(e).variable()}),r==null&&(this.epsilon=B.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);W(()=>{const s=St(1,this.accBeta1),r=$t(-this.learningRate,rt(M(this.iteration,this.decay),1));e.forEach((o,i)=>{const a=B.registeredVariables[o],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:Pt(a).variable(u)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${o}/v`,variable:Pt(a).variable(u)});const c=Array.isArray(t)?t[i].tensor:t[o];if(c==null)return;const l=this.accumulatedFirstMoment[i].variable,h=this.accumulatedWeightedInfNorm[i].variable,d=rt(M(l,this.beta1),M(c,1-this.beta1)),f=M(h,this.beta2),m=an(c),p=Tr(f,m);l.assign(d),h.assign(p);const x=rt(M($t(r,s),$t(d,rt(p,this.epsilon))),a);a.assign(x)}),this.iteration.assign(rt(this.iteration,1)),this.accBeta1.assign(M(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&_t(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&_t(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dp extends Rr{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=Array.isArray(t)?t[r].tensor:t[s];if(o==null)return;const i=B.registeredVariables[s];W(()=>{const a=rt(M(this.c,o),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=Ms(qt(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ox extends dp{static get className(){return"Momentum"}constructor(t,e,s=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=s,this.accumulations=[],this.m=qt(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=B.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:W(()=>Pt(o).variable(!1))});const i=this.accumulations[r].variable,a=Array.isArray(t)?t[r].tensor:t[s];a!=null&&W(()=>{let u;const c=rt(M(this.m,i),a);this.useNesterov?u=rt(M(this.c,rt(a,M(c,this.m))),o):u=rt(M(this.c,c),o),i.assign(c),o.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&_t(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulations=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mx extends Rr{static get className(){return"RMSProp"}constructor(t,e=.9,s=0,r=null,o=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,r==null&&(this.epsilon=B.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=B.registeredVariables[s],i=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:W(()=>Pt(o).variable(i))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:W(()=>Pt(o).variable(i))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:W(()=>Pt(o).variable(i))});const a=Array.isArray(t)?t[r].tensor:t[s];if(a==null)return;const u=this.accumulatedMeanSquares[r].variable,c=this.accumulatedMoments[r].variable;W(()=>{const l=rt(M(u,this.decay),M(ce(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[r].variable,d=rt(M(h,this.decay),M(a,1-this.decay)),f=$t(M(a,this.learningRate),hn(St(l,rt(ce(d),this.epsilon)))),m=rt(M(c,this.momentum),f);u.assign(l),h.assign(d),c.assign(m);const p=St(o,m);o.assign(p)}else{const h=rt(M(u,this.decay),M(ce(a),1-this.decay)),d=rt(M(c,this.momentum),$t(M(a,this.learningRate),hn(rt(h,this.epsilon))));u.assign(h),c.assign(d);const f=St(o,d);o.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&_t(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&_t(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&_t(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,s=!1;this.accumulatedMeanSquares=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=t.slice(e,e*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zN=[Tx,Fx,Rx,_x,Ox,Mx,dp];function VN(){for(const n of zN)et(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cg(n,t,e,s){i(n),e=e??0,s=s??1,a(e,s);let r=0;const o=u=>(u.then(c=>{const l=e+ ++r/n.length*(s-e);return t(l),c}),u);function i(u){k(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function a(u,c){k(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),k(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),k(c>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${c}`)}return Promise.all(n.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function WN(n,t){t==null&&(t={});const e=t.fetchFunc==null?U().platform.fetch:t.fetchFunc,s=n.map(h=>e(h,t.requestInit,{isBinary:!0})),r=0,o=.5,a=(t.onProgress==null?await Promise.all(s):await cg(s,t.onProgress,r,o)).map(h=>h.arrayBuffer()),u=.5,c=1;return t.onProgress==null?await Promise.all(a):await cg(a,t.onProgress,u,c)}function UN(n,t){var e;const s=t.fetchFunc==null?U().platform.fetch:t.fetchFunc;let r=0,o;return(e=t.onProgress)===null||e===void 0||e.call(t,0),new ReadableStream({pull:async i=>{for(var a;r<n.length;){o||(o=(await s(n[r],t.requestInit,{isBinary:!0})).body.getReader());const{done:u,value:c}=await o.read();if(u){r++,o=void 0,(a=t.onProgress)===null||a===void 0||a.call(t,r/n.length);continue}i.enqueue(c);return}i.close()}})}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GN="application/octet-stream",HN="application/json";class fp{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(k(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=U().platform.fetch,k(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&k(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{},this.loadOptions=e}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r=rI(t,s);if(e.body.append("model.json",new Blob([JSON.stringify(r)],{type:HN}),"model.json"),t.weightData!=null){const i=Er.join(t.weightData);e.body.append("model.weights.bin",new Blob([i],{type:GN}),"model.weights.bin")}const o=await this.fetch(this.path,e);if(o.ok)return{modelArtifactsInfo:Af(t),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async loadModelJSON(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const s=e.modelTopology,r=e.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const t=await this.loadModelJSON();return iI(t,e=>this.loadWeights(e))}async loadStream(){const t=await this.loadModelJSON(),e=await this.getWeightUrls(t.weightsManifest),s=sg(t.weightsManifest),r=()=>UN(e,this.loadOptions);return Object.assign(Object.assign({},t),{weightSpecs:s,getWeightStream:r})}async getWeightUrls(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=qN(e),o=this.weightPathPrefix||s,i=[],a=[];for(const u of t)for(const c of u.paths)this.weightUrlConverter!=null?a.push(this.weightUrlConverter(c)):i.push(o+c+r);return this.weightUrlConverter&&i.push(...await Promise.all(a)),i}async loadWeights(t){const e=await this.getWeightUrls(t),s=sg(t),r=await WN(e,this.loadOptions);return[s,r]}}fp.URL_SCHEME_REGEX=/^https?:\/\//;function qN(n){const t=n.lastIndexOf("/"),e=n.lastIndexOf("?"),s=n.substring(0,t),r=e>t?n.substring(e):"";return[s+"/",r]}function lg(n){return n.match(fp.URL_SCHEME_REGEX)!=null}const Bx=(n,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(n)?e=n.every(s=>lg(s)):e=lg(n),e)return Lx(n,t)}return null};Pe.registerSaveRouter(Bx);Pe.registerLoadRouter(Bx);function Lx(n,t){return new fp(n,t)}function jN(n,t){return Lx(n,t)}function pp(n,t){const e=n.shape.length,s=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${e}`);if(X(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=t.shape,o=r[r.length-1];let i=1;for(let h=0;h<r.length-1;++h)i*=r[h];const a=n.shape,u=r.slice();u.pop();let c=1;for(let h=o;h<e;++h)c*=a[h],u.push(a[h]);const l=[...vt(n.shape).map(h=>h/c),1].slice(0,o);return[u,i,c,l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const id=-2,KN=-1;function mp(n,t,e){const s=n.shape.length;k(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),k(s===e.length,()=>`Error in slice${s}D: Length of size ${e} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)k(t[r]+e[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+e[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function XN(n){const t=[];let e=0;for(;n>0;)n&1&&t.push(e),n/=2,e++;return t}function gp(n,t,e){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((t[r]-n[r])/e[r]);return s}function Px(n,t,e,s){const r=[...n];for(let o=r.length;o<s.length;o++)r.push(1);for(let o=0;o<e;o++)o===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function zx(n,t,e){return e<=n?e:e-(t-1)}function Vx(n,t){const e=[];for(let s=0;s<n;s++)e.push(t+s);return e}function YN(n,t,e,s,r,o,i,a,u){const c=n.length;let l=new Array(c),h=new Array(c),d=new Array(c);if(t.length&&e>0){const f=t[0],m=e+1;l=Wx(i,f,m,s,n),h=Ux(a,f,m,r,n),d=Px(o,f,m,n)}else for(let f=0;f<c;f++)l[f]=Hx(i,s,o,n,f,u),h[f]=qx(a,r,o,n,f,u),d[f]=Gx(o,f,u);return{begin:l,end:h,strides:d}}function Wx(n,t,e,s,r){const o=[...r],i=Vx(e,t);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=0;else{const u=zx(t,e,a);let c=s[u];n&1<<u&&(c=0),o[a]=c}return o}function Ux(n,t,e,s,r){const o=[...r],i=Vx(e,t);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{const u=zx(t,e,a);let c=s[u];n&1<<u&&(c=Number.MAX_SAFE_INTEGER),o[a]=c}for(let a=0;a<o.length;a++){const u=r[a];o[a]<0&&(o[a]+=u),o[a]=Zr(0,o[a],r[a])}return o}function Gx(n,t,e){let s=n[t];return(e&1<<t||s==null)&&(s=1),s}function Hx(n,t,e,s,r,o){let i=t[r];const a=e[r]||1;(n&1<<r||o&1<<r||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const u=s[r];return i<0&&(i+=u),i=Zr(0,i,u-1),i}function qx(n,t,e,s,r,o){let i=t[r];const a=e[r]||1;(n&1<<r||o&1<<r||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const u=s[r];return i<0&&(i+=u),a>0?i=Zr(0,i,u):i=Zr(-1,i,u-1),i}function xp(n,t,e){let s=e.length;for(let r=0;r<e.length;r++)if(e[r]>1){s=r;break}for(let r=s+1;r<e.length;r++)if(t[r]>0||e[r]!==n[r])return!1;return!0}function bp(n,t){let e=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)e+=n[s]*t[s];return e}function Pl(n,t,e){let s;const r=n.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(i=>{k(i!==-1,()=>"slice() does not support negative begin indexing.")});let o;return e==null?o=new Array(r).fill(-1):typeof e=="number"?o=[e,...new Array(r-1).fill(-1)]:e.length<r?o=e.concat(new Array(r-e.length).fill(-1)):o=e,o=o.map((i,a)=>i>=0?i:(k(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),n.shape[a]-s[a])),[s,o]}function wp(n,t,e,s,r,o,i,a,u){let c;if(s==null?(c=new Array(t.length),c.fill(1)):c=s,i!=null&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:c.slice(),beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:u};for(let w=0;w<h.dims;w++)l&&1<<w&a&&h.numAddAxisAfterEllipsis++,1<<w&i&&(l=!0);l||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};ZN(h,d);let f=!0,m=!0,p=!0;const x=[],g=[];for(let w=0;w<n.length;++w){if(d.strides[w]===0)throw Error(`strides[${w}] must be non-zero`);const y=!!(d.shrinkAxisMask&1<<w),v=n[w];if(v===-1){x.push(y?1:-1);continue}const C=[d.beginMask&1<<w,d.endMask&1<<w],D=[d.strides[w]>0?0:-1,d.strides[w]>0?v:v-1];if(y&&d.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");p=p&&d.strides[w]===1;const I=!!(d.beginMask&1<<w&&d.endMask&1<<w);if(d.beginValid&&d.endValid){if(y){const N=d.begin[w]<0?v+d.begin[w]:d.begin[w];if(d.begin[w]=N,d.end[w]=d.begin[w]+1,N<0||N>=v)throw Error(`slice index ${d.begin[w]} of dimension ${w} out of bounds.`)}else d.begin[w]=hg(d.begin[w],0,d.strides[w],v,C,D),d.end[w]=hg(d.end[w],1,d.strides[w],v,C,D);const E=d.strides[w]===1&&d.begin[w]===0&&d.end[w]===v;f=f&&E,m=m&&(w===0&&d.strides[w]===1||E)}else f=f&&d.strides[w]===1&&I,m=m&&(w===0&&d.strides[w]===1||I);let $,S=!1;if(d.beginValid&&d.endValid?($=d.end[w]-d.begin[w],S=!0):y?($=1,S=!0):I&&v>=0&&(d.strides[w]<0?$=-v:$=v,S=!0),S){let E;$===0||$<0!=d.strides[w]<0?E=0:E=Math.trunc($/d.strides[w])+($%d.strides[w]!==0?1:0),x.push(E)}else x.push(-1)}for(let w=0;w<d.finalShapeGatherIndices.length;++w){const y=d.finalShapeGatherIndices[w];y>=0?g.push(x[y]):y===id&&g.push(1)}return{finalShapeSparse:g.filter((w,y)=>d.finalShapeGatherIndices[y]!==id),finalShape:g,isIdentity:f,sliceDim0:m,isSimpleSlice:p,begin:d.begin,end:d.end,strides:d.strides}}function ZN(n,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=n.begin!=null,t.endValid=n.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(t.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,t.dims);for(;e<r;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=s}else if(1<<s&n.newAxisMask)t.finalShapeGatherIndices.push(id),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);n.begin!=null&&(t.begin[e]=n.begin[s]),n.end!=null&&(t.end[e]=n.end[s]),t.strides[e]=n.strides[s],n.beginMask&1<<s&&(t.beginMask|=1<<e),n.endMask&1<<s&&(t.endMask|=1<<e),n.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(KN),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[e]=s,e++}}function hg(n,t,e,s,r,o){if(r[t])return e>0?o[t]:o[t+1&1];{const i=n<0?s+n:n;return i<o[0]?o[0]:i>o[1]?o[1]:i}}const JN=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:mp,computeFlatOffset:bp,computeOutShape:gp,getNormalizedAxes:YN,isSliceContinous:xp,maskToAxes:XN,parseSliceParams:Pl,sliceInfo:wp,startForAxis:Hx,startIndicesWithElidedDims:Wx,stopForAxis:qx,stopIndicesWithElidedDims:Ux,stridesForAxis:Gx,stridesWithElidedDims:Px},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QN{static sgd(t){return new dp(t)}static momentum(t,e,s=!1){return new Ox(t,e,s)}static rmsprop(t,e=.9,s=0,r=null,o=!1){return new Mx(t,e,s,r,o)}static adam(t=.001,e=.9,s=.999,r=null){return new Rx(t,e,s,r)}static adadelta(t=.001,e=.95,s=null){return new Tx(t,e,s)}static adamax(t=.002,e=.9,s=.999,r=null,o=0){return new _x(t,e,s,r,o)}static adagrad(t,e=.1){return new Fx(t,e)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vr=QN;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tA=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n())();function yp(){return new Promise(n=>tA(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vp(n,t){const e=n[0].length;n.forEach((r,o)=>{k(r.length===e,()=>`Error in concat${e}D: rank of tensors[${o}] must be the same as the rank of the rest (${e})`)}),k(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const s=n[0];n.forEach((r,o)=>{for(let i=0;i<e;i++)k(i===t||r[i]===s[i],()=>`Error in concat${e}D: Shape of tensors[${o}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}function Bs(n,t){const e=n[0].slice();for(let s=1;s<n.length;s++)e[t]+=n[s][t];return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var fs;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(fs||(fs={}));function jx(n,t,e){let s=new Array;if(e==null&&t==null)return s;if(t==null)for(;s.length<n+e.length;)s.push(-1);else s=t.slice();if(e==null)return s;if(n+e.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${n+e.length}, but shape.rank = ${s.length}`);for(let r=1;r<e.length;++r){const o=e[r],i=s[s.length-e.length+r],a=s[i];if(o>=0)if(a>=0){if(a!==o)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+n}] = ${o} but shape[${r+n}] = ${a}`)}else s[i]=o}return s}function Kx(n){const t={FIRST_DIM_SIZE:fs.FIRST_DIM_SIZE,VALUE_ROWIDS:fs.VALUE_ROWIDS,ROW_LENGTHS:fs.ROW_LENGTHS,ROW_SPLITS:fs.ROW_SPLITS,ROW_LIMITS:fs.ROW_LIMITS,ROW_STARTS:fs.ROW_STARTS},e=[];for(const s of n)if(s in t)e.push(t[s]);else break;return e}function Xx(n){return n.length===0?0:n[0]===fs.FIRST_DIM_SIZE?n.length-1:n.length}function Yx(n,t){if(n==null||t==null)return;const e=n.length,s=t.length;if(e>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(e,s-1);++r){const o=n[r],i=t[r+1];if(o>=0&&i>=0&&o!==1&&o!==i)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-n.length}] = ${o} but ragged tensor input.flatValues.shape[${r-n.length}] = ${i}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cp=30;function zl(n){return n<=Cp?n:Wh(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dp(n,t,e){const s=e*(typeof n=="number"?n:n[0]),r=t*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function su(n,t,e,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(n[0]/e),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const o=t.length;for(let i=0;i<o;++i)r=r.concat([n[i+1]/t[i],t[i]]);r=r.concat(n.slice(o+1))}return r}function ru(n,t,e=!0){const s=[];if(e){s.push(t);for(let r=t+1;r<n;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{const r=[],o=[];for(let i=1;i<n;++i)i>=t*2+1||i%2===1?o.push(i):r.push(i);s.push(...r),s.push(0),s.push(...o)}return s}function ou(n,t,e,s=!0){const r=[];s?r.push(n[0]/e):r.push(n[0]*e);for(let o=1;o<n.length;++o)o<=t.length?s?r.push(t[o-1]*n[o]):r.push(n[o]/t[o-1]):r.push(n[o]);return r}function Ip(n,t){const e=[0];for(let s=0;s<t;++s)e.push(n[s][0]);return e}function $p(n,t,e){const s=n.slice(0,1);for(let r=0;r<e;++r)s.push(n[r+1]-t[r][0]-t[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vl=1.7580993408473768,Wl=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kp=.3275911,Sp=.254829592,Ep=-.284496736,Np=1.421413741,Ap=-1.453152027,Tp=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function er(n,t){if(n.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${t.length}.`);const e=new Float32Array(n.length*2);for(let s=0;s<e.length;s+=2)e[s]=n[s/2],e[s+1]=t[s/2];return e}function Zx(n){const t=new Float32Array(n.length/2),e=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)t[s/2]=n[s],e[s/2]=n[s+1];return{real:t,imag:e}}function Jx(n){const t=Math.ceil(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<n.length;r+=4)e[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:e,imag:s}}function Qx(n){const t=Math.floor(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<n.length;r+=4)e[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:e,imag:s}}function Fp(n,t){const e=n[t*2],s=n[t*2+1];return{real:e,imag:s}}function tb(n,t,e,s){n[s*2]=t,n[s*2+1]=e}function eb(n,t){const e=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const o=(t?2:-2)*Math.PI*(r/n);e[r]=Math.cos(o),s[r]=Math.sin(o)}return{real:e,imag:s}}function nb(n,t,e){const s=(e?2:-2)*Math.PI*(n/t),r=Math.cos(s),o=Math.sin(s);return{real:r,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yh="->",eA=/->/g,dg=",",fg="...";function Rp(n,t){n=n.replace(/\s/g,"");const e=(n.length-n.replace(eA,"").length)/yh.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${yh}").`);const[s,r]=n.split(yh);k(s.indexOf(fg)===-1,()=>`The ellipsis notation ("${fg}") is not supported yet.`);const o=s.split(dg),i=o.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<r.length;++d){const f=r[d];if(!o.some(m=>m.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);a.indexOf(f)===-1&&a.push(f)}for(let d=0;d<s.length;++d){const f=s[d];a.indexOf(f)===-1&&f!==dg&&a.push(f)}const u=new Array(o.length);for(let d=0;d<i;++d){if(new Set(o[d].split("")).size!==o[d].length)throw new Error(`Found duplicate axes in input component ${o[d]}. Support for duplicate axes in input is not implemented yet.`);u[d]=[];for(let f=0;f<o[d].length;++f)u[d].push(a.indexOf(o[d][f]))}const c=a.length,l=r.length,h=[];for(let d=l;d<c;++d)h.push(d);return{allDims:a,summedDims:h,idDims:u}}function _p(n,t){let e=new Array(n);e.fill(-1);for(let r=0;r<t.length;++r)e[t[r]]=r;const s=[];for(let r=0;r<n;++r)e[r]===-1&&s.push(r);return e=e.filter(r=>r!==-1),{permutationIndices:e,expandDims:s}}function Op(n,t,e){const s=new Array(n);for(let r=0;r<e.length;++r){const o=e[r].shape;for(let i=0;i<t[r].length;++i)s[t[r][i]]===void 0?s[t[r][i]]=o[i]:k(s[t[r][i]]===o[i],()=>`Expected dimension ${s[t[r][i]]} at axis ${i} of input shaped ${JSON.stringify(o)}, but got dimension ${o[i]}`)}}function Mp(n,t){const e=n,s=[];let r=0;n.length===0&&e.push(-1),r=n.length+1;for(let i=0;i<r;++i)s.push([]);const o=[];for(let i=0;i<e.length;++i){const a=e[i],u=nA(t,a);for(const c of u)o.indexOf(c)===-1&&(s[i].push(c),o.push(c))}return{path:e,steps:s}}function Bp(n){return n.every((t,e)=>t===e)}function nA(n,t){const e=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(t)!==-1||t===-1)&&e.push(s);return e}function Lp(n,t,e=0){let s=[];if(typeof t=="number")k(n.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(n.shape[e]/t);else{const r=t.reduce((i,a)=>(a===-1&&(i+=1),i),0);k(r<=1,()=>"There should be only one negative value in split array.");const o=t.indexOf(-1);if(o!==-1){const i=t.reduce((a,u)=>u>0?a+u:a);t[o]=n.shape[e]-i}k(n.shape[e]===t.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sb(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function rb(n,t){return`indices(${n}, 0) is invalid: ${t} < 0`}function ob(n,t,e){return`indices(${n}, 0) is invalid: ${t} >= ${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ib(n,t){return`only one output dimension may be -1, not both ${n} and ${t}`}function ab(n,t){return`size ${n} must be non-negative, not ${t}`}function ub(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function cb(n,t){const e=X(n),s=X(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${t}`}function lb(n,t){const e=X(n),s=X(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ad(){return"segment ids must be >= 0"}function hb(){return"segment ids are not increasing"}function db(n,t){return`Segment id ${n} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function fb(n,t,e){return`Bad: indices[${n}] == ${t} out of range [0, ${e})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pb(n,t){let e=!1,s;for(n<=Cp?(s=n,e=!0):s=Wh(n,Math.floor(Math.sqrt(n)));!e;)s>t||s===n?e=!0:s=Wh(n,s+1);return s}function mb(n,t,e){const s=[],r=n.length;for(let o=0;o<r;o++)o!==t?s.push(n[o]):s.push(e);return s}function Pp(n,t,e,s){const r=t.shape.length,o=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${o}).`);if(e<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${e}).`);for(let h=0;h<s;++h)if(n.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const i=n.shape[e],a=[];let u=1,c=1,l=1;for(let h=0;h<s;++h)a.push(n.shape[h]),u*=n.shape[h];for(let h=s;h<e;h++)a.push(n.shape[h]),c*=n.shape[h];for(let h=s;h<r;h++)a.push(t.shape[h]);for(let h=e+1;h<o;h++)a.push(n.shape[h]),l*=n.shape[h];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:i,outputShape:a}}const sA=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:Pp,computeOutShape:mb,segOpComputeOptimalWindowSize:pb},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nr(n){try{return n.map(t=>br(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function gb(n){return n.map(t=>pr(t))}const rA=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:Sp,ERF_A2:Ep,ERF_A3:Np,ERF_A4:Ap,ERF_A5:Tp,ERF_P:kp,PARALLELIZE_THRESHOLD:Cp,get RowPartitionType(){return fs},SELU_SCALE:Wl,SELU_SCALEALPHA:Vl,applyActivation:ip,assertAndGetBroadcastShape:Tt,assertAxesAreInnerMostDims:Xe,assertParamsConsistent:vp,assignToTypedArray:tb,axesAreInnerMostDims:Lf,calculateShapes:wo,checkEinsumDimSizes:Op,checkPadOnDimRoundingMode:Cn,combineLocations:ox,combineRaggedTensorToTensorShapes:jx,complexWithEvenIndex:Jx,complexWithOddIndex:Qx,computeConv2DInfo:Ke,computeConv3DInfo:Nr,computeDefaultPad:Tf,computeDilation2DInfo:Ja,computeOptimalWindowSize:zl,computeOutAndReduceShapes:Ge,computeOutShape:Bs,computePool2DInfo:rs,computePool3DInfo:rr,convertConv2DDataFormat:or,decodeEinsumEquation:Rp,eitherStridesOrDilationsAreOne:nn,expandShapeToKeepDim:Ne,exponent:nb,exponents:eb,fromStringArrayToUint8:gb,fromUint8ToStringArray:nr,getAxesPermutation:ge,getBroadcastDims:Xo,getComplexWithIndex:Fp,getEinsumComputePath:Mp,getEinsumPermutation:_p,getFusedBiasGradient:op,getFusedDyActivation:rp,getImageCenter:Dp,getInnerMostAxes:$e,getPermuted:ru,getRaggedRank:Xx,getReductionAxes:Be,getReshaped:su,getReshapedPermuted:ou,getRowPartitionTypesHelper:Kx,getSliceBeginCoords:Ip,getSliceSize:$p,getSparseFillEmptyRowsIndicesDenseShapeMismatch:sb,getSparseFillEmptyRowsNegativeIndexErrorMessage:rb,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:ob,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:ub,getSparseReshapeInputOutputMismatchErrorMessage:lb,getSparseReshapeInputOutputMultipleErrorMessage:cb,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:ib,getSparseReshapeNegativeOutputDimErrorMessage:ab,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:fb,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:ad,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:hb,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:db,getUndoAxesPermutation:Ar,isIdentityPermutation:Bp,log:C2,mergeRealAndImagArrays:er,prepareAndValidate:pp,prepareSplitSize:Lp,segment_util:sA,shouldFuse:ap,slice_util:JN,splitRealAndImagArrays:Zx,stridesOrDilationsArePositive:so,tupleValuesAreOne:no,upcastType:Fn,validateDefaultValueShape:Yx,validateInput:NE,validateUpdateShape:$x,warn:Pn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */VN();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xb={kernelName:Nc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(n,nu(mt(e,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oA={kernelName:sa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=ce(mt(e,"float32")),r=hn(St(qt(1),s));return De($t(n,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iA={kernelName:ra,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=hn(St(ce(mt(e,"float32")),1));return $t(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aA={kernelName:li,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Tt(e.shape,s.shape);return{a:()=>{let a=n;const u=Be(e.shape,r);return u.length>0&&(a=Ct(a,u)),z(a,e.shape)},b:()=>{let a=n;const u=Be(s.shape,r);return u.length>0&&(a=Ct(a,u)),z(a,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uA={kernelName:Pd,saveAllInputs:!0,gradFunc:(n,t)=>{const e={};return t.forEach((s,r)=>{e[r]=()=>n.clone()}),e}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cA={kernelName:Ac,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Pt(e)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lA={kernelName:Tc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Pt(e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hA={kernelName:oa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>$t(n,hn(St(qt(1),ce(mt(e,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dA={kernelName:ia,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=hn(rt(qt(1),ce(mt(e,"float32"))));return $t(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fA={kernelName:ca,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Tt(e.shape,s.shape);return{a:()=>{const a=rt(ce(e),ce(s));let u=M(n,$t(s,a));const c=Be(e.shape,r);return c.length>0&&(u=Ct(u,c)),z(u,e.shape)},b:()=>{const a=rt(ce(e),ce(s));let u=De(M(n,$t(e,a)));const c=Be(s.shape,r);return c.length>0&&(u=Ct(u,c)),z(u,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pA={kernelName:aa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>$t(n,rt(ce(mt(e,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mA={kernelName:ua,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>$t(n,St(qt(1),ce(mt(e,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gA(n,t,e,s,r,o){const i=T(n,"dy","avgPool3dGrad"),a=T(t,"input","avgPool3dGrad");let u=i,c=a,l=!1;a.rank===4&&(l=!0,u=z(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=z(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),k(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),k(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),Cn("avgPool3dGrad",r,o);const h={dy:u,input:c},d={filterSize:e,strides:s,pad:r,dimRoundingMode:o},f=B.runKernel(Ud,h,d);return l?z(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const xA=V({avgPool3dGrad_:gA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bA={kernelName:Rc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:r,strides:o,pad:i,dimRoundingMode:a}=e;return{x:()=>xA(n,s,r,o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wA(n,t,e,s,r){const o=T(n,"dy","avgPoolGrad"),i=T(t,"input","avgPoolGrad");k(i.rank===o.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${o.rank})`);let a=i,u=o,c=!1;i.rank===3&&(c=!0,a=z(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=z(o,[1,o.shape[0],o.shape[1],o.shape[2]])),k(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),k(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const l={dy:u,input:a},h={filterSize:e,strides:s,pad:r},d=B.runKernel(Wd,l,h);return c?z(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const yA=V({avgPoolGrad_:wA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vA={kernelName:Fc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:r,strides:o,pad:i}=e;return{x:()=>yA(n,s,r,o,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CA={kernelName:_c,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{const[s,r]=t,{transposeA:o,transposeB:i}=e;return!o&&!i?{a:()=>Ht(n,r,!1,!0),b:()=>Ht(s,n,!0,!1)}:!o&&i?{a:()=>Ht(n,r,!1,!1),b:()=>Ht(n,s,!0,!1)}:o&&!i?{a:()=>Ht(r,n,!1,!0),b:()=>Ht(s,n,!1,!1)}:{a:()=>Ht(r,n,!0,!0),b:()=>Ht(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DA={kernelName:Oc,gradFunc:(n,t,e)=>{const{blockShape:s,crops:r}=e;return{x:()=>qf(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IA={kernelName:b2,gradFunc:(n,t,e)=>{const s=e,r=s.inputShape,o=s.shape,i=Array.from(o);for(let u=r.length-1;u>=0;u--)if(r[u]===o[u])i[u]=1;else if(r[u]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${o}].`);const a=[];for(let u=0;u<i.length;u++)i[u]>1&&a.push(u);return{x:()=>Ct(n,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $A={kernelName:la,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kA={kernelName:ha,gradFunc:n=>({x:()=>Pt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SA={kernelName:da,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{clipValueMin:r,clipValueMax:o}=e;return{x:()=>ln(tr(go(s,r),di(s,o)),n,Pt(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EA={kernelName:Mc,inputsToSave:["x"],gradFunc:xb.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NA={kernelName:Bc,saveAllInputs:!0,gradFunc:(n,t,e)=>{const s=t.map(u=>u.shape),{axis:r}=e,o=Mt(r,t[0].shape)[0],i=s.map(u=>u[o]);return Wn(n,i,o).map(u=>()=>u)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AA={kernelName:Lc,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,{dilations:o,strides:i,pad:a,dataFormat:u}=e;return k(no(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>Of(s.shape,n,r,i,a,u),filter:()=>sp(s,n,r.shape,i,a,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TA={kernelName:Pc,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,{strides:o,pad:i,dataFormat:a,dimRoundingMode:u}=e;return{dy:()=>ro(n,r,o,i,a,1,u),filter:()=>sp(n,s,r.shape,o,i,a,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FA(n,t,e,s,r){let o=n;n.rank===4&&(o=z(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let i=t;i.rank===4&&(i=z(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),k(o.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),k(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),k(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),k(o.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${e[3]}.`),k(i.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${e[4]}).`);const a={x:o,dy:i},u={strides:s,pad:r,filterShape:e};return B.runKernel(Kd,a,u)}const RA=V({conv3DBackpropFilter_:FA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _A={kernelName:zc,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:r,pad:o}=e;k(no(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,a]=t;return{x:()=>nx(i.shape,n,a,r,o),filter:()=>RA(i,n,a.shape,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OA={kernelName:fa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(De(vx(mt(e,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MA={kernelName:pa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(Cx(mt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BA={kernelName:Vc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r,exclusive:o,reverse:i}=e;return{x:()=>{const a=ge([r],s.rank);let u=rx(n,r,o,!i);return a!=null&&(u=Lt(u,a)),u}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LA={kernelName:Wc,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:r,pad:o,dimRoundingMode:i}=e,a=s??[1,1];k(no(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[u,c]=t;return k(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),k(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),k(u.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),k(nn(r,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${a}'.`),Cn("depthwiseConv2d",o,i),{x:()=>KE(u.shape,n,c,r,o,a,i),filter:()=>qE(u,n,c.shape,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PA={kernelName:Uc,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,o={x:s,filter:r,dy:n},i={x:s,filter:r,dy:n};return{x:()=>B.runKernel(Uh,o,e),filter:()=>B.runKernel(Gh,i,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zA={kernelName:ga,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t,s={dy:n,y:e};return{x:()=>B.runKernel(sf,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VA={kernelName:xa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=M(Ws(De(ce(e))),2/Math.sqrt(Math.PI));return{x:()=>M(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WA={kernelName:ba,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(n,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UA={kernelName:Hc,inputsToSave:["input"],gradFunc:(n,t)=>{const[e]=t;return{input:()=>z(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GA={kernelName:wa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(n,Ws(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HA={kernelName:ya,gradFunc:n=>({x:()=>Pt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qA={kernelName:va,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Tt(e.shape,s.shape);return{a:()=>{const a=$t(n,mt(s,"float32")),u=Be(e.shape,r);return u.length>0?z(Ct(a,u),e.shape):a},b:()=>{let a=M(n,mt(e,"float32"));const u=Be(s.shape,r);u.length>0&&(a=z(Ct(a,u),s.shape));const c=ce(s);return De($t(a,mt(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jA={kernelName:qc,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{const{varianceEpsilon:s}=e,[r,o,i,a]=t,u=a??qt(1),c=Be(o.shape,r.shape),l=[];if(o.rank===1){for(let y=0;y<r.shape.length-1;++y)l.push(r.shape[y]);l.push(1)}const h=St(r,o),d=M(n,u),f=bx(rt(i,qt(s))),m=M(M(M(f,f),f),qt(-.5));return{x:()=>o.rank===1?z(M(M(n,ps(z(f,[1,1,1,o.shape[0]]),l)),u),r.shape):z(M(M(n,f),u),r.shape),mean:()=>{let y=M(M(f,qt(-1)),d);return o.rank===1&&(y=Ct(y,c)),z(y,o.shape)},variance:()=>{let y=M(M(m,h),d);return o.rank===1&&(y=Ct(y,c)),z(y,o.shape)},scale:()=>{const y=M(h,f);let v=M(n,y);return o.rank===1&&(v=Ct(v,c)),z(v,o.shape)},offset:()=>{let y=n;return o.rank===1&&(y=Ct(y,c)),z(y,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KA={kernelName:jc,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{const[s,r]=t,{axis:o,batchDims:i}=e,a=Mt(o,s.shape)[0],u=(c,l,h)=>()=>{const d=c.shape,f=l.size,m=d.slice(0,a),p=m.length,x=d.slice(o,d.length).slice(1),g=x.length,b=pg(0,p),w=pg(p+1,p+1+g),y=mg([m,[f],x]),v=z(h,y),C=z(l,[f]),D=mg([[p],b,w]),I=Lt(v,D);let $=Sx(I,C,c.shape[a]);const S=Ar(D);return $=Lt($,S),$};if(i===1){const c=s.shape[0],l=s.split(c,0);return{x:()=>Gs(l.map((f,m)=>u(f,r.slice(m,1),n.slice(m,1))())).reshape(s.shape),indices:()=>r}}else return{x:u(s,r,n),indices:()=>r}}};function pg(n,t){const e=[];for(let s=n;s<t;++s)e.push(s);return e}function mg(n){const t=[];for(let e=0;e<n.length;++e)for(let s=0;s<n[e].length;++s)t.push(n[e][s]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XA={kernelName:Ca,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>Pt(e),b:()=>Pt(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YA={kernelName:Da,gradFunc:n=>({x:()=>mt(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZA={kernelName:Ia,gradFunc:n=>({x:()=>Pt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JA={kernelName:$a,gradFunc:n=>({x:()=>Pt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QA={kernelName:ka,gradFunc:n=>({x:()=>Pt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tT={kernelName:Xc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{alpha:r}=e,o=Gn(s,0);return{x:()=>ln(o,n,M(n,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eT={kernelName:Ea,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>$t(n,rt(e,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nT={kernelName:Sa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>$t(n,mt(e,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sT={kernelName:y2,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e;return{logits:()=>{const i=Ws(s);return St(n,M(Ct(n,r,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rT(n,t,e,s=5,r=1,o=1,i=.5){const a={x:n,y:t,dy:e},u={depthRadius:s,bias:r,alpha:o,beta:i};return B.runKernel(lf,a,u)}const oT=V({localResponseNormalizationBackprop_:rT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iT={kernelName:el,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{depthRadius:o,bias:i,alpha:a,beta:u}=e;return{x:()=>oT(s,r,n,o,i,a,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bb(n,t,e,s){return t.rank<e.rank&&(t=z(t,Ne(t.shape,s))),n.rank<e.rank&&(n=z(n,Ne(n.shape,s))),{x:()=>M(n,mt(Vs(e,t),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gg={kernelName:nl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{reductionIndices:r}=s,o=t[0],i=t[1],a=Mt(r,o.shape),u=bb(n,i,o,a);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aT={kernelName:Na,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>M(n,mt(go(e,s),"float32")),b:()=>M(n,mt(Yu(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uT(n,t,e,s,r,o,i){const a=T(n,"dy","maxPool3dGrad"),u=T(t,"input","maxPool3dGrad"),c=T(e,"output","maxPool3dGrad");let l=a,h=u,d=c,f=!1;u.rank===4&&(f=!0,l=z(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=z(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=z(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),k(l.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),k(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),k(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),Cn("maxPool3dGrad",o,i);const m={dy:l,input:h,output:d},p={filterSize:s,strides:r,pad:o,dimRoundingMode:i},x=B.runKernel(df,m,p);return f?z(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}const cT=V({maxPool3dGrad_:uT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lT={kernelName:rl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{filterSize:o,strides:i,pad:a,dimRoundingMode:u}=e;return{x:()=>cT(n,s,r,o,i,a,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hT(n,t,e,s,r,o,i){const a=T(n,"dy","maxPoolGrad"),u=T(t,"input","maxPoolGrad"),c=T(e,"output","maxPoolGrad");k(u.rank===a.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${a.rank})`),k(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),k(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),Cn("maxPoolGrad",o,i);const l={dy:a,input:u,output:c},h={filterSize:s,strides:r,pad:o,dimRoundingMode:i};return B.runKernel(hf,l,h)}const dT=V({maxPoolGrad_:hT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fT={kernelName:sl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{filterSize:o,strides:i,pad:a}=e;return{x:()=>dT(n,s,r,o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pT={kernelName:ol,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e,o=Mt(r,s.shape),a=Ge(s.shape,o)[1],u=X(a);return{x:()=>{const l=s.shape.slice();o.forEach(f=>{l[f]=1});const h=z(n,l);return $t(M(h,Fr(s.shape,"float32")),u)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mT={kernelName:il,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{axis:r}=s,[o,i]=t,a=Mt(r,o.shape),u=bb(n,i,o,a);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gT={kernelName:Aa,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>M(n,mt(di(e,s),"float32")),b:()=>M(n,mt(Gn(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xT={kernelName:al,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:r}=e,o=r.map(i=>i[0]);return{x:()=>oe(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bT={kernelName:Ta,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Tt(e.shape,s.shape);return{a:()=>{const a=Be(e.shape,r);return a.length>0?z(Ct(n,a),e.shape):n},b:()=>{const a=M(n,De(Bl($t(e,s)))),u=Be(s.shape,r);return u.length>0?z(Ct(a,u),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wT={kernelName:Fa,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Tt(e.shape,s.shape);return{a:()=>{const a=M(n,mt(s,"float32")),u=Be(e.shape,r);return u.length>0?z(Ct(a,u),e.shape):a},b:()=>{const a=M(n,mt(e,"float32")),u=Be(s.shape,r);return u.length>0?z(Ct(a,u),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yT={kernelName:ul,gradFunc:n=>({x:()=>De(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vT={kernelName:hl,inputsToSave:["indices"],gradFunc:(n,t)=>{const e=t[0];return{indices:()=>Fe(e.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CT={kernelName:ll,gradFunc:n=>({x:()=>Pt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DT={kernelName:dl,saveAllInputs:!0,gradFunc:(n,t,e)=>{const{axis:s}=e;return io(n,s).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xg={kernelName:fl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:r}=e,o=r.map(i=>i[0]);return{x:()=>oe(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IT={kernelName:Ra,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{const[e,s,r]=t,o=e,i=s,a=Tt(o.shape,i.shape);return{a:()=>{const l=mt(i,"float32");let h=M(n,M(l,Yo(o,St(l,qt(1)))));const d=Be(o.shape,a);return d.length>0&&(h=Ct(h,d)),z(h,o.shape)},b:()=>{const l=Gn(o,0),h=ln(l,Us(o),Pt(o));let d=M(n,M(r,h));const f=Be(i.shape,a);return f.length>0&&(d=Ct(d,f)),z(d,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $T={kernelName:pl,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{const[e,s]=t,r=Gn(e,0);return{x:()=>ln(r,n,M(n,s)),alpha:()=>{let o=ln(r,Pt(n),M(n,e));const i=Be(s.shape,n.shape);return i.length>0&&(o=Ct(o,i)),z(o,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kT(n,t,e){const s=n.shape.slice();s[e]=1;const r=z(t,s),o=rd(n,e,!0,!1),i=rd(n,e,!0,!0),a=M(o,i);return M(r,a)}function ST(n,t,e){const s=n.shape.length,r=s-e.length,o=ge(e,s);let i=n;o!=null&&(i=Lt(n,o));const a=i.shape.slice(),c=a.splice(s-e.length,e.length).reduce((d,f)=>d*f,1);a.push(c);const l=i.reshape(a);let h=kT(l,t,r);if(h=h.reshape(i.shape),o!=null){const d=Ar(o);h=Lt(h,d)}return h}const ET={kernelName:ml,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e;let o=[];return r==null?o=s.shape.map((i,a)=>a):typeof r=="number"?o=[r]:o=r,{x:()=>ST(s,n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NT={kernelName:ma,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Tt(e.shape,s.shape);return{a:()=>{const a=$t(n,mt(s,"float32")),u=Be(e.shape,r);return u.length>0?z(Ct(a,u),e.shape):a},b:()=>{let a=M(n,mt(e,"float32"));const u=Be(s.shape,r);u.length>0&&(a=z(Ct(a,u),s.shape));const c=ce(s);return De($t(a,mt(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AT={kernelName:_a,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>$t(n,De(ce(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TT={kernelName:Ma,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=M(di(e,6),nu(e));return{x:()=>M(n,mt(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FT={kernelName:Oa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(n,mt(nu(e),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RT={kernelName:gl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>z(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _T={kernelName:bl,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,r={dy:n,images:s};return{images:()=>B.runKernel(wf,r,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OT={kernelName:xl,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,r={dy:n,images:s};return{images:()=>B.runKernel(bf,r,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MT={kernelName:wl,gradFunc:(n,t,e)=>{const{dims:s}=e,r=Mt(s,n.shape);return{x:()=>oo(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BT={kernelName:Ba,gradFunc:n=>({x:()=>Pt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LT={kernelName:La,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>De($t(n,M(Yo(e,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PT={kernelName:yl,inputsToSave:["condition"],gradFunc:(n,t)=>{const[e]=t;return{condition:()=>mt(Pt(e),"float32"),t:()=>M(n,mt(e,n.dtype)),e:()=>M(n,mt(Wf(e),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zT={kernelName:Pa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Gn(e,qt(0)),r=qt(Vl),o=qt(Wl),i=M(n,o),a=M(M(n,r),Ws(mt(e,"float32")));return ln(s,i,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VT={kernelName:Ua,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(n,M(e,St(qt(1),e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WT={kernelName:Wa,gradFunc:n=>({x:()=>Pt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UT={kernelName:za,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(Mf(mt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GT={kernelName:Va,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(sx(mt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HT={kernelName:vl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{begin:r,size:o}=e,i=s.shape,[a,u]=Pl(s,r,o),c=[];for(let l=0;l<n.rank;l++)c.push([a[l],i[l]-a[l]-u[l]]);return{x:()=>Hf(n,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qT={kernelName:$l,outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{dim:r}=e,o=!0,i=M(n,s);return{logits:()=>St(i,M(Ct(i,[r],o),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jT={kernelName:Ga,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(n,hi(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bg={kernelName:Dl,gradFunc:(n,t,e)=>{const{blockShape:s,paddings:r}=e;return{x:()=>_f(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wg={kernelName:Il,gradFunc:(n,t,e)=>{const{axis:s}=e;return{x:()=>wn(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KT={kernelName:Ha,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>$t(n,M(hn(mt(e,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XT={kernelName:yf,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(n,M(mt(e,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YT={kernelName:qa,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=qt(2);return{a:()=>M(n,M(r,St(e,s))),b:()=>M(n,M(r,St(s,e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZT={kernelName:Za,gradFunc:n=>({x:()=>Pt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JT={kernelName:ja,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Tt(e.shape,s.shape);return{a:()=>{let a=n;const u=Be(e.shape,r);return u.length>0&&(a=Ct(a,u)),z(a,e.shape)},b:()=>{let a=n;const u=Be(s.shape,r);return u.length>0&&(a=Ct(a,u)),z(De(a),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QT={kernelName:Cl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,r=s.shape.slice(),{axis:o}=e;Mt(o,s.shape).forEach(c=>{r[c]=1});const a=z(n,r),u=M(a,Fr(s.shape,"float32"));return{x:()=>u}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tF={kernelName:Ka,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>$t(n,ce(Mf(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eF={kernelName:Xa,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(St(qt(1),ce(e)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nF={kernelName:Ya,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{reps:r}=e;return{x:()=>{let i=Pt(s);if(s.rank===1)for(let a=0;a<r[0];++a)i=rt(i,oe(n,[a*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let a=0;a<r[0];++a)for(let u=0;u<r[1];++u)i=rt(i,oe(n,[a*s.shape[0],u*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let a=0;a<r[0];++a)for(let u=0;u<r[1];++u)for(let c=0;c<r[2];++c)i=rt(i,oe(n,[a*s.shape[0],u*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let a=0;a<r[0];++a)for(let u=0;u<r[1];++u)for(let c=0;c<r[2];++c)for(let l=0;l<r[3];++l)i=rt(i,oe(n,[a*s.shape[0],u*s.shape[1],c*s.shape[2],l*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sF={kernelName:Po,gradFunc:(n,t,e)=>{const s=e,{perm:r}=s,o=Ar(r);return{x:()=>Lt(n,o)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rF={kernelName:kl,gradFunc:(n,t,e)=>{const s=e,{axis:r}=s;return{value:()=>Gs(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oF={kernelName:Sl,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>iF(n,e)}}};function iF(n,t){const e=Tr(t,Pt(t)),s=Pf(n,e);let r=go(t,qt(0,"int32"));const o=s.rank-r.rank;for(let a=0;a<o;++a)r=xn(r,a+1);r=tr(r,Fr(s.shape,"bool"));const i=Pt(s);return ln(r,s,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aF={kernelName:El,gradFunc:n=>({x:()=>Pt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uF=[xb,oA,iA,aA,uA,cA,lA,hA,dA,fA,pA,mA,bA,vA,CA,DA,IA,$A,kA,SA,EA,NA,TA,AA,_A,OA,MA,BA,LA,PA,NT,zA,VA,WA,UA,GA,qA,HA,jA,KA,XA,YA,ZA,JA,QA,tT,eT,nT,sT,iT,gg,gg,aT,lT,fT,pT,mT,gT,xT,bT,wT,yT,vT,CT,DT,xg,xg,IT,$T,ET,AT,TT,FT,RT,_T,OT,MT,BT,LT,PT,zT,VT,WT,UT,GT,HT,qT,jT,bg,bg,wg,wg,KT,YT,XT,ZT,JT,QT,tF,eF,nF,sF,rF,oF,aF];for(const n of uF)D2(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.abs=function(){return this.throwIfDisposed(),an(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.acos=function(){return this.throwIfDisposed(),BI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.acosh=function(){return this.throwIfDisposed(),PI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.add=function(n){return this.throwIfDisposed(),rt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.all=function(n,t){return this.throwIfDisposed(),Q1(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.any=function(n,t){return this.throwIfDisposed(),nd(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.argMax=function(n){return this.throwIfDisposed(),Wi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.argMin=function(n){return this.throwIfDisposed(),GI(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.asScalar=function(){return this.throwIfDisposed(),k(this.size===1,()=>"The array must have only 1 element."),z(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.asType=function(n){return this.throwIfDisposed(),mt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as1D=function(){return this.throwIfDisposed(),z(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as2D=function(n,t){return this.throwIfDisposed(),z(this,[n,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as3D=function(n,t,e){return this.throwIfDisposed(),z(this,[n,t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as4D=function(n,t,e,s){return this.throwIfDisposed(),z(this,[n,t,e,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as5D=function(n,t,e,s,r){return this.throwIfDisposed(),z(this,[n,t,e,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.asin=function(){return this.throwIfDisposed(),qI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.asinh=function(){return this.throwIfDisposed(),KI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.atan=function(){return this.throwIfDisposed(),YI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.atan2=function(n){return this.throwIfDisposed(),JI(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.atanh=function(){return this.throwIfDisposed(),t$(this)};K().prototype.avgPool=function(n,t,e,s){return this.throwIfDisposed(),Ff(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),_f(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.batchNorm=function(n,t,e,s,r){return this.throwIfDisposed(),Rl(this,n,t,e,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Pi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cast=function(n){return this.throwIfDisposed(),mt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.ceil=function(){return this.throwIfDisposed(),S$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.clipByValue=function(n,t){return this.throwIfDisposed(),Un(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof Te&&(n=[n]),wn([this,...n],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.conv1d=function(n,t,e,s,r,o){return this.throwIfDisposed(),tx(this,n,t,e,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.conv2dTranspose=function(n,t,e,s,r){return this.throwIfDisposed(),ex(this,n,t,e,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.conv2d=function(n,t,e,s,r,o){return this.throwIfDisposed(),ro(this,n,t,e,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cos=function(){return this.throwIfDisposed(),Mf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cosh=function(){return this.throwIfDisposed(),sx(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cumprod=function(n,t,e){return this.throwIfDisposed(),rd(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),rx(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),J$(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.depthwiseConv2d=function(n,t,e,s,r,o){return this.throwIfDisposed(),Bf(this,n,t,e,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.dilation2d=function(n,t,e,s,r){return this.throwIfDisposed(),ek(this,n,t,e,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.divNoNan=function(n){return this.throwIfDisposed(),ik(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.div=function(n){return this.throwIfDisposed(),$t(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.dot=function(n){return this.throwIfDisposed(),uk(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.elu=function(){return this.throwIfDisposed(),Ol(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.equal=function(n){return this.throwIfDisposed(),Vs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.erf=function(){return this.throwIfDisposed(),dk(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.euclideanNorm=function(n,t){return this.throwIfDisposed(),vk(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.exp=function(){return this.throwIfDisposed(),Ws(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.expandDims=function(n){return this.throwIfDisposed(),xn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.expm1=function(){return this.throwIfDisposed(),$k(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.fft=function(){return this.throwIfDisposed(),Ix(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.flatten=function(){return this.throwIfDisposed(),z(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.floor=function(){return this.throwIfDisposed(),Bl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.floorDiv=function(n){return this.throwIfDisposed(),J1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.gather=function(n,t,e){return this.throwIfDisposed(),Pf(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.greaterEqual=function(n){return this.throwIfDisposed(),go(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.greater=function(n){return this.throwIfDisposed(),Gn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.ifft=function(){return this.throwIfDisposed(),od(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.irfft=function(){return this.throwIfDisposed(),gE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.isFinite=function(){return this.throwIfDisposed(),_k(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.isInf=function(){return this.throwIfDisposed(),Mk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.isNaN=function(){return this.throwIfDisposed(),Lk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Vf(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.lessEqual=function(n){return this.throwIfDisposed(),di(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.less=function(n){return this.throwIfDisposed(),Yu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.localResponseNormalization=function(n,t,e,s){return this.throwIfDisposed(),Uk(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logSigmoid=function(){return this.throwIfDisposed(),Yk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logSoftmax=function(n){return this.throwIfDisposed(),cx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logSumExp=function(n,t){return this.throwIfDisposed(),lx(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.log=function(){return this.throwIfDisposed(),Us(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.log1p=function(){return this.throwIfDisposed(),ux(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logicalAnd=function(n){return this.throwIfDisposed(),tr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logicalNot=function(){return this.throwIfDisposed(),Wf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logicalOr=function(n){return this.throwIfDisposed(),hx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logicalXor=function(n){return this.throwIfDisposed(),rS(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.matMul=function(n,t,e){return this.throwIfDisposed(),Ht(this,n,t,e)};K().prototype.maxPool=function(n,t,e,s){return this.throwIfDisposed(),Uf(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.max=function(n,t){return this.throwIfDisposed(),xs(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.maximum=function(n){return this.throwIfDisposed(),Tr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.mean=function(n,t){return this.throwIfDisposed(),Ee(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.min=function(n,t){return this.throwIfDisposed(),Xu(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.minimum=function(n){return this.throwIfDisposed(),Hi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),dS(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.mod=function(n){return this.throwIfDisposed(),pS(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.mul=function(n){return this.throwIfDisposed(),M(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.neg=function(){return this.throwIfDisposed(),De(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.norm=function(n,t,e){return this.throwIfDisposed(),Ml(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.notEqual=function(n){return this.throwIfDisposed(),Zu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),dx(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.onesLike=function(){return this.throwIfDisposed(),ss(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.pad=function(n,t){return this.throwIfDisposed(),Hf(this,n,t)};K().prototype.pool=function(n,t,e,s,r,o){return this.throwIfDisposed(),IS(this,n,t,e,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.pow=function(n){return this.throwIfDisposed(),Yo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.prelu=function(n){return this.throwIfDisposed(),jf(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.prod=function(n,t){return this.throwIfDisposed(),SS(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.reciprocal=function(){return this.throwIfDisposed(),YS(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.relu=function(){return this.throwIfDisposed(),bo(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.relu6=function(){return this.throwIfDisposed(),gx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.reshapeAs=function(n){return this.throwIfDisposed(),z(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.reshape=function(n){return this.throwIfDisposed(),z(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.resizeBilinear=function(n,t,e){return this.throwIfDisposed(),Nx(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.resizeNearestNeighbor=function(n,t,e){return this.throwIfDisposed(),Ax(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.reverse=function(n){return this.throwIfDisposed(),oo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.rfft=function(){return this.throwIfDisposed(),wE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.round=function(){return this.throwIfDisposed(),xx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.rsqrt=function(){return this.throwIfDisposed(),bx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.selu=function(){return this.throwIfDisposed(),wx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.separableConv2d=function(n,t,e,s,r,o){return this.throwIfDisposed(),yx(this,n,t,e,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sigmoid=function(){return this.throwIfDisposed(),hi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sign=function(){return this.throwIfDisposed(),oE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sin=function(){return this.throwIfDisposed(),vx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sinh=function(){return this.throwIfDisposed(),Cx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.slice=function(n,t){return this.throwIfDisposed(),oe(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.softmax=function(n){return this.throwIfDisposed(),np(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.softplus=function(){return this.throwIfDisposed(),Qa(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),qf(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.split=function(n,t){return this.throwIfDisposed(),Wn(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sqrt=function(){return this.throwIfDisposed(),hn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.square=function(){return this.throwIfDisposed(),ce(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.squaredDifference=function(n){return this.throwIfDisposed(),vE(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.squeeze=function(n){return this.throwIfDisposed(),eu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.stack=function(n,t){this.throwIfDisposed();const e=n instanceof Te?[this,n]:[this,...n];return Gs(e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.step=function(n){return this.throwIfDisposed(),nu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.stridedSlice=function(n,t,e,s,r,o,i,a){return this.throwIfDisposed(),kE(this,n,t,e,s,r,o,i,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sub=function(n){return this.throwIfDisposed(),St(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sum=function(n,t){return this.throwIfDisposed(),Ct(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.tan=function(){return this.throwIfDisposed(),EE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.tanh=function(){return this.throwIfDisposed(),Rf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.tile=function(n){return this.throwIfDisposed(),ps(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.toBool=function(){return this.throwIfDisposed(),mt(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.toFloat=function(){return this.throwIfDisposed(),mt(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.toInt=function(){return this.throwIfDisposed(),mt(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.topk=function(n,t){return this.throwIfDisposed(),TE(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.transpose=function(n){return this.throwIfDisposed(),Lt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.unique=function(n){return this.throwIfDisposed(),_E(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),Sx(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.unstack=function(n){return this.throwIfDisposed(),io(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.where=function(n,t){return this.throwIfDisposed(),ln(n,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.zerosLike=function(){return this.throwIfDisposed(),Pt(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ns extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ns.prototype)}}class ts extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ts.prototype)}}class F extends Error{constructor(t){super(t),Object.setPrototypeOf(this,F.prototype)}}class Rt extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Rt.prototype)}}class zp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,zp.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class wb{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=t}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ao(n,t){if(Array.isArray(n)){let e=[];for(let s=0;s<t;s++)e=e.concat(n);return e}else{const e=new Array(t);return e.fill(n),e}}function As(n,t){if(!n)throw new zp(t)}function yg(n,t){let e=0;for(const s of n)s===t&&e++;return e}function bn(n){return n.length===1?n[0]:n}function Xt(n){return Array.isArray(n)?n:[n]}function Ys(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function Ur(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let qn={};function Vp(n){if(n==null)return null;const t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function ud(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(t=>ud(t));else{const t=Object.keys(n);for(const e of t){const s=n[e];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[e]=s.value:ud(s))}}}function iu(n,t={},e={},s="object",r=!1){if(typeof n=="string"){const o=n;let i;if(o in e)i=e[o];else if(o in qn)i=qn[o];else if(i=t[o],i==null)throw new F(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const o=n;if(o.className==null||o.config==null)throw new F(`${s}: Improper config format: ${JSON.stringify(o)}.
'className' and 'config' must set.`);const i=o.className;let a,u;if(i in e?[a,u]=e[i]:i in qn?[a,u]=qn.className:i in t&&([a,u]=t[i]),a==null)throw new F(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){const c={};for(const f of Object.keys(qn))c[f]=qn[f];for(const f of Object.keys(e))c[f]=e[f];const l=o.config;l.customObjects=c;const h=Object.assign({},qn);for(const f of Object.keys(e))qn[f]=e[f];ud(o.config);const d=u(a,o.config,e,r);return qn=Object.assign({},h),d}else{const c=Object.assign({},qn);for(const h of Object.keys(e))qn[h]=e[h];const l=new a(o.config);return qn=Object.assign({},c),l}}}function cF(n,t){return n<t?-1:n>t?1:0}function $u(n,t){return-1*cF(n,t)}function mr(n){if(n==null)return n;const t=[];for(const e of n)t.indexOf(e)===-1&&t.push(e);return t}function lF(n){if(n==null)throw new F(`Invalid value in obj: ${JSON.stringify(n)}`);for(const t in n)if(n.hasOwnProperty(t))return!1;return!0}function yo(n,t,e){if(e!=null&&n.indexOf(e)<0)throw new F(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function Wp(n,t,e=0,s=1/0){return As(e>=0),As(s>=e),Array.isArray(n)&&n.length>=e&&n.length<=s&&n.every(r=>typeof r===t)}function Ue(n,t){Array.isArray(n)?(k(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,s)=>Ue(e,`element ${s+1} of ${t}`))):k(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${yb(n)}.`)}function yb(n){return n===null?"null":Array.isArray(n)?"["+n.map(t=>yb(t)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function hF(n,t,e){let s=e!=null?e():gn(),r;return(...i)=>{const a=e!=null?e():gn();return a-s<t||(s=a,r=n(...i)),r}}function vb(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let dF=0;function Cb(){return dF++}const ku={};function Ul(n=""){return n in ku||(ku[n]=0),ku[n]+=1,n+ku[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const fF=["channelsFirst","channelsLast"],pF=["nearest","bilinear"],mF=["valid","same","causal"],gF=["max","avg"],xF=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Eo=new Map;function ke(n){yo(fF,"DataFormat",n)}function bF(n){yo(pF,"InterpolationFormat",n)}function Hn(n){yo(mF,"PaddingMode",n)}function Db(n){yo(gF,"PoolMode",n)}const zi=[],vg="/";function Xr(n,t){zi.push(n);try{const e=t();return zi.pop(),e}catch(e){throw zi.pop(),e}}function wF(){return zi.length===0?"":zi.join(vg)+vg}function Ib(n){if(!kb(n))throw new Error("Not a valid tensor name: '"+n+"'");return wF()+n}function $b(n){if(!kb(n))throw new Error("Not a valid tensor name: '"+n+"'");Eo.has(n)||Eo.set(n,0);const t=Eo.get(n);if(Eo.set(n,Eo.get(n)+1),t>0){const e=`${n}_${t}`;return Eo.set(e,1),e}else return n}const yF=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function kb(n){return!!n.match(yF)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vF(n){return n===parseInt(n.toString(),10)}function gr(n,t,e){t==null&&(t=0),e==null&&(e=n.length);let s=1;for(let r=t;r<e;++r)s*=n[r];return s}function Jo(n){if(n.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s<t&&(t=s)}return t}function wr(n){if(n.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s>t&&(t=s)}return t}function ys(n,t){if(t<n)throw new F(`end (${t}) < begin (${n}) is forbidden.`);const e=[];for(let s=n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let vh;function Re(){return vh==null&&(vh=Y2().epsilon()),vh}function vs(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ls(n,t){return mt(n,t)}function au(n,t=-1){const e=n.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),z(n,e)}function CF(n,t){return W(()=>{if(n.shape.length!==2)throw new F(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const e=au(n,1);return cd(e,[1,t,1])})}function DF(n){const t=[gr(n.shape)];return z(n,t)}function IF(n){if(n.rank<=1)throw new F(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const t=[n.shape[0],gr(n.shape,1)];return z(n,t)}function Yr(n,t,e){return W(()=>{switch(n.rank){case 1:return tp(n,t,e);case 2:return Dx(n,[t,0],[e,n.shape[1]]);case 3:return ep(n,[t,0,0],[e,n.shape[1],n.shape[2]]);case 4:return Qu(n,[t,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3]]);case 5:return oe(n,[t,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return oe(n,[t,0,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new F(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Ch(n,t,e){return W(()=>{switch(n.rank){case 1:return tp(n,t,e);case 2:return Dx(n,[0,t],[n.shape[0],e]);case 3:return ep(n,[0,0,t],[n.shape[0],n.shape[1],e]);case 4:return Qu(n,[0,0,0,t],[n.shape[0],n.shape[1],n.shape[2],e]);default:throw new F(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Su(n,t,e,s){return W(()=>{switch(n.rank){case 1:return tp(n,t,e);case 2:switch(s){case 1:return Yr(n,t,e);case 2:return Ch(n,t,e);default:throw new F(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Yr(n,t,e);case 2:return ep(n,[0,t,0],[n.shape[0],e,n.shape[2]]);case 3:return Ch(n,t,e);default:throw new F(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Yr(n,t,e);case 2:return Qu(n,[0,t,0,0],[n.shape[0],e,n.shape[2],n.shape[3]]);case 3:return Qu(n,[0,0,t,0],[n.shape[0],n.shape[1],e,n.shape[3]]);case 4:return Ch(n,t,e);default:throw new F(`The axis is not within the rank of the tensor ${s}`)}default:throw new F(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Up(n,t=-1){let e;return t<0&&(e=n[0].rank,e!==0?t=e:t=0),t===n[0].rank&&(t=-1),wn(n,t)}function Cg(n,t){switch(n.rank){case 1:return A$([n,t]);case 2:return F$([n,t],0);case 3:return _$([n,t],0);case 4:return M$([n,t],0);default:throw new F(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function cd(n,t){if(Array.isArray(t)||(t=[t]),n.rank!==t.length)throw new F(`The length of input n (${t.length}) does not match the number of dimensions in input x (${n.rank})`);return ps(n,t)}function Gl(n,t=0,e=1,s,r){return qS(n,t,e,s,r)}function Ps(n,t,e,s){if(n.rank<2||t.rank<2)throw new Rt(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${t.shape}`);if(t.rank>=3){const r=n.shape.slice(-1)[0],o=t.shape.slice(-2)[0];if(r!==o)throw new Rt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${t.shape}`)}if(n.rank===2&&t.rank===2)return ig({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?ld(n.rank,s,vs()):null,activation:e});{const r=n.shape.slice(),o=r.pop();n=z(n,[-1,o]);const i=t.shape.slice(),a=i.pop(),u=i.pop(),c=[...i,a],l=Array.from({length:t.rank},(m,p)=>p===0?t.rank-2:p<=t.rank-2?p-1:p);t=z(Lt(t,l),[u,-1]);const h=[...r,...c];return z(ig({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?ld(n.rank,s,vs()):null,activation:e}),h)}}function Sb(n,t,e){return W(()=>(Array.isArray(t)?t=Tn(t,"int32"):t=mt(t,"int32"),Pf(n,t,e)))}function uu(n){return M(n,n)}function ld(n,t,e){const s=t.shape;if(t.rank!==1&&t.rank!==n)throw new F(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${n}`);if(n===5){if(e==="channelsFirst")return s.length===1?z(t,[1,s[0],1,1,1]):z(t,[1,s[3],s[0],s[1],s[2]]);if(e==="channelsLast")return s.length===1?z(t,[1,1,1,1,s[0]]):z(t,[1].concat(s))}else if(n===4){if(e==="channelsFirst")return s.length===1?z(t,[1,s[0],1,1]):z(t,[1,s[2],s[0],s[1]]);if(e==="channelsLast")return s.length===1?z(t,[1,1,1,s[0]]):z(t,[1].concat(s))}else if(n===3){if(e==="channelsFirst")return s.length===1?z(t,[1,s[0],1]):z(t,[1,s[1],s[0]]);if(e==="channelsLast")return s.length===1?z(t,[1,1,s[0]]):z(t,[1].concat(s))}else if(n<3)return t;throw new F(`Unsupported input rank by biasAdd: ${t.rank}`)}function Is(n,t,e){return W(()=>(e==null&&(e=vs()),ke(e),rt(n,ld(n.rank,t,e))))}function $F(n,t=1){if(t!==1)throw new Rt(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Ol(n)}function kF(n){return W(()=>$t(n,rt(an(n),1)))}function Eb(n,t,e,s){return W(()=>VE(n,t,e,s))}function SF(n){return W(()=>{const t=rt(.5,M(.2,n));return Un(t,0,1)})}function cu(n,t,e=!1){return e?n():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const EF=["fanIn","fanOut","fanAvg"],NF=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function AF(n){yo(EF,"FanMode",n)}function TF(n){yo(NF,"Distribution",n)}class os extends pi{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Nb extends os{apply(t,e){return Fe(t,e)}}Nb.className="Zeros";et(Nb);class Gp extends os{apply(t,e){return Fr(t,e)}}Gp.className="Ones";et(Gp);class Ab extends os{constructor(t){if(super(),typeof t!="object")throw new F(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new F(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return W(()=>M(qt(this.value),Fr(t,e)))}getConfig(){return{value:this.value}}}Ab.className="Constant";et(Ab);class Tb extends os{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return tu(t,this.minval,this.maxval,e,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Tb.className="RandomUniform";et(Tb);class Fb extends os{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Rt(`randomNormal does not support dType ${e}.`);return Gl(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Fb.className="RandomNormal";et(Fb);class Rb extends os{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Rt(`truncatedNormal does not support dType ${e}.`);return kx(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Rb.className="TruncatedNormal";et(Rb);class _b extends os{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return W(()=>{if(t.length!==2||t[0]!==t[1])throw new F("Identity matrix initializer can only be used for 2D square matrices.");return M(this.gain,ax(t[0]))})}getConfig(){return{gain:this.gain}}}_b.className="Identity";et(_b);function FF(n,t="channelsLast"){let e,s;if(ke(t),n.length===2)e=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(t==="channelsFirst"){const r=gr(n,2);e=n[1]*r,s=n[0]*r}else if(t==="channelsLast"){const r=gr(n,0,n.length-2);e=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=gr(n);e=Math.sqrt(r),s=Math.sqrt(r)}return[e,s]}class Rn extends os{constructor(t){if(super(),t.scale<0)throw new F(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,AF(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,TF(this.distribution),this.seed=t.seed}apply(t,e){const s=FF(t),r=s[0],o=s[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,r):this.mode==="fanOut"?i/=Math.max(1,o):i/=Math.max(1,(r+o)/2),this.distribution==="normal"){const a=Math.sqrt(i);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Rt(`${this.getClassName()} does not support dType ${e}.`);return kx(t,0,a,e,this.seed)}else{const a=Math.sqrt(3*i);return tu(t,-a,a,e,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Rn.className="VarianceScaling";et(Rn);class Hp extends Rn{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Rn.className}}Hp.className="GlorotUniform";et(Hp);class qp extends Rn{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Rn.className}}qp.className="GlorotNormal";et(qp);class jp extends Rn{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Rn.className}}jp.className="HeNormal";et(jp);class Kp extends Rn{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Rn.className}}Kp.className="HeUniform";et(Kp);class Xp extends Rn{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Rn.className}}Xp.className="LeCunNormal";et(Xp);class Yp extends Rn{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Rn.className}}Yp.className="LeCunUniform";et(Yp);class Ob extends os{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,e){return W(()=>{if(t.length<2)throw new Rt("Shape must be at least 2D.");if(e!=="int32"&&e!=="float32"&&e!==void 0)throw new TypeError(`Unsupported data type ${e}.`);e=e;const s=X(t.slice(0,-1)),r=t[t.length-1],o=s*r;o>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${o}) elements: Slowness may result.`);const i=[Math.max(r,s),Math.min(r,s)],a=Gl(i,0,1,e,this.seed),u=BN.qr(a,!1);let c=u[0];const h=u[1].flatten().stridedSlice([0],[Math.min(r,s)*Math.min(r,s)],[Math.min(r,s)+1]);return c=M(c,h.sign()),s<r&&(c=c.transpose()),M(qt(this.gain),c.reshape(t))})}getConfig(){return{gain:this.gain,seed:this.seed}}}Ob.className="Orthogonal";et(Ob);const Dg={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ig(n,t={}){return iu(n,Yn.getMap().classNameMap,t,"initializer")}function me(n){return Vp(n)}function de(n){if(typeof n=="string"){const t=n in Dg?Dg[n]:n;if(t==="GlorotNormal")return new qp;if(t==="GlorotUniform")return new Hp;if(t==="HeNormal")return new jp;if(t==="HeUniform")return new Kp;if(t==="LeCunNormal")return new Xp;if(t==="LeCunUniform")return new Yp;{const e={};return e.className=t,e.config={},Ig(e)}}else return n instanceof os?n:Ig(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hd(n){return Array.isArray(n)&&Array.isArray(n[0])}function tc(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function Et(n){let t;if(Array.isArray(n)){if(n.length!==1)throw new F(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function Vt(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new F(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ec(n){let t=0;for(const e of n)e.shape.length===0?t+=1:t+=e.shape.reduce((s,r)=>s*r);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const $g="Variable";class RF{constructor(t,e="float32",s=$g,r=!0,o=null){this.dtype=e??"float32",this.shape=t.shape,this.id=Cb(),s=s??$g,this.originalName=Ib(s),this.name=$b(this.originalName),this.trainable_=r,this.constraint=o,this.val=BE(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),_F(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function _F(n,t){if(n.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(t.shape))}function dd(n){return n.map(t=>t.read())}function Zp(n){n.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class _e{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Hs{constructor(t,e,s,r,o,i,a){this.dtype=t,this.shape=e,this.sourceLayer=s,this.inputs=r,this.callArgs=o,this.outputTensorIndex=a,this.id=Cb(),i!=null&&(this.originalName=Ib(i),this.name=$b(this.originalName)),this.rank=e.length}}let OF=0;class Hl{constructor(t,e){this.callArgs=e,this.id=OF++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const s of t.inboundLayers)s!=null&&s.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let MF=0;class Bt extends pi{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=MF++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const s=this.getClassName();e=Ys(s)+"_"+Ul(s)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let s;if(t.batchInputShape!=null)s=t.batchInputShape;else if(t.inputShape!=null){let o=null;t.batchSize!=null&&(o=t.batchSize),s=[o].concat(t.inputShape)}this.batchInputShape=s;let r=t.dtype;r==null&&(r=t.inputDType),r==null&&(r="float32"),this.dtype=r}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new ts(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new F(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return bn(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return bn(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ns(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Ns(`Layer ${this.name} is not connected, no input to return.`);return bn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Ns(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ns(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return bn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){const e=Xt(t);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=Xt(this.inputSpec);if(e.length!==s.length)throw new F(`Layer ${this.name} expects ${s.length} inputs, but it received ${e.length} input tensors. Input received: ${t}`);for(let r=0;r<e.length;r++){const o=e[r],i=s[r];if(i==null)continue;const a=o.rank;if(i.ndim!=null&&a!==i.ndim)throw new F(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${a}`);if(i.maxNDim!=null&&a>i.maxNDim)throw new F(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${a}`);if(i.minNDim!=null&&a<i.minNDim)throw new F(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${a}.`);if(i.dtype!=null&&o.dtype!==i.dtype)throw new F(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${o.dtype}.`);if(i.axes){const u=o.shape;for(const c in i.axes){const l=Number(c),h=i.axes[c],d=l>=0?u[l]:u[u.length+l];if(h!=null&&[h,null].indexOf(d)===-1)throw new F(`Input ${r} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${h} but got shape ${u}.`)}}if(i.shape!=null)for(let u=0;u<i.shape.length;++u){const c=i.shape[u],l=o.shape[u];if(c!=null&&l!=null&&c!==l)throw new F(`Input ${r} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${o.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const s=Xt(t),r=PF(t),o=zF(t);if(r===o)throw new F("Arguments to apply() must be all SymbolicTensors or all Tensors");return Xr(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const i=[];for(const a of Xt(t))i.push(a.shape);this.build(bn(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&o&&(this._refCount=1)}if(this.assertInputCompatibility(t),o){let i=this.call(t,e);this.supportsMasking&&this.setMaskMetadata(t,i);const a=Xt(i),u=[];for(let c of a)s.indexOf(c)!==-1&&(c=c.clone()),u.push(c);if(i=bn(u),this.activityRegularizer!=null)throw new Rt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=BF(t),a=this.computeOutputShape(i);let u;const c=LF(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?u=a.map((l,h)=>new Hs(c,l,this,Xt(t),e,this.name,h)):u=new Hs(c,a,this,Xt(t),e,this.name),this.addInboundNode(t,u,null,null,i,a,e),this._refCount++,this.activityRegularizer!=null)throw new Rt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&t[r]!=null&&t[r]!==s&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Ns(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const s=JSON.stringify(e.outputShapes);t.indexOf(s)===-1&&t.push(s)}if(t.length===1){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new Ns(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ts(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ec(this.weights)}build(t){this.built=!0}getWeights(t=!1){return dd(t?this.trainableWeights:this.weights)}setWeights(t){W(()=>{const e=this.weights;if(e.length!==t.length)throw new F(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;const s=[],r=dd(e);for(let o=0;o<r.length;++o){const i=r[o],a=e[o],u=t[o];if(!jt(i.shape,u.shape))throw new F(`Layer weight shape ${i.shape} not compatible with provided weight shape ${u.shape}`);s.push([a,u])}Zp(s)})}addWeight(t,e,s,r,o,i,a,u){if(this._addedWeightNames.indexOf(t)!==-1)throw new F(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=u!=null?u():de("zeros"));const c=r.apply(e,s),l=new RF(c,s,t,i,a);return c.dispose(),o!=null&&this.addLoss(()=>o.apply(l.read())),i==null&&(i=!0),i?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=Xt(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}setMaskMetadata(t,e,s){if(!this.supportsMasking)return;const r=this.computeMask(t,s),o=Xt(e),i=Xt(r);if(o.length!==i.length)throw new Error(`${this.name} outputs ${o.length} tensors but ${o.length} masks for those tensors`);for(let a=0;a<o.length;a++)o[a].kerasMask=i[a]}addInboundNode(t,e,s,r,o,i,a=null){const u=Xt(t);e=Xt(e),s=Xt(s),r=Xt(r),o=tc(o),i=tc(i);const c=[],l=[],h=[];for(const d of u)c.push(d.sourceLayer),l.push(d.nodeIndex),h.push(d.tensorIndex);new Hl({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:h,inputTensors:u,outputTensors:e,inputMasks:s,outputMasks:r,inputShapes:o,outputShapes:i},a);for(let d=0;d<e.length;d++)e[d].sourceLayer=this,e[d].nodeIndex=this.inboundNodes.length-1,e[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function BF(n){n=Xt(n);const t=[];for(const e of n)t.push(e.shape);return bn(t)}function LF(n){return"float32"}function Mb(n,t,e){if((t==null||e!=null&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),t.inboundNodes.length===0)return[n];{const s=t.inboundNodes[e];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let o=0;o<s.inboundLayers.length;o++){const i=s.inputTensors[o],a=s.inboundLayers[o],u=s.nodeIndices[o],c=Mb(i,a,u);for(const l of c)r.indexOf(l)===-1&&r.push(l)}return r}}}function PF(n){let t=!0;for(const e of Xt(n))if(!(e instanceof Hs)){t=!1;break}return t}function zF(n){let t=!0;for(const e of Xt(n))if(e instanceof Hs){t=!1;break}return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class lu extends Bt{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:Ul("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new F("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new F("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new F("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=t.dtype||"float32";this.batchInputShape=e,this.dtype=s,this.inputSpec=[{shape:e}];const r=new Hs(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Hl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new F(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}lu.className="InputLayer";et(lu);function VF(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new F("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=n.batchShape;n.shape!=null&&t==null&&(t=[null].concat(n.shape));let e=n.dtype;return e==null&&(e="float32"),new lu({batchInputShape:t,name:n.name,dtype:e,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function WF(n,t){if(n.dtype==null||n.dtype===t.dtype)return t;try{return mt(t,n.dtype)}catch{throw new F(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class lr{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof lr)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,s){if(this.id2Value[t.id]==null)this.id2Value[t.id]=WF(t,e),this.name2Id[t.name]=t.id,s!=null&&(this.id2Mask[t.id]=s);else throw new F(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Hs){if(this.id2Value[t.id]==null)throw new F(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const e=this.name2Id[t];if(e==null)throw new F(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Hs){if(this.id2Value[t.id]==null)throw new F(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const e=this.name2Id[t];if(e==null)throw new F(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&_t(this.id2Mask)}}const nc=new wb,sc=new wb;function UF(n){nc!=null&&nc.setMaxEntries(n),sc!=null&&sc.setMaxEntries(n)}function Oi(n,t,e,s){const r=e==null?!1:e.training,o=Array.isArray(n),i=o?n:[n],a=i.map(m=>m.name),u=[],c=t.names();for(const m of a)c.indexOf(m)!==-1?u.push(t.getValue(m)):u.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const l=a.join(",")+"|"+t.names().sort().join(",");let h=nc.get(l),d;if(h==null){const m=GF(i,t);h=m.sorted,d=m.recipientCounts,nc.put(l,h),sc.put(l,d)}d={},r||Object.assign(d,sc.get(l));const f=new lr(t);for(let m=0;m<h.length;++m){if(s!=null){const $=Jh().numTensors;$>s.maxNumTensors&&(s.maxNumTensors=$),$<s.minNumTensors&&(s.minNumTensors=$)}const p=h[m],x=p.sourceLayer;if(x instanceof lu)continue;const g=[],b=[],w=[];let y=!1;for(const $ of p.inputs){const S=f.getValue($),E=f.getMask($);g.push(S),b.push(E),E!=null&&(y=!0),r||(d[$.name]--,d[$.name]===0&&!t.hasKey($)&&a.indexOf($.name)===-1&&!S.isDisposed&&$.sourceLayer.stateful!==!0&&w.push(S))}y&&(e=e||{},e.mask=b[0]);const v=Xt(x.apply(g,e));let C=null;x.supportsMasking&&(C=x.computeMask(g,b));const D=qF(p),I=Array.isArray(D)?D:[D];for(let $=0;$<I.length;++$){f.hasKey(I[$])||f.add(I[$],v[$],Array.isArray(C)?C[0]:C);const S=a.indexOf(I[$].name);S!==-1&&(u[S]=v[$])}r||_t(w)}return f.disposeMasks(),o?u:u[0]}function GF(n,t){k(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let e=[],s={};if(n.length===1){const r=kg(n[0],t);e=r.sorted,s=r.recipientMap}else{const r=new Set;for(const o of n){const{sorted:i,recipientMap:a}=kg(o,t);for(const u of i)r.has(u.name)||(e.push(u),r.add(u.name));for(const u in a)s[u]==null&&(s[u]=new Set),a[u].forEach(c=>s[u].add(c))}}return{sorted:e,recipientCounts:HF(s)}}function HF(n){const t={};for(const e in n)t[e]=n[e].size;return t}function kg(n,t){const e=new Set,s=[],r={};for(const a of t.names())e.add(a);const o=[],i=[];for(o.push(n);o.length>0;){const a=o[o.length-1];if(e.has(a.name)){o.pop();continue}const u=i[i.length-1]===o.length-1;if(a.inputs.length===0||u)o.pop(),s.push(a),e.add(a.name),u&&i.pop();else{i.push(o.length-1);for(const c of a.inputs)r[c.name]==null&&(r[c.name]=new Set),r[c.name].add(a.name),!e.has(c.name)&&o.push(c)}}return{sorted:s,recipientMap:r}}function qF(n){let t;if(n.sourceLayer.inboundNodes.length===1)t=n.sourceLayer.output;else{let e=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){e=s;break}t=n.sourceLayer.getOutputAt(e)}return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jF=U();jF.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,UF);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Jp(n,t){return W(()=>hn(Ct(M(n,n),t,!0)))}class hu extends pi{getConfig(){return{}}}class Bb extends hu{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return W(()=>{const e=Jp(t,this.axis),s=Un(e,0,this.maxValue);return M(t,$t(s,rt(Re(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Bb.className="MaxNorm";et(Bb);class Lb extends hu{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return W(()=>$t(t,rt(Re(),Jp(t,this.axis))))}getConfig(){return{axis:this.axis}}}Lb.className="UnitNorm";et(Lb);class Pb extends hu{apply(t){return bo(t)}}Pb.className="NonNeg";et(Pb);class zb extends hu{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return W(()=>{const e=Jp(t,this.axis),s=rt(M(this.rate,Un(e,this.minValue,this.maxValue)),M(1-this.rate,e));return M(t,$t(s,rt(Re(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}zb.className="MinMaxNorm";et(zb);const Sg={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Oe(n){return Vp(n)}function Eg(n,t={}){return iu(n,Yn.getMap().classNameMap,t,"constraint")}function Me(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in Sg?Sg[n]:n,config:{}};return Eg(e)}else return n instanceof hu?n:Eg(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Lr(n){if(n==null)return;const t=[],e=[],s=[];for(const r in n){const o=n[r];if(typeof o!="number"){const i=o;t.push(i.data()),e.push(r),s.push(i)}}if(t.length>0){const r=await Promise.all(t);for(let o=0;o<r.length;++o)n[e[o]]=r[o][0];_t(s)}}function Vb(n){if(n!=null)for(const t in n){const e=n[t];typeof e!="number"&&e.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var Ng;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(Ng||(Ng={}));const KF=125;class ji{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class XF{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class YF extends ji{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});const s=e.size==null?0:e.size;this.seen+=s;for(const r in e){const o=e[r];if(typeof o=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+o*s;else{let i;r in this.totals?i=this.totals[r]:this.totals[r]=0;const a=W(()=>rt(this.totals[r],M(o,s)));this.totals[r]=a,i!=null&&i.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?e[s]=this.totals[s]/this.seen:W(()=>{const r=M($t(1,this.seen),this.totals[s]);e[s]=r,this.totals[s].dispose(),Ms(e[s])}))}}class ZF extends ji{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(const s in e)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(e[s])}async syncData(){const t=[],e=[],s=[];for(const o in this.history){const i=this.history[o];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){const u=i[a];t.push(u.data()),e.push(o),s.push(a)}}const r=await Promise.all(t);for(let o=0;o<r.length;++o)this.history[e[o]][s[o]].dispose(),this.history[e[o]][s[o]]=r[o][0]}}class JF extends ji{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||yp,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=KF),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");zh(this.yieldEvery)&&(this.maybeWait=hF(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,s){const r=[];this.yield!=null&&(await Lr(s),r.push(this.yield(t,e,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await Lr(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const s=[];this.epochEnd!=null&&(await Lr(e),s.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(t,e){this.batchBegin!=null&&(await Lr(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const s=[];this.batchEnd!=null&&(await Lr(e),s.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):zh(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(s)}async onTrainBegin(t){this.trainBegin!=null&&(await Lr(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await Lr(t),await this.trainEnd(t))}}function Wb(n,t){return n==null&&(n={}),n instanceof ji?[n]:Array.isArray(n)&&n[0]instanceof ji?n:Xt(n).map(s=>new JF(s,t))}class Xn{constructor(){}static registerCallbackConstructor(t,e){k(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),Xn.checkForDuplicate(e),Xn.constructors[t]==null&&(Xn.constructors[t]=[]),Xn.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Xn.constructors)Xn.constructors[+e].forEach(r=>{if(r===t)throw new F("Duplicate callback constructor.")})}static clear(){Xn.constructors={}}static createCallbacks(t){const e=[];for(const s in Xn.constructors){const r=+s;t>=r&&e.push(...Xn.constructors[r])}return e.map(s=>new s)}}Xn.constructors={};function Ub(n,t,e,s,r,o,i,a,u){const c=new ZF,l=[new YF,...Xn.createCallbacks(t)];n!=null&&l.push(...n),l.push(c);const h=new XF(l);return h.setParams({epochs:e,initialEpoch:s,samples:r,steps:o,batchSize:i,verbose:t,doValidation:a,metrics:u}),{callbackList:h,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zs(n,t={},e=!1){return iu(n,Yn.getMap().classNameMap,t,"layer",e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rc(n,t){return W(()=>{n.dtype!=="float32"&&(n=mt(n,"float32"));const e=Ct(uu(n),t,!0),s=_l(e.shape,Re()),r=hn(Tr(e,s));return $t(n,r)})}function ql(n,t){return W(()=>Ee(uu(St(t,n)),-1))}function Qp(n,t){return W(()=>Ee(an(St(t,n)),-1))}function tm(n,t){return W(()=>{const e=St(n,t),s=Un(an(n),Re(),Number.MAX_VALUE),r=an($t(e,s));return M(100,Ee(r,-1))})}function QF(n,t){return W(()=>{const e=Un(t,Re(),Number.MAX_VALUE),s=Us(rt(1,e)),r=Un(n,Re(),Number.MAX_VALUE),o=Us(rt(1,r));return Ee(uu(St(s,o)),-1)})}function tR(n,t){return W(()=>{const e=Tr(0,St(1,M(n,t)));return Ee(uu(e),-1)})}function eR(n,t){return W(()=>{const e=Tr(0,St(1,M(n,t)));return Ee(e,-1)})}function nR(n,t){return W(()=>{const e=Ct(M(n,t),-1),s=xs(M(St(1,n),t),-1);return Tr(0,rt(1,St(s,e)))})}function sR(n,t){return W(()=>{const e=Math.log(2),s=St(t,n),r=St(rt(s,Qa(M(-2,s))),e);return Ee(r,-1)})}function Ki(n,t,e=!1){return W(()=>{if(e)t=np(t);else{const s=Ct(t,t.shape.length-1,!0);t=$t(t,s)}return t=Un(t,Re(),1-Re()),De(Ct(M(mt(n,"float32"),Us(t)),t.shape.length-1))})}function oc(n,t,e=!1){return W(()=>{const s=mt(Bl(DF(n)),"int32");t=Un(t,Re(),1-Re());const r=t.shape,o=z(dx(s,r[r.length-1]),r);return Ki(o,t,e)})}function rR(n,t){if(!jt(n.shape,t.shape))throw new F(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(t.shape)}`);return W(()=>{const e=bo(t),s=De(an(t));return rt(St(e,M(t,n)),ux(Ws(s)))})}function jl(n,t){return W(()=>{let e;return e=Un(t,Re(),1-Re()),e=Us($t(e,St(1,e))),Ee(rR(n,e),-1)})}function oR(n,t){return W(()=>{const e=Un(n,Re(),1),s=Un(t,Re(),1);return Ct(M(n,Us($t(e,s))),-1)})}function iR(n,t){return W(()=>{const e=Us(rt(Re(),t));return Ee(St(t,M(n,e)),-1)})}function Gb(n,t){return W(()=>{const e=rc(n,-1),s=rc(t,-1),r=M(e,s);return De(Ct(r,-1))})}const ic={meanSquaredError:ql,meanAbsoluteError:Qp,meanAbsolutePercentageError:tm,meanSquaredLogarithmicError:QF,squaredHinge:tR,hinge:eR,categoricalHinge:nR,logcosh:sR,categoricalCrossentropy:Ki,sparseCategoricalCrossentropy:oc,binaryCrossentropy:jl,kullbackLeiblerDivergence:oR,poisson:iR,cosineProximity:Gb};function Dh(n){if(typeof n=="string"){if(n in ic)return ic[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new F(t)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Hb(n,t){return W(()=>{const e=M(.5,ss(t)),s=Ls(Gn(t,e),n.dtype);return Ee(Vs(n,s),-1)})}function qb(n,t){return W(()=>Ls(Vs(Wi(n,-1),Wi(t,-1)),"float32"))}function aR(n,t){return W(()=>mt(Ct(tr(Vs(n,1),Vs(t,1))),"float32"))}function uR(n,t){return W(()=>mt(Ct(tr(Vs(n,0),Vs(t,1))),"float32"))}function cR(n,t){return W(()=>{const e=aR(n,t),s=uR(n,t),r=rt(e,s);return mt(ln(Gn(r,0),$t(e,r),0),"float32")})}function lR(n,t){return jl(n,t)}function hR(n,t){return n.rank===t.rank&&(n=eu(n,[n.rank-1])),t=Wi(t,-1),t.dtype!==n.dtype&&(t=mt(t,n.dtype)),mt(Vs(n,t),"float32")}const dR=ql,fR=ql,pR=Qp,mR=Qp,gR=tm,xR=tm,jb=Ki,bR=Gb,Kb=oc,ac={binaryAccuracy:Hb,categoricalAccuracy:qb,precision:cR,categoricalCrossentropy:jb,sparseCategoricalCrossentropy:Kb,mse:dR,MSE:fR,mae:pR,MAE:mR,mape:gR,MAPE:xR,cosine:bR};function wR(n){if(typeof n=="string"&&n in ac)return ac[n];if(typeof n!="string"&&n!=null)return n;throw new F(`Unknown metric ${n}`)}function Eu(n){if(As(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let t;for(const e of Object.keys(ic))if(ic[e]===n){t=e;break}if(t!==void 0)return t;for(const e of Object.keys(ac))if(ac[e]===n){t=e;break}return t!==void 0?t:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yR(n){const t={Adagrad:()=>Vr.adagrad(.01),Adadelta:()=>Vr.adadelta(1,.95,Re()),Adam:()=>Vr.adam(.001,.9,.999,Re()),Adamax:()=>Vr.adamax(.002,.9,.999,Re(),0),RMSProp:()=>Vr.rmsprop(.001,.9,0,Re()),SGD:()=>Vr.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,n in t)return t[n]();throw new F(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Ag=1*1024*1024;function Tg(n,t,e=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!fd(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const s=JSON.stringify(n);s.length>Ag&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Ag}.`)}}function fd(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const t=Object.keys(n);for(const e of t)if(typeof e!="string"||!fd(n[e]))return!1;return!0}else if(Array.isArray(n)){for(const t of n)if(!fd(t))return!1;return!0}else return!1;else{const t=typeof n;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vR(n,t,e,s=console.log){const r=DR(n),o=["Layer (type)","Input Shape","Output shape","Param #"];r?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(l=>Math.floor(t*l)));let i;if(!r){o.push("Receives inputs"),i=[];for(const l in n.nodesByDepth)i.push(...n.nodesByDepth[l])}s("_".repeat(t)),uc(o,e,s),s("=".repeat(t));const a=n.layers;for(let l=0;l<a.length;++l)r?IR(a[l],e,s):$R(a[l],e,i,s),s((l===a.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();const u=CR(n),c=ec(n.nonTrainableWeights);s(`Total params: ${u+c}`),s(`Trainable params: ${u}`),s(`Non-trainable params: ${c}`),s("_".repeat(t))}function CR(n){let t;return n.collectedTrainableWeights!=null?t=ec(n.collectedTrainableWeights):t=ec(n.trainableWeights),t}function DR(n){let t=!0;const e=[],s=[];for(const r in n.nodesByDepth)e.push(n.nodesByDepth[r]);for(const r of e){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(const r of n.layers){let o=!1;for(const i of r.inboundNodes)if(s.indexOf(i)!==-1)if(o){t=!1;break}else o=!0;if(!t)break}return t}function uc(n,t,e=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);e(s)}function IR(n,t,e){let s,r;try{r=n.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const o=n.name,i=n.getClassName(),a=[`${o} (${i})`,r,s,n.countParams().toString()];uc(a,t,e)}function $R(n,t,e,s){let r,o;try{o=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{o="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const i=[];for(const h of n.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const f=h.inboundLayers[d].name,m=h.nodeIndices[d],p=h.tensorIndices[d];i.push(`${f}[${m}][${p}]`)}const a=n.name,u=n.getClassName(),c=i.length===0?"":i[0],l=[`${a} (${u})`,o,r,n.countParams().toString(),c];uc(l,t,s);for(let h=1;h<i.length;++h)uc(["","","","",i[h]],t,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Xb(n,t,e){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&t===0&&typeof e=="string"}function cc(n,t){if(n===null)return null;if(typeof n=="string")return Ur(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];Xb(t,r,o)?e.push(o):e.push(cc(o,t))}return e}else{const e={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")e[s]=r;else{const o=Ur(s);e[o]=cc(r,o)}}return e}}function pd(n,t){if(n==null)return null;if(typeof n=="string")return Ys(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];Xb(t,r,o)?e.push(o):e.push(pd(o,t))}return e}else{const e={};for(const s of Object.keys(n)){const r=n[s],o=Ys(s);(s==="name"||s==="className")&&typeof r=="string"?e[o]=r:e[o]=pd(r,s)}return e}}/** @license See the LICENSE file. */const Yb="4.15.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const kR=n=>{const t=Object.keys(n);if(t.length===0)return!1;const e=t[0].split("/");return!isNaN(parseInt(e[e.length-1],10))};class hs extends Bt{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){const b=this.getClassName().toLowerCase();this.name=Ul(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],mr(this.inputs).length!==this.inputs.length)throw new F(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);mr(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const w=b.sourceLayer,y=b.nodeIndex,v=b.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(y),this.outputLayersTensorIndices.push(v)}for(const b of this.inputs){const w=b.sourceLayer,y=b.nodeIndex,v=b.tensorIndex;As(y===0,"input layer has >1 nodes"),As(v===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(y),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const w=this.inputLayers[b];if(!(w instanceof lu))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${b} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);const e={},s={},r={},o={},i={},a=[],u=(b,w,y,v,C,D)=>{(v==null||C==null||D==null)&&(v=b.sourceLayer,C=b.nodeIndex,D=b.tensorIndex);const I=v.inboundNodes[C];if(y.indexOf(I)!==-1)throw new ts(`The tensor ${b.name} at layer "${v.name}" is part of a cycle.`);if(w.indexOf(I)!==-1)return;this.containerNodes.add(hs.nodeKey(v,C)),v.id in i||(i[v.id]=Object.keys(i).length),y.indexOf(I)===-1&&y.push(I);const $=I.inboundLayers.length;for(let S=0;S<$;S++){const E=I.inputTensors[S],N=I.inboundLayers[S],R=I.nodeIndices[S],L=I.tensorIndices[S];u(E,w,y,N,R,L)}for(w.push(I);y.indexOf(I)>=0;)y.splice(y.indexOf(I),1);a.push(I)},c=[],l=[];for(const b of this.outputs)u(b,c,l);const h=a.slice().reverse();for(const b of h){s[b.id]=b,b.id in e||(e[b.id]=0);let w=e[b.id];const y=r[b.outboundLayer.id]==null?0:r[b.outboundLayer.id];w=Math.max(w,y),r[b.outboundLayer.id]=w,o[b.outboundLayer.id]=b.outboundLayer,e[b.id]=w;for(let v=0;v<b.inboundLayers.length;v++){const C=b.inboundLayers[v],D=b.nodeIndices[v],I=C.inboundNodes[D],$=e[I.id]==null?0:e[I.id];e[I.id]=Math.max(w+1,$),s[I.id]=I}}const d={};for(const b in e){const w=e[b];w in d||(d[w]=[]),d[w].push(s[b])}const f={};for(const b in r){const w=r[b];w in f||(f[w]=[]),f[w].push(o[b])}let m=Object.keys(f).map(b=>parseInt(b,10)).sort($u);this.layers=[];for(const b of m){const w=f[b];w.sort((y,v)=>{const C=i[y.id],D=i[v.id];return C<D?-1:C>D?1:0});for(const y of w)y instanceof hs&&this.internalContainerRefs.push(y),this.layers.push(y)}this.layersByDepth=f,m=Object.keys(d).map(b=>parseInt(b,10)).sort($u);const p=this.inputs.slice(),x=[];for(const b of m)for(const w of d[b]){const y=w.outboundLayer;if(y!=null){for(const v of w.inputTensors)if(p.indexOf(v)===-1)throw new ts(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${y.name}". The following previous layers were accessed without issue: ${x}`);for(const v of w.outputTensors)p.push(v);x.push(y.name)}}this.nodesByDepth=d;const g=this.layers.map(b=>b.name);for(const b of g){const w=g.filter(y=>y===b).length;if(w!==1)throw new ts(`The name "${b}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Hl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(s=>s.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new F("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.layers)e.push(...s.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const s={};let r=0;const o=kR(t);o&&this.parseWeights(t);for(const a of this.layers)for(const[u,c]of a.weights.entries()){const l=o?`${c.name.split("/").slice(0,-1).join("/")+"/"}${u}`:c.originalName;if(s[l]!=null)throw new F(`Duplicate weight name: ${l}`);s[l]=c,r++}const i=[];for(const a in t){let u=a;if(s[a]==null){const c=a.split("/");u=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(s[u]!=null)i.push([s[u],t[a]]);else if(e)throw new F(`Provided weight data has no target variable: ${a}`);delete s[u]}if(e){const a=[];for(const u in s)a.push(u);if(a.length>0)throw new F(`${a.length} of ${r} weights are not set: ${a}`)}Zp(i)}parseWeights(t){for(const e in Object.keys(t)){const s=e.split("/"),r=["vars","layer_checkpoint_dependencies"],o=s.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!r.includes(i)).join("/");o!==e&&(t[o]=t[e],delete t[e])}}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${Yb}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const s=pd(this.updatedConfig());return e?JSON.stringify(s):s}call(t,e){return W(()=>{t=Xt(t);const s=new lr;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],t[r]);return Oi(this.outputs,s,e)})}computeMask(t,e){return W(()=>{t=Xt(t);let s;return e==null?s=ao(null,t.length):s=Xt(e),this.runInternalGraph(t,s)[1]})}computeOutputShape(t){const e=tc(t);if(e.length!==this.inputLayers.length)throw new F(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<e.length;a++){const u=this.inputLayers[a],c=e[a],l=u.name+"_0_0";s[l]=c}const r=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort($u);if(r.length>1)for(const a of r){const u=this.nodesByDepth[a];for(const c of u){const l=c.outboundLayer;if(this.inputLayers.map(p=>p.id).indexOf(l.id)!==-1)continue;const h=[];for(let p=0;p<c.inboundLayers.length;p++){const x=c.inboundLayers[p],g=c.nodeIndices[p],b=c.tensorIndices[p],w=`${x.name}_${g}_${b}`,y=s[w];h.push(y)}const d=l.computeOutputShape(bn(h)),f=tc(d),m=l.inboundNodes.indexOf(c);for(let p=0;p<f.length;p++){const x=`${l.name}_${m}_${p}`;s[x]=f[p]}}}const o=[],i=[];for(let a=0;a<this.outputLayers.length;a++){const u=this.outputLayers[a],c=this.outputLayersNodeIndices[a],l=this.outputLayersTensorIndices[a],h=`${u.name}_${c}_${l}`;i.push(h)}for(let a=0;a<i.length;a++){const u=i[a];As(u in s),o.push(s[u])}return bn(o)}runInternalGraph(t,e){e==null&&(e=ao(null,t.length));const s={};for(let u=0;u<this.inputs.length;++u){const c=this.inputs[u],l=t[u],h=e[u];s[c.id]=[l,h]}const r=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort($u);for(const u of r){const c=this.nodesByDepth[u];for(const l of c){const h=l.outboundLayer,d=l.inputTensors,f=l.outputTensors,m=new Array;for(const p of d)p.id in s&&m.push(s[p.id]);if(m.length===d.length){let p={},x,g,b,w;if(l.callArgs!=null&&(p=l.callArgs),m.length===1){const[y,v]=m[0];p.mask==null&&(p.mask=v),b=Xt(h.call(y,p)),w=Xt(h.computeMask(y,v)),x=[y],g=[v]}else x=m.map(y=>y[0]),g=m.map(y=>y[1]),p.mask==null&&(p.mask=g),b=Xt(h.call(x,p)),w=Xt(h.computeMask(x,g));if(h.activityRegularizer)throw new Rt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let y=0;y<f.length;++y){const v=f[y],C=b[y],D=w[y];s[v.id]=[C,D]}}}}const o=[],i=[],a=[];for(const u of this.outputs){As(u.id in s,`Could not compute output ${u.name} : ${u.id}`);const[c,l]=s[u.id];a.push(c.shape),o.push(c),i.push(l)}return[o,i,a]}buildNodeConversionMap(t){const e={};let s;for(const r of this.layers){s=r instanceof hs?1:0;for(let o=0;o<r.inboundNodes.length;o++){const i=hs.nodeKey(r,o);this.containerNodes.has(i)&&(e[i]=s,s+=1)}}return e}getLayer(t,e){if(e!=null)return this.findLayer(e);if(t==null)throw new F("Provide either a layer name or layer index");if(typeof t=="number")return this.findLayer(t);for(const s of this.layers)if(s.name===t)return s;throw new F(`No such layer: ${t}`)}findLayer(t){if(this.layers.length<=t)throw new F(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}calculateLosses(){return W(()=>{const t=[];for(const e of this.layers)for(let s=0;s<e.inboundNodes.length;++s){const r=hs.nodeKey(e,s);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const a=i.getClassName(),u=i.getConfig(),c=[];for(let h=0;h<i.inboundNodes.length;h++){const d=i.inboundNodes[h],f=hs.nodeKey(i,h);let m={};if(this.containerNodes.has(f)){if(d.callArgs)try{JSON.stringify(d.callArgs),m=d.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),m={}}if(d.inboundLayers.length>0){const p=[];for(let x=0;x<d.inboundLayers.length;x++){const g=d.inboundLayers[x],b=d.nodeIndices[x],w=d.tensorIndices[x],y=hs.nodeKey(g,b);let v=e[y];v==null&&(v=0),p.push([g.name,v,w,m])}c.push(p)}}}const l={};l.name=i.name,l.className=a,l.config=u,l.inboundNodes=c,s.push(l)}t.layers=s;const r=[];for(let i=0;i<this.inputLayers.length;i++){const a=this.inputLayers[i],u=this.inputLayersNodeIndices[i],c=hs.nodeKey(a,u);if(!this.containerNodes.has(c))continue;let l=e[c];l==null&&(l=0);const h=this.inputLayersTensorIndices[i];r.push([a.name,l,h])}t.inputLayers=r;const o=[];for(let i=0;i<this.outputLayers.length;i++){const a=this.outputLayers[i],u=this.outputLayersNodeIndices[i],c=hs.nodeKey(a,u);if(!this.containerNodes.has(c))continue;let l=e[c];l==null&&(l=0);const h=this.outputLayersTensorIndices[i];o.push([a.name,l,h])}return t.outputLayers=o,t}static fromConfig(t,e,s={},r=!1){const o={},i={};function a(x,g){x.name in i?i[x.name].push(g):i[x.name]=[g]}function u(x,g){const b=[];let w;for(const y of g){const v=y[0],C=y[1],D=y[2];if(w=y[3]==null?{}:y[3],!(v in o)){a(x,g);return}const I=o[v];if(I.inboundNodes.length<=C){a(x,g);return}const $=I.inboundNodes[C];b.push($.outputTensors[D])}b.length>0&&x.apply(bn(b),w)}function c(x){const g=x.name,b=zs(x,e.customObjects!=null?e.customObjects:{});b.setFastWeightInitDuringBuild(r),o[g]=b,x.inboundNodes.forEach(y=>{if(!(y instanceof Array))throw new F(`Corrupted configuration, expected array for nodeData: ${y}`);a(b,y)})}const l=e.name,h=e.layers;for(const x of h)c(x);for(;!lF(i);)for(const x of h){const g=o[x.name];if(g.name in i){const b=i[g.name];delete i[g.name];for(const w of b)u(g,w)}}const d=[],f=[],m=e.inputLayers;for(const x of m){const g=x[0],b=x[1],w=x[2];As(g in o);const v=o[g].inboundNodes[b].outputTensors;d.push(v[w])}const p=e.outputLayers;for(const x of p){const g=x[0],b=x[1],w=x[2];As(g in o);const v=o[g].inboundNodes[b].outputTensors;f.push(v[w])}return new t({inputs:d,outputs:f,name:l})}get stateful(){if(this._stateful)throw new F("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){W(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function SR(n,t,e){const s=t.length;if(n==null||Array.isArray(n)&&n.length===0)return t.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return t.forEach(o=>{o in n?r.push(n[o]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${e} must be either an array with ${s} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}function Zb(n,t){return SR(n,t,"classWeight")}async function Jb(n,t,e,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){const r=W(()=>{if(n.shape.length===1)return Kr(n);if(n.shape.length===2){if(n.shape[1]>1)return Wi(n,1);if(n.shape[1]===1)return z(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(await r.data());_t(r);const i=[];return o.forEach(a=>{if(e[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(e[a])}),Tn(i,"float32")}else return null}function ER(n,t){return M(n,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const NR=32;function Qb(n,t){let e,s;const r=t;e=r.xs,s=r.ys,k(e!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const o=Fg("input",n.inputNames,e),i=Fg("output",n.outputNames,s),a=o[0].shape[0];k(o.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),k(i.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let u=0;u<o.length;u++)k(o[u].shape[0]===a,()=>`Batch size mismatch: input ${n.inputNames[u]} has ${o[u].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);for(let u=0;u<i.length;u++)k(i[u].shape[0]===a,()=>`Batch size mismatch: output ${n.outputNames[u]} has ${i[u].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);return{xs:o,ys:i}}function Fg(n,t,e){if(e instanceof Te)return[e];if(Array.isArray(e))return k(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{const s=[];for(const r of t){if(e[r]==null)throw new F(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(e[r])}return s}}function AR(n){if(n.length===3)throw new Rt("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function TR(n,t,e){const s=e.batchesPerEpoch!=null;if(k(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),k(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),k(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),k(!s||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),k(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=e.validationData!=null;let o,i;if(r)if(Rg(e.validationData))k(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const x=AR(e.validationData);o=x.xs,i=x.ys}const a=n.makeTrainFunction(),u=n.getDedupedMetricsNames();let c;r?c=u.slice().concat(u.map(x=>"val_"+x)):c=u.slice();const l=Wb(e.callbacks,e.yieldEvery),h=e.verbose==null?1:e.verbose,{callbackList:d,history:f}=Ub(l,h,e.epochs,null,null,FR(t,e),null,r,c);d.setModel(n),n.history=f,await d.onTrainBegin(),n.stopTraining_=!1;let m=e.initialEpoch==null?0:e.initialEpoch,p=await t.iterator();for(;m<e.epochs;){const x={};await d.onEpochBegin(m);let g=0,b=0;for(s||(p=await t.iterator());!s||g<e.batchesPerEpoch;){const w=await p.next();if(s&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${g} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){const{xs:y,ys:v}=Qb(n,w.value),C={};C.batch=b,C.size=y[0].shape[0],await d.onBatchBegin(b,C);const D=[];if(e.classWeight!=null){const S=Zb(e.classWeight,n.outputNames);for(let E=0;E<S.length;++E)D.push(await Jb(v[E],null,S[E]))}const I=y.concat(v).concat(D),$=a(I);_t(I);for(let S=0;S<u.length;++S){const E=u[S],N=$[S];C[E]=N,Ms(N)}await d.onBatchEnd(b,C),Vb(C),b++,g++}if(s?g>=e.batchesPerEpoch:w.done){if(r){let y;Rg(e.validationData)?y=Xt(await n.evaluateDataset(e.validationData,{batches:e.validationBatches})):y=Xt(n.evaluate(o,i,{batchSize:e.validationBatchSize==null?NR:e.validationBatchSize,verbose:0}));for(let v=0;v<n.metricsNames.length;++v)x[`val_${n.metricsNames[v]}`]=y[v]}break}if(n.stopTraining_)break}if(await d.onEpochEnd(m,x),m++,n.stopTraining_)break}return await d.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function FR(n,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(n.size)&&(e=n.size),e}function Rg(n){return typeof n.iterator=="function"}function RR(n){return typeof n.next=="function"}async function _R(n,t,e){e=e||{};const s=e.batches!=null,r=n.testFunction;let o=[];if(e.verbose>0)throw new Rt("Verbose mode is not implemented yet.");k(!s||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const i=RR(t)?t:await t.iterator();let a=0,u=0;for(;!s||u<e.batches;){const c=await i.next();if(o=W(()=>{if(c.value){const{xs:l,ys:h}=Qb(n,c.value),d=l.concat(h),f=W(()=>r(d));if(_t(d),u===0)for(let p=0;p<f.length;++p)o.push(qt(0));const m=d[0].shape[0];for(let p=0;p<f.length;++p){const x=f[p],g=o[p];o[p]=W(()=>rt(o[p],M(m,x))),u>0&&_t(g)}_t(f),a+=m,++u}return o}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<o.length;++c){const l=o[c];o[c]=$t(o[c],a),_t(l)}return bn(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ih(n){k(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function Ai(n,t,e){return n==null?[null]:Array.isArray(n)?n.map(s=>Yr(s,t,e-t)):Yr(n,t,e-t)}function md(n,t){return W(()=>n==null?null:Array.isArray(n)?n.map(e=>md(e,t)):Sb(n,t.dtype==="int32"?t:mt(t,"int32")))}function $h(n,t){const e=[];let s=0,r=null;for(;s<n;)r=s+t,r>=n&&(r=n),e.push([s,r]),s=r;return e}function tw(n){const t=[];n instanceof Te&&(n=[n]);for(let e=0;e<n.length;++e){const s=n[e];if(s.rank===1)t.push(au(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function ls(n,t){if(n==null)return;const e=[];if(t instanceof Te)e.push(t.id);else if(Array.isArray(t))t.forEach(r=>e.push(r.id));else if(t!=null)for(const r in t){const o=t[r];e.push(o.id)}const s=[];if(n instanceof Te)e.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{e.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const o=n[r];e.indexOf(o.id)===-1&&s.push(o)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function OR(n){return n instanceof Te}function gd(n){return Array.isArray(n)}function _g(n){return!OR(n)&&!gd(n)}function Og(n,t,e,s=!0,r=""){if(t==null||t.length===0){if(n!=null){let i=!1;if(gd(n)&&n.length>0)i=!0;else if(_g(n)){for(const a in n)if(n.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new F(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return t.map(i=>null);let o;if(_g(n)){n=n,o=[];for(const i of t){if(n[i]==null)throw new F(`No data provided for "${i}". Need data for each key in: ${t}`);o.push(n[i])}}else if(gd(n)){if(n=n,n.length!==t.length)throw new F(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);o=n}else{if(n=n,t.length>1)throw new F(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);o=[n]}if(o=tw(o),e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;const a=o[i];if(a.shape.length!==e[i].length)throw new F(`Error when checking ${r}: expected ${t[i]} to have ${e[i].length} dimension(s). but got array with shape ${a.shape}`);for(let u=0;u<e[i].length;++u){if(u===0&&!s)continue;const c=a.shape[u],l=e[i][u];if(l!=null&&l>=0&&c!==l)throw new F(`${r} expected a batch of elements where each example has shape [${e[i].slice(1,e[i].length)}] (i.e.,tensor shape [*,${e[i].slice(1,e[i].length)}]) but the ${r} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return o}function MR(n,t,e){const s=mr(n.map(o=>o.shape[0]));s.sort();const r=mr(t.map(o=>o.shape[0]));if(r.sort(),s.length>1)throw new F(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(o=>o.shape))}`);if(r.length>1)throw new F(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(o=>o.shape))}`);if(s.length>0&&r.length>0&&!jt(s,r))throw new F(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function BR(n,t,e){const s=[ql,jl,Ki];for(let r=0;r<n.length;++r){const o=n[r],i=t[r],a=e[r];if(i!=null){if(i===Ki&&o.shape[o.shape.length-1]===1)throw new F(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){const u=o.shape.slice(1),c=a.slice(1);for(let l=0;l<u.length;++l){const h=u[l],d=c[l];if(d!=null&&h!==d)throw new F(`A target Tensor with shape ${o.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Mg(n,t,e,s=!0,r=""){let o;if(Array.isArray(n)){if(n.length!==t.length)throw new F(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);o=n}else{if(t.length>1)throw new F(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);o=[n]}if(e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;const a=o[i];if(a.shape.length!==e[i].length)throw new F(`Error when checking ${r}: expected ${t[i]} to have ${e[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let u=0;u<e[i].length;++u){if(u===0&&!s)continue;const c=a.shape[u],l=e[i][u];if(l!=null&&l!==c)throw new F(`Error when checking ${r}: expected ${t[i]} to have shape ${JSON.stringify(e[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function LR(n,t){if(n==null||Array.isArray(n)&&n.length===0)return t.map(s=>[]);let e;if(typeof n=="string"||typeof n=="function")e=[n];else if(Array.isArray(n)||typeof n=="object")e=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(e))return t.map(s=>e);{const s=[];for(const r of t){let o=e.hasOwnProperty(r)?e[r]:[];Array.isArray(o)||(o=[o]),s.push(o)}return s}}const PR="layers-model";class Wo extends hs{constructor(t){super(t),this.isTraining=!1}summary(t,e,s=console.log){if(!this.built)throw new F("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");vR(this,t,e,s)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=yR(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Rr))throw new F("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const i in t.loss)if(this.outputNames.indexOf(i)===-1)throw new F(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)t.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),e.push(Dh(t.loss[i]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new F(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(a=>Dh(a))}else{const i=Dh(t.loss);this.outputs.forEach(a=>{e.push(i)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const a=this.internalOutputShapes[i],u=this.outputNames[i];this.feedOutputNames.push(u),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[i])}const s=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Xr("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([a,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const r=LR(t.metrics,this.outputNames),o=(i,a,u)=>{this.outputNames.length>1&&(a=this.outputNames[i]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([u,i])};Xr("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=r[i];(c=>{const l="";let h,d,f;for(const m of c){if(typeof m=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(m)!==-1){const x=this.internalOutputShapes[i];x[x.length-1]===1||this.lossFunctions[i]===jl?["accuracy","acc"].indexOf(m)!==-1?d=Hb:["crossentropy","ce"].indexOf(m)!==-1&&(d=lR):this.lossFunctions[i]===oc?["accuracy","acc"].indexOf(m)!==-1?d=hR:["crossentropy","ce"].indexOf(m)!==-1&&(d=Kb):["accuracy","acc"].indexOf(m)!==-1?d=qb:["crossentropy","ce"].indexOf(m)!==-1&&(d=jb);let g;["accuracy","acc"].indexOf(m)!==-1?g="acc":["crossentropy","ce"].indexOf(m)!==-1&&(g="ce"),f=d,h=l+g}else f=wR(m),h=l+Eu(m);let p;Xr(h,()=>{p=f}),o(i,h,p)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,s={}){const r=s.batchSize==null?32:s.batchSize;Ih(r);const o=!0,i=this.standardizeUserDataXY(t,e,o,r);try{const a=i[0].concat(i[1]);this.makeTestFunction();const u=this.testFunction,c=this.testLoop(u,a,r,s.verbose,s.steps);return bn(c)}finally{ls(i[0],t),ls(i[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),_R(this,t,e)}checkNumSamples(t,e,s,r="steps"){let o;if(s!=null){if(o=null,e!=null)throw new F(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?o=t[0].shape[0]:o=t.shape[0];else throw new F(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return o}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new F("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(e),r=s?e:[e],o=this.retrieveSymbolicTensors(r),i=new lr;if(t instanceof Te&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new F(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)i.add(this.inputs[u],t[u])}else for(const u of this.inputs){const c=t[u.name];if(c==null)throw new F(`No value is provided for the model's input ${u.name}`);i.add(u,c)}const a=Oi(o,i);return s?a:a[0]}retrieveSymbolicTensors(t){const e=ao(null,t.length);let s=t.length;for(const r of this.layers){const o=Array.isArray(r.output)?r.output:[r.output],i=o.map(a=>a.name);for(let a=0;a<t.length;++a){const u=i.indexOf(t[a]);if(u!==-1&&(e[a]=o[u],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw e.forEach((o,i)=>{o==null&&r.push(t[i])}),new F(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return e}predictLoop(t,e=32,s=!1){return W(()=>{const r=this.checkNumSamples(t);if(s)throw new Rt("Verbose predictLoop() is not implemented yet.");const o=$h(r,e),i=this.outputs.map(a=>[]);for(let a=0;a<o.length;++a)W(()=>{const c=o[a][0],l=o[a][1],h=Ai(t,c,l),d=[];if(Array.isArray(h))for(let m=0;m<h.length;++m)d.push({key:this.inputs[m],value:h[m]});else d.push({key:this.inputs[0],value:h});const f=new lr(d);return Oi(this.outputs,f)}).forEach((c,l)=>i[l].push(c));return bn(i.map(a=>wn(a,0)))})}predict(t,e={}){const s=tw(t);Mg(s,this.inputNames,this.feedInputShapes,!1);try{const r=e.batchSize==null?32:e.batchSize;return Ih(r),this.predictLoop(s,r)}finally{ls(s,t)}}predictOnBatch(t){Mg(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,s=!0,r){if(this.optimizer_==null)throw new ts("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let i=0;i<this.feedOutputShapes.length;++i){const a=this.feedOutputShapes[i];this.feedLossFns[i]===oc?o.push(a.slice(0,a.length-1).concat([1])):o.push(a)}if(t=Og(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Og(e,this.feedOutputNames,o,!1,"target"),MR(t,e),BR(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&t[0].shape[0]%r!==0)throw new F(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,s,r,o=!0,i){const[a,u]=this.standardizeUserDataXY(t,e,o,i);if(s!=null)throw new Error("sample weight is not supported yet.");let c=null;if(r!=null){const l=Zb(r,this.outputNames);c=[];for(let h=0;h<l.length;++h)c.push(await Jb(u[h],null,l[h]))}return[a,u,c]}testLoop(t,e,s,r=0,o){return W(()=>{const i=this.checkNumSamples(e,s,o,"steps"),a=[];if(r>0)throw new Rt("Verbose mode is not implemented yet.");if(o!=null)throw new Rt("steps mode in testLoop() is not implemented yet");{const u=$h(i,s),c=Tn(ys(0,i));for(let l=0;l<u.length;++l){const h=u[l][0],d=u[l][1],f=Yr(c,h,d-h),m=md(e,f),p=t(m);if(l===0)for(let x=0;x<p.length;++x)a.push(qt(0));for(let x=0;x<p.length;++x){const g=p[x];a[x]=rt(a[x],M(d-h,g))}}for(let l=0;l<a.length;++l)a[l]=$t(a[l],i)}return a})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let s=0;s<t.length;++s){const r=t[s];let o=r;if(yg(t,r)>1){const i=yg(t.slice(0,s),r);o+=`_${i}`}e.push(o)}return e}makeTrainFunction(){return t=>{const e=[],s=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],a=()=>{const h=[];for(let p=0;p<this.inputs.length;++p)h.push({key:this.inputs[p],value:s[p]});const d=new lr(h),f=Oi(this.outputs,d,{training:!0});let m;for(let p=0;p<this.lossFunctions.length;++p){const x=this.lossFunctions[p];let g=x(r[p],f[p]);o[p]!=null&&(g=ER(g,o[p]));const b=Ee(g);e.push(b),p===0?m=g:m=rt(m,g)}for(let p=0;p<this.metricsTensors.length;++p){let x;if(this.outputs.length>1&&p<this.outputs.length)x=e[p];else{const g=this.metricsTensors[p][0],b=this.metricsTensors[p][1];x=Ee(g(r[b],f[b]))}Ms(x),i.push(x)}return m=Ee(m),this.calculateLosses().forEach(p=>{m=rt(m,p)}),m},u=this.collectedTrainableWeights.map(h=>h.read()),c=!0;return[this.optimizer_.minimize(a,c,u)].concat(i)}}makeTestFunction(){this.testFunction=t=>W(()=>{const e=[];let s;const r=t.slice(0,this.inputs.length),o=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let c=0;c<this.inputs.length;++c)i.push({key:this.inputs[c],value:r[c]});const a=new lr(i),u=Oi(this.outputs,a);for(let c=0;c<this.lossFunctions.length;++c){const l=this.lossFunctions[c],h=Ee(l(o[c],u[c]));c===0?s=h:s=rt(s,h),e.push(s)}for(let c=0;c<this.metricsTensors.length;++c){const l=this.metricsTensors[c][0],h=this.metricsTensors[c][1],d=Ee(l(o[h],u[h]));e.push(d)}return e})}async fit(t,e,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,o,i,a,u,c,l,h,d;try{const f=s.batchSize==null?32:s.batchSize;Ih(f);const m=!1,p=await this.standardizeUserData(t,e,s.sampleWeight,s.classWeight,m,f);r=p[0],o=p[1],d=p[2];let x=!1,g;if(s.validationData!=null&&s.validationData.length>0){if(x=!0,s.validationData.length===2)u=s.validationData[0],c=s.validationData[1];else throw s.validationData.length===3?new Rt("validationData including sample weights is not supported yet."):new F(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const $=!0,S=await this.standardizeUserData(u,c,null,null,$,f);l=S[0],h=S[1],g=l.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){x=!0;const $=Math.floor(r[0].shape[0]*(1-s.validationSplit)),S=r[0].shape[0];l=Ai(r,$,S),i=r,r=Ai(r,0,$),h=Ai(o,$,S),a=o,o=Ai(o,0,$),g=l.concat(h)}else s.validationSteps!=null&&(x=!0);const b=r.concat(o).concat(d);this.checkTrainableWeightsConsistency();const w=this.makeTrainFunction(),y=this.getDedupedMetricsNames();let v,C;x?(this.makeTestFunction(),v=this.testFunction,C=y.slice().concat(y.map($=>"val_"+$))):(v=null,g=[],C=y.slice());const D=Wb(s.callbacks,s.yieldEvery);return await this.fitLoop(w,b,y,f,s.epochs,s.verbose,D,v,g,s.shuffle,C,s.initialEpoch,null,null)}finally{this.isTraining=!1,ls(r,t),ls(o,e),ls(i,t),ls(a,e),ls(l,u),ls(h,c),d!=null&&_t(d)}}async fitLoop(t,e,s,r,o,i,a,u,c,l,h,d,f,m){r==null&&(r=32),o==null&&(o=1),l==null&&(l=!0),d==null&&(d=0);let p=!1;if(u!=null&&c!=null&&(p=!0),m!=null&&(p=!0,f==null))throw new F("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const x=this.checkNumSamples(e,r,f,"steps_per_epoch");let g;x!=null&&(g=ys(0,x)),i==null&&(i=1);const{callbackList:b,history:w}=Ub(a,i,o,d,x,f,r,p,h);b.setModel(this),this.history=w,await b.onTrainBegin(),this.stopTraining_=!1;for(let y=d;y<o;++y){await b.onEpochBegin(y);const v={};if(f!=null)throw new Rt("stepsPerEpoch mode is not implemented yet.");{if(l==="batch")throw new Rt("batch shuffling is not implemneted yet");l&&o2(g);const C=Tn(g),D=$h(x,r);for(let I=0;I<D.length;++I){const $={};if(await b.onBatchBegin(I,$),W(()=>{const S=D[I][0],E=D[I][1],N=Yr(C,S,E-S);$.batch=I,$.size=E-S;const R=md(e,N),L=t(R);for(let O=0;O<s.length;++O){const _=s[O],j=L[O];$[_]=j,Ms(j)}if(I===D.length-1&&p){const O=this.testLoop(u,c,r);for(let _=0;_<s.length;++_){const j=s[_],G=O[_];Ms(G),v["val_"+j]=G}}}),await b.onBatchEnd(I,$),Vb($),this.stopTraining_)break}C.dispose()}if(await b.onEpochEnd(y,v),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,e){return TR(this,t,e)}async trainOnBatch(t,e){const s=await this.standardizeUserData(t,e),r=s[0],o=s[1],a=this.makeTrainFunction()(r.concat(o)),u=[];for(const c of a){const l=await c.data();u.push(l[0])}return _t(a),ls(s[0],t),ls(s[1],e),bn(u)}getNamedWeights(t){const e=[],s=t!=null&&t.trainableOnly,r=s?this.trainableWeights:this.weights,o=this.getWeights(s);for(let i=0;i<r.length;++i)s&&!r[i].trainable||e.push({name:r[i].originalName,tensor:o[i]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const e=Jh().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Jh().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=Ys(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>Ys(e))}else{const e=Object.keys(this.loss);t={};const s=this.loss;for(const r of e)if(typeof s[r]=="string")t[r]=Ys(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Ys(Eu(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>Ys(Eu(t)));{const t={};for(const e in this.metrics)t[e]=Ys(Eu(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const e=cc(t.optimizer_config),s=zs(e);let r;if(typeof t.loss=="string")r=Ur(t.loss);else if(Array.isArray(t.loss))r=t.loss.map(i=>Ur(i));else if(t.loss!=null){r={};for(const i in t.loss)r[i]=Ur(t.loss[i])}let o;if(Array.isArray(t.metrics))o=t.metrics.map(i=>Ur(i));else if(t.metrics!=null){o={};for(const i in t.metrics)o[i]=Ur(t.metrics[i])}this.compile({loss:r,metrics:o,optimizer:s})}async save(t,e){if(typeof t=="string"){const c=hI(t);if(c.length===0)throw new F(`Cannot find any save handlers for URL '${t}'`);if(c.length>1)throw new F(`Found more than one (${c.length}) save handlers for URL '${t}'`);t=c[0]}if(t.save==null)throw new F("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await eg(this.getNamedWeights(e)),r=!1,o=null,a={modelTopology:this.toJSON(o,r),format:PR,generatedBy:`TensorFlow.js tfjs-layers v${Yb}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:l,specs:h}=await eg(await this.optimizer.getWeights(),c);s.specs.push(...h),s.data=sI([s.data,l])}return this.userDefinedMetadata!=null&&(Tg(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=s.data,a.weightSpecs=s.specs,t.save(a)}setUserDefinedMetadata(t){Tg(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Wo.className="Model";et(Wo);class ew extends Wo{}ew.className="Functional";et(ew);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function zR(n,t){if(t==null&&(t={}),typeof n=="string"){const e=dI(n,t);if(e.length===0)e.push(jN(n,t));else if(e.length>1)throw new F(`Found more than one (${e.length}) load handlers for URL '${n}'`);n=e[0]}return VR(n,void 0,t)}async function VR(n,t,e){if(e==null&&(e={}),n.load==null)throw new F("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await n.load();let r=s.modelTopology;r.model_config!=null&&(r=r.model_config);const o=e.strict==null?!0:e.strict,i=s.weightData!=null&&s.weightSpecs!=null&&o,a=zs(cc(r),t,i),u=s.trainingConfig;if(u!=null&&a.loadTrainingConfig(u),s.userDefinedMetadata!=null&&a.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new F("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:c,optimizerWeights:l}=WR(s.weightData,s.weightSpecs);a.loadWeights(c,o),a.optimizer!=null&&l.length>0&&await a.optimizer.setWeights(l),_t(c),_t(l.map(h=>h.tensor))}return a}function WR(n,t){const e=Z2(n,t),s={},r=[];return t.forEach(o=>{o.group==="optimizer"?r.push({name:o.name,tensor:e[o.name]}):s[o.name]=e[o.name]}),{modelWeights:s,optimizerWeights:r}}class Qo extends Wo{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:Ul("sequential_"),t.layers!=null)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new F(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof Qo||t instanceof Wo;let s;if(e){if(s=t,s.outputs.length!==1)throw new F("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new F("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new F("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=VF({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(r)}if(e)this.outputs=s.outputs,this.inputs=s.inputs;else{if(t.inboundNodes.length!==1)throw new F(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new F("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=Mb(this.outputs[0])}this.inboundNodes=[],new Hl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ao(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=t.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(Vt(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Wo({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,s=console.log){this.built||this.build(),super.summary(t,e,s)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,s={}){if(!this.built)throw new ts("The model needs to be compiled before being used.");return this.model.evaluate(t,e,s)}async evaluateDataset(t,e){if(!this.built)throw new ts("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,s={}){if(!this.built)throw new ts("The model needs to be compiled before being used.");return this.model.fit(t,e,s)}async fitDataset(t,e){if(!this.built)throw new ts("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,s={},r=!1){let o,i={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new F("Legacy serialization format not supported yet.");o=e}else k(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=e.layers,delete e.layers,i=e;const a=new t(i);if(!(a instanceof Qo))throw new Rt(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const u of o){const l=zs(u,void 0,r);r&&l.setFastWeightInitDuringBuild(!0),a.add(l)}return a}set stopTraining(t){if(this.model==null)throw new F("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new F("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const s={};s.className=e.getClassName(),s.config=e.getConfig(),t.push(s)}return{name:this.name,layers:t}}}Qo.className="Sequential";et(Qo);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function UR(n){return new Qo(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Dn=class extends pi{getConfig(){return{}}};class nw extends Dn{apply(t,e=1){return $F(t,e)}}nw.className="elu";et(nw);class sw extends Dn{apply(t){return wx(t)}}sw.className="selu";et(sw);class rw extends Dn{apply(t){return bo(t)}}rw.className="relu";et(rw);class ow extends Dn{apply(t){return W(()=>Hi(6,bo(t)))}}ow.className="relu6";et(ow);class iw extends Dn{apply(t){return t}}iw.className="linear";et(iw);class aw extends Dn{apply(t){return hi(t)}}aw.className="sigmoid";et(aw);class uw extends Dn{apply(t){return SF(t)}}uw.className="hardSigmoid";et(uw);class cw extends Dn{apply(t){return Qa(t)}}cw.className="softplus";et(cw);class lw extends Dn{apply(t){return kF(t)}}lw.className="softsign";et(lw);class hw extends Dn{apply(t){return Rf(t)}}hw.className="tanh";et(hw);let em=class extends Dn{apply(t,e=-1){return np(t,e)}};em.className="softmax";et(em);class dw extends Dn{apply(t,e=-1){return cx(t,e)}}dw.className="logSoftmax";et(dw);class fw extends Dn{apply(t,e=1){return W(()=>M(hi(M(t,e)),t))}}fw.className="swish";et(fw);class pw extends Dn{apply(t){return W(()=>M(t,Rf(Qa(t))))}}pw.className="mish";et(pw);function yr(n){return n.getClassName()}function kh(n,t={}){return iu(n,Yn.getMap().classNameMap,t,"activation")}function vr(n){if(n==null){const t={};return t.className="linear",t.config={},kh(t)}if(typeof n=="string"){const t={};return t.className=n,t.config={},kh(t)}else return n instanceof Dn?n:kh(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function GR(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class mw extends pi{}class gw extends mw{constructor(t){super(),GR(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return W(()=>{let e=Fe([1]);return this.hasL1&&(e=rt(e,Ct(M(this.l1,an(t))))),this.hasL2&&(e=rt(e,Ct(M(this.l2,uu(t))))),z(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}gw.className="L1L2";et(gw);const Bg={l1l2:"L1L2"};function ne(n){return Vp(n)}function Lg(n,t={}){return iu(n,Yn.getMap().classNameMap,t,"regularizer")}function fe(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in Bg?Bg[n]:n,config:{}};return Lg(e)}else return n instanceof mw?n:Lg(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class xw extends Bt{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=Et(t);let s=bo(t);return this.maxValue!=null&&(s=Un(s,0,this.maxValue)),s}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}xw.className="ReLU";et(xw);class bw extends Bt{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=Et(t);return Vf(s,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}bw.className="LeakyReLU";et(bw);class ww extends Bt{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=de(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=fe(t.alphaRegularizer),this.alphaConstraint=Me(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new F(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Vt(t);const e=t.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)e[r-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<t.length;++r)s[r]=t[r];this.inputSpec=[new _e({ndim:t.length,axes:s})],this.built=!0}call(t,e){return t=Et(t),jf(t,this.alpha.read())}getConfig(){const t={alphaInitializer:me(this.alphaInitializer),alphaRegularizer:ne(this.alphaRegularizer),alphaConstraint:Oe(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}ww.className="PReLU";et(ww);let yw=class extends Bt{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new Rt(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=Et(t);return Ol(s)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};yw.className="ELU";et(yw);class vw extends Bt{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){const s=Et(t);return M(s,mt(Gn(s,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}vw.className="ThresholdedReLU";et(vw);class Cw extends Bt{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new em().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){return W(()=>{let s=Et(t);const r=e.mask;if(r!=null){const o=M(St(Fr(s.shape),mt(r,s.dtype)),qt(-1e9));s=rt(s,o)}return this.axis instanceof Array?this.axis.length>1?Ws(St(s,lx(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}Cw.className="Softmax";et(Cw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Uo(n,t,e){if(typeof n=="number")return ao(n,t);if(n.length!==t)throw new F(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let s=0;s<t;++s){const r=n[s];if(!vF(r))throw new F(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function bs(n,t,e,s,r=1){if(n==null)return n;const o=t+(t-1)*(r-1);let i;return e==="same"?i=n:i=n-o+1,Math.floor((i+s-1)/s)}function Ts(n,t,e,s){if(n==null)return null;if(s==="valid")n=n*t+wr([e-t,0]);else if(s==="same")n=n*t;else throw new F(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function nm(n,t){return W(()=>(ke(t),t==="channelsFirst"?Lt(n,[0,2,3,1]):n))}function Dw(n,t){return W(()=>(ke(t),t==="channelsFirst"?Lt(n,[0,2,3,4,1]):n))}function HR(n,t,e,s=1,r="valid",o,i=1){return W(()=>{if(o==null&&(o=vs()),ke(o),n.shape.length!==3)throw new F(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(t.shape.length!==3)throw new F(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new F(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(o==="channelsFirst"&&(n=Lt(n,[0,2,1])),r==="causal")throw new Rt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=tx(n,t,s,r==="same"?"same":"valid","NWC",i);return e!=null&&(a=Is(a,e)),a})}function Pg(n,t,e,s=[1,1],r="valid",o,i,a=null){return W(()=>{if(o==null&&(o=vs()),ke(o),n.rank!==3&&n.rank!==4)throw new F(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(t.rank!==3&&t.rank!==4)throw new F(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let u=nm(n,o);if(r==="causal")throw new Rt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=GE({x:u,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:e,activation:a}),o==="channelsFirst"&&(u=Lt(u,[0,3,1,2])),u})}function qR(n,t,e,s=[1,1,1],r="valid",o,i){return W(()=>{if(o==null&&(o=vs()),ke(o),n.rank!==4&&n.rank!==5)throw new F(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(t.rank!==4&&t.rank!==5)throw new F(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let a=Dw(n,o);if(r==="causal")throw new Rt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=W$(a,t,s,r==="same"?"same":"valid","NDHWC",i),e!=null&&(a=Is(a,e)),o==="channelsFirst"&&(a=Lt(a,[0,4,1,2,3])),a})}class Kl extends Bt{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Kl.verifyArgs(e),this.rank=t,Ue(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Rt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Uo(e.kernelSize,t,"kernelSize"),this.strides=Uo(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,Hn(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,ke(this.dataFormat),this.activation=vr(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=de(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Me(e.biasConstraint),this.biasRegularizer=fe(e.biasRegularizer),this.activityRegularizer=fe(e.activityRegularizer),this.dilationRate=Uo(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new F(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new F(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new F(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(As("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!Wp(t.kernelSize,"number",1,3))throw new F(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:yr(this.activation),useBias:this.useBias,biasInitializer:me(this.biasInitializer),biasRegularizer:ne(this.biasRegularizer),activityRegularizer:ne(this.activityRegularizer),biasConstraint:Oe(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class mi extends Kl{constructor(t,e){super(t,e),this.kernel=null,mi.verifyArgs(e),this.filters=e.filters,Ue(this.filters,"filters"),this.kernelInitializer=de(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Me(e.kernelConstraint),this.kernelRegularizer=fe(e.kernelRegularizer)}build(t){t=Vt(t);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new F(`The channel dimension of the input should be defined. Found ${t[e]}`);const s=t[e],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:s}}],this.built=!0}call(t,e){return W(()=>{t=Et(t);let s;const r=this.bias==null?null:this.bias.read(),o=vb(this.activation.getClassName());if(o!=null&&this.rank===2)s=Pg(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(this.rank===1)s=HR(t,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=Pg(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=qR(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Rt("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(t){t=Vt(t);const e=[],s=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let o=0;o<s.length;++o){const i=bs(s[o],this.kernelSize[o],this.padding,this.strides[o],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[o]);e.push(i)}let r=[t[0]];return this.dataFormat==="channelsLast"?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:me(this.kernelInitializer),kernelRegularizer:ne(this.kernelRegularizer),kernelConstraint:Oe(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new F(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class du extends mi{constructor(t){super(2,t),du.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Wp(t.kernelSize,"number",1,2))throw new F(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}du.className="Conv2D";et(du);class fu extends mi{constructor(t){super(3,t),fu.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new F(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}fu.className="Conv3D";et(fu);class Iw extends du{constructor(t){if(super(t),this.inputSpec=[new _e({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new F(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Vt(t),t.length!==4)throw new F("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new F("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new _e({ndim:4,axes:{[e]:s}})],this.built=!0}call(t,e){return W(()=>{let s=Et(t);if(s.shape.length!==4)throw new F(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let i,a;this.dataFormat==="channelsFirst"?(i=2,a=3):(i=1,a=2);const u=r[i],c=r[a],l=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],f=this.strides[1],m=Ts(u,d,l,this.padding),p=Ts(c,f,h,this.padding),x=[o,m,p,this.filters];this.dataFormat!=="channelsLast"&&(s=Lt(s,[0,2,3,1]));let g=ex(s,this.kernel.read(),x,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=Lt(g,[0,3,1,2])),this.bias!=null&&(g=Is(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(t){t=Vt(t);const e=t.slice();let s,r,o;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3):(s=3,r=1,o=2);const i=this.kernelSize[0],a=this.kernelSize[1],u=this.strides[0],c=this.strides[1];return e[s]=this.filters,e[r]=Ts(e[r],u,i,this.padding),e[o]=Ts(e[o],c,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Iw.className="Conv2DTranspose";et(Iw);class $w extends fu{constructor(t){if(super(t),this.inputSpec=[new _e({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new F(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Vt(t),t.length!==5)throw new F("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new F("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new _e({ndim:5,axes:{[e]:s}})],this.built=!0}call(t,e){return W(()=>{let s=Et(t);if(s.shape.length!==5)throw new F(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let i,a,u;this.dataFormat==="channelsFirst"?(u=2,i=3,a=4):(u=1,i=2,a=3);const c=r[u],l=r[i],h=r[a],d=this.kernelSize[0],f=this.kernelSize[1],m=this.kernelSize[2],p=this.strides[0],x=this.strides[1],g=this.strides[2],b=Ts(c,p,d,this.padding),w=Ts(l,x,f,this.padding),y=Ts(h,g,m,this.padding),v=[o,b,w,y,this.filters];this.dataFormat!=="channelsLast"&&(s=Lt(s,[0,2,3,4,1]));let C=H$(s,this.kernel.read(),v,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(C=Lt(C,[0,4,1,2,3])),this.bias!==null&&(C=Is(C,this.bias.read(),this.dataFormat)),this.activation!==null&&(C=this.activation.apply(C)),C})}computeOutputShape(t){t=Vt(t);const e=t.slice();let s,r,o,i;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3,i=4):(s=4,r=1,o=2,i=3);const a=this.kernelSize[0],u=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],h=this.strides[1],d=this.strides[2];return e[s]=this.filters,e[r]=Ts(e[r],l,a,this.padding),e[o]=Ts(e[o],h,u,this.padding),e[i]=Ts(e[i],d,c,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}$w.className="Conv3DTranspose";et($w);class kw extends mi{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new F("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new F("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new F(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=de(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=fe(e.depthwiseRegularizer),this.depthwiseConstraint=Me(e.depthwiseConstraint),this.pointwiseInitializer=de(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=fe(e.pointwiseRegularizer),this.pointwiseConstraint=Me(e.pointwiseConstraint)}build(t){if(t=Vt(t),t.length<this.rank+2)throw new F(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new F(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const s=t[e],r=this.kernelSize.concat([s,this.depthMultiplier]),o=[];for(let a=0;a<this.rank;++a)o.push(1);o.push(s*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new _e({ndim:this.rank+2,axes:{[e]:s}})],this.built=!0}call(t,e){return W(()=>{t=Et(t);let s;if(this.rank===1)throw new Rt("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Lt(t,[0,2,3,1])),s=yx(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Is(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Lt(s,[0,3,1,2])),s})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=me(this.depthwiseInitializer),t.pointwiseInitializer=me(this.pointwiseInitializer),t.depthwiseRegularizer=ne(this.depthwiseRegularizer),t.pointwiseRegularizer=ne(this.pointwiseRegularizer),t.depthwiseConstraint=Oe(this.depthwiseConstraint),t.pointwiseConstraint=Oe(this.pointwiseConstraint),t}}kw.className="SeparableConv";class Sw extends kw{constructor(t){super(2,t)}}Sw.className="SeparableConv2D";et(Sw);class Xl extends mi{constructor(t){super(1,t),Xl.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Wp(t.kernelSize,"number",1,1))throw new F(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Xl.className="Conv1D";et(Xl);class Ew extends Bt{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return W(()=>{if(t=Et(t),this.dataFormat==="channelsLast"){const s=Su(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Su(s,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Su(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Su(s,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Ew.className="Cropping2D";et(Ew);class Nw extends Bt{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,ke(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,bF(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const e=t[2]==null?null:this.size[0]*t[2],s=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,s]}else{const e=t[1]==null?null:this.size[0]*t[1],s=t[2]==null?null:this.size[1]*t[2];return[t[0],e,s,t[3]]}}call(t,e){return W(()=>{let s=Et(t);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=Lt(s,[0,2,3,1]);const o=this.size[0]*r[2],i=this.size[1]*r[3],a=this.interpolation==="nearest"?Js.resizeNearestNeighbor(s,[o,i]):Js.resizeBilinear(s,[o,i]);return Lt(a,[0,3,1,2])}else{const o=this.size[0]*r[1],i=this.size[1]*r[2];return this.interpolation==="nearest"?Js.resizeNearestNeighbor(s,[o,i]):Js.resizeBilinear(s,[o,i])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}Nw.className="UpSampling2D";et(Nw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function jR(n,t,e=[1,1],s="valid",r,o){return W(()=>{r==null&&(r=vs()),ke(r);let i=nm(n,r);if(n.rank!==4)throw new F(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(t.rank!==4)throw new F(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Bf(i,t,e,s==="same"?"same":"valid","NHWC",o),r==="channelsFirst"&&(i=Lt(i,[0,3,1,2])),i})}class Aw extends Kl{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=de(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Me(t.depthwiseConstraint),this.depthwiseRegularizer=fe(t.depthwiseRegularizer)}build(t){if(t=Vt(t),t.length<4)throw new F(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new F(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const s=t[e],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return W(()=>{t=Et(t);let s=jR(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Is(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(t){t=Vt(t);const e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],r=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,o=bs(e,this.kernelSize[0],this.padding,this.strides[0]),i=bs(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],r,o,i]:[t[0],o,i,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=me(this.depthwiseInitializer),t.depthwiseRegularizer=ne(this.depthwiseRegularizer),t.depthwiseConstraint=Oe(this.depthwiseRegularizer),t}}Aw.className="DepthwiseConv2D";et(Aw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Tw(n,t,e,s){if(Array.isArray(n)){if(t!=null||e!=null)throw new F("When inputs is an array, neither initialState or constants should be provided");s!=null&&(e=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function r(o){return o==null||Array.isArray(o)?o:[o]}return t=r(t),e=r(e),{inputs:n,initialState:t,constants:e}}function Fw(n,t,e,s=!1,r,o,i=!1,a=!1){return W(()=>{const u=t.shape.length;if(u<3)throw new F(`Input should be at least 3D, but is ${u}D.`);const c=[1,0].concat(ys(2,u));if(t=Lt(t,c),o!=null)throw new Rt("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=mt(mt(r,"bool"),"float32"),r.rank===u-1&&(r=xn(r,-1)),r=Lt(r,c)),s&&(t=oo(t,0),r!=null&&(r=oo(r,0)));const l=[];let h,d=e;const f=t.shape[0],m=io(t);let p;r!=null&&(p=io(r));for(let g=0;g<f;++g){const b=m[g],w=W(()=>n(b,d));if(r==null)h=w[0],d=w[1];else{const y=W(()=>{const v=p[g],C=St(ss(v),v),D=rt(M(w[0],v),M(d[0],C)),I=d.map(($,S)=>rt(M(w[1][S],v),M($,C)));return{output:D,newStates:I}});h=y.output,d=y.newStates}a&&l.push(h)}let x;return a&&(x=Gs(l,1)),[h,x,d]})}class _r extends Bt{constructor(t){super(t);let e;if(t.cell==null)throw new F("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new om({cells:t.cell}):e=t.cell,e.stateSize==null)throw new F("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new _e({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return ys(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){hd(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const s=e[0];let r;if(this.returnSequences?r=[t[0],t[1],s]:r=[t[0],s],this.returnState){const o=[];for(const i of e)o.push([t[0],i]);return[r].concat(o)}else return r}computeMask(t,e){return W(()=>{Array.isArray(e)&&(e=e[0]);const s=this.returnSequences?e:null;if(this.returnState){const r=this.states.map(o=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let s=0;s<t;++s)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new Rt("Constants support is not implemented in RNN yet.");hd(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,s=t.slice(2);this.inputSpec[0]=new _e({shape:[e,null,...s]});const r=[t[0]].concat(t.slice(2));this.cell.build(r);let o;if(Array.isArray(this.cell.stateSize)?o=this.cell.stateSize:o=[this.cell.stateSize],this.stateSpec!=null){if(!jt(this.stateSpec.map(i=>i.shape[i.shape.length-1]),o))throw new F(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map(i=>new _e({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){W(()=>{if(!this.stateful)throw new Ns("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new F("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Fe([s,r])):this.states_=[Fe([s,this.cell.stateSize])];else if(t==null)_t(this.states_),this.keptStates!=null&&(_t(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Fe([s,r])):this.states_[0]=Fe([s,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new F(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):_t(this.states_);for(let r=0;r<this.states_.length;++r){const o=t[r],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,a=[s,i];if(!jt(o.shape,a))throw new F(`State ${r} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${o.shape}`);this.states_[r]=o}}this.states_=this.states_.map(r=>Ms(r.clone()))})}apply(t,e){let s=e==null?null:e.initialState,r=e==null?null:e.constants;e==null&&(e={});const o=Tw(t,s,r,this.numConstants);t=o.inputs,s=o.initialState,r=o.constants;let i=[],a=[];if(s!=null){e.initialState=s,i=i.concat(s),this.stateSpec=[];for(const c of s)this.stateSpec.push(new _e({shape:c.shape}));a=a.concat(this.stateSpec)}if(r!=null&&(e.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof Hs){const c=[t].concat(i),l=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=l;const d=super.apply(c,e);return this.inputSpec=h,d}else return super.apply(t,e)}call(t,e){return W(()=>{const s=e==null?null:e.mask,r=e==null?null:e.training;let o=e==null?null:e.initialState;t=Et(t),o==null&&(this.stateful?o=this.states_:o=this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==i)throw new F(`RNN Layer has ${i} state(s) but was passed ${o.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},c=Fw((m,p)=>{const x=this.cell.call([m].concat(p),a);return[x[0],x.slice(1)]},t,o,this.goBackwards,s,null,this.unroll,this.returnSequences),l=c[0],h=c[1],d=c[2];this.stateful&&this.resetStates(d,r);const f=this.returnSequences?h:l;return this.returnState?[f].concat(d):f})}getInitialState(t){return W(()=>{let e=Fe(t.shape);return e=Ct(e,[1,2]),e=au(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?cd(e,[1,s]):e):this.cell.stateSize>1?[cd(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===_r.className&&(e.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),t),e)}static fromConfig(t,e,s={}){const r=e.cell,o=zs(r,s);return new t(Object.assign(e,{cell:o}))}}_r.className="RNN";et(_r);class Yl extends Bt{}class sm extends Yl{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Ue(this.units,"units"),this.activation=vr(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=de(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=de(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=de(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=fe(t.kernelRegularizer),this.recurrentRegularizer=fe(t.recurrentRegularizer),this.biasRegularizer=fe(t.biasRegularizer),this.kernelConstraint=Me(t.kernelConstraint),this.recurrentConstraint=Me(t.recurrentConstraint),this.biasConstraint=Me(t.biasConstraint),this.dropout=Jo([1,wr([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Jo([1,wr([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Vt(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return W(()=>{if(t=t,t.length!==2)throw new F(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let s=t[1];t=t[0];const r=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Cr({ones:()=>ss(t),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Cr({ones:()=>ss(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let o;const i=this.dropoutMask,a=this.recurrentDropoutMask;i!=null?o=Ps(M(t,i),this.kernel.read()):o=Ps(t,this.kernel.read()),this.bias!=null&&(o=Is(o,this.bias.read())),a!=null&&(s=M(s,a));let u=rt(o,Ps(s,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:yr(this.activation),useBias:this.useBias,kernelInitializer:me(this.kernelInitializer),recurrentInitializer:me(this.recurrentInitializer),biasInitializer:me(this.biasInitializer),kernelRegularizer:ne(this.kernelRegularizer),recurrentRegularizer:ne(this.recurrentRegularizer),biasRegularizer:ne(this.biasRegularizer),activityRegularizer:ne(this.activityRegularizer),kernelConstraint:Oe(this.kernelConstraint),recurrentConstraint:Oe(this.recurrentConstraint),biasConstraint:Oe(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}sm.className="SimpleRNNCell";et(sm);class Rw extends _r{constructor(t){t.cell=new sm(t),super(t)}call(t,e){return W(()=>{this.cell.dropoutMask!=null&&(_t(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_t(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,r=e==null?null:e.training,o=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:o})})}static fromConfig(t,e){return new t(e)}}Rw.className="SimpleRNN";et(Rw);class rm extends Yl{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new F("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Ue(this.units,"units"),this.activation=vr(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=vr(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=de(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=de(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=de(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=fe(t.kernelRegularizer),this.recurrentRegularizer=fe(t.recurrentRegularizer),this.biasRegularizer=fe(t.biasRegularizer),this.kernelConstraint=Me(t.kernelConstraint),this.recurrentConstraint=Me(t.recurrentConstraint),this.biasConstraint=Me(t.biasConstraint),this.dropout=Jo([1,wr([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Jo([1,wr([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Vt(t);const e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return W(()=>{if(t=t,t.length!==2)throw new F(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training==null?!1:e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Cr({ones:()=>ss(t),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Cr({ones:()=>ss(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=this.recurrentDropoutMask;let a,u,c;0<this.dropout&&this.dropout<1&&(t=M(t,o[0]));let l=Ps(t,this.kernel.read());this.useBias&&(l=Is(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=M(r,i[0]));const h=this.recurrentKernel.read(),[d,f]=Wn(h,[2*this.units,this.units],h.rank-1),m=Ps(r,d),[p,x,g]=Wn(l,3,l.rank-1),[b,w]=Wn(m,2,m.rank-1);a=this.recurrentActivation.apply(rt(p,b)),u=this.recurrentActivation.apply(rt(x,w));const y=Ps(M(u,r),f);c=this.activation.apply(rt(g,y));const v=rt(M(a,r),M(rt(1,De(a)),c));return[v,v]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:yr(this.activation),recurrentActivation:yr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:me(this.kernelInitializer),recurrentInitializer:me(this.recurrentInitializer),biasInitializer:me(this.biasInitializer),kernelRegularizer:ne(this.kernelRegularizer),recurrentRegularizer:ne(this.recurrentRegularizer),biasRegularizer:ne(this.biasRegularizer),activityRegularizer:ne(this.activityRegularizer),kernelConstraint:Oe(this.kernelConstraint),recurrentConstraint:Oe(this.recurrentConstraint),biasConstraint:Oe(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}rm.className="GRUCell";et(rm);class _w extends _r{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new rm(t),super(t)}call(t,e){return W(()=>{this.cell.dropoutMask!=null&&(_t(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_t(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,r=e==null?null:e.training,o=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:o})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}_w.className="GRU";et(_w);class Zl extends Yl{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Ue(this.units,"units"),this.activation=vr(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=vr(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=de(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=de(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=de(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=fe(t.kernelRegularizer),this.recurrentRegularizer=fe(t.recurrentRegularizer),this.biasRegularizer=fe(t.biasRegularizer),this.kernelConstraint=Me(t.kernelConstraint),this.recurrentConstraint=Me(t.recurrentConstraint),this.biasConstraint=Me(t.biasConstraint),this.dropout=Jo([1,wr([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Jo([1,wr([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=Vt(t);const s=t[t.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,i=this.units;r=new(e=class extends os{apply(u,c){const l=o.apply([i]),h=new Gp().apply([i]),d=o.apply([i*2]);return Cg(Cg(l,h),d)}},e.className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return W(()=>{const s=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new F(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const o=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Cr({ones:()=>ss(t),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Cr({ones:()=>ss(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let u,c,l,h;0<this.dropout&&this.dropout<1&&(t=M(t,i[0]));let d=Ps(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=M(r,a[0])),d=rt(d,Ps(r,this.recurrentKernel.read())),this.useBias&&(d=Is(d,this.bias.read()));const[f,m,p,x]=Wn(d,4,d.rank-1);u=this.recurrentActivation.apply(f),c=this.recurrentActivation.apply(m),l=rt(M(c,o),M(u,this.activation.apply(p))),h=this.recurrentActivation.apply(x);const g=M(h,this.activation.apply(l));return[g,g,l]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:yr(this.activation),recurrentActivation:yr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:me(this.kernelInitializer),recurrentInitializer:me(this.recurrentInitializer),biasInitializer:me(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ne(this.kernelRegularizer),recurrentRegularizer:ne(this.recurrentRegularizer),biasRegularizer:ne(this.biasRegularizer),activityRegularizer:ne(this.activityRegularizer),kernelConstraint:Oe(this.kernelConstraint),recurrentConstraint:Oe(this.recurrentConstraint),biasConstraint:Oe(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}Zl.className="LSTMCell";et(Zl);class Ow extends _r{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Zl(t),super(t)}call(t,e){return W(()=>{this.cell.dropoutMask!=null&&(_t(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_t(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,r=e==null?null:e.training,o=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:o})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}Ow.className="LSTM";et(Ow);class om extends Yl{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return W(()=>{t=t;let s=t.slice(1);const r=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?r.push(s.splice(0,a.stateSize.length)):r.push(s.splice(0,1));r.reverse();const o=[];let i;for(let a=0;a<this.cells.length;++a){const u=this.cells[a];s=r[a],a===0?i=[t[0]].concat(s):i=[i[0]].concat(s),i=u.call(i,e),o.push(i.slice(1))}s=[];for(const a of o.slice().reverse())s.push(...a);return[i[0]].concat(s)})}build(t){hd(t)&&(t=t[0]),t=t;let e;this.cells.forEach((s,r)=>{Xr(`RNNCell_${r}`,()=>{s.build(t),Array.isArray(s.stateSize)?e=s.stateSize[0]:e=s.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e=o=>({className:o.getClassName(),config:o.getConfig()}),r={cells:this.cells.map(e)};return Object.assign(Object.assign({},t),r)}static fromConfig(t,e,s={}){const r=[];for(const o of e.cells)r.push(zs(o,s));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.cells)e.push(...s.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return dd(t)}setWeights(t){const e=[];for(const s of this.cells){const r=s.weights.length,o=t.splice(r);for(let i=0;i<s.weights.length;++i)e.push([s.weights[i],o[i]])}Zp(e)}}om.className="StackedRNNCells";et(om);function Cr(n){const{ones:t,rate:e,training:s=!1,count:r=1,dropoutFunc:o}=n,i=()=>o!=null?o(t(),e):Eb(t(),e),a=()=>cu(i,t,s);return!r||r<=1?Ms(a().clone()):Array(r).fill(void 0).map(a).map(c=>Ms(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var KR=globalThis&&globalThis.__rest||function(n,t){var e={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&t.indexOf(s)<0&&(e[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(e[s[r]]=n[s[r]]);return e};class Mw extends _r{constructor(t){if(t.unroll)throw new Rt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Rt("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new _e({ndim:5})]}call(t,e){return W(()=>{if(this.cell.dropoutMask!=null&&(_t(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_t(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new F("ConvRNN2D cell does not support constants");const s=e==null?null:e.mask,r=e==null?null:e.training,o=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:o})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return W(()=>{const{stateSize:e}=this.cell,s=t.shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)],i=Fe(o);return Array.isArray(e)?Array(e.length).fill(i):[i]})}resetStates(t,e=!1){W(()=>{if(!this.stateful)throw new Ns("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)];if(s[0]==null)throw new F("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Fe(o)):this.states_=[Fe(o)];else if(t==null)_t(this.states_),this.keptStates!=null&&(_t(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Fe(o)):this.states_[0]=Fe(o);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new F(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):_t(this.states_);for(let a=0;a<this.states_.length;++a){const u=t[a],c=o;if(!jt(u.shape,c))throw new F(`State ${a} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${u.shape}`);this.states_[a]=u}}this.states_=this.states_.map(a=>Ms(a.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:s,kernelSize:r,padding:o,strides:i,dilationRate:a}=this.cell,u=e==="channelsFirst",c=t[u?3:2],l=t[u?4:3],h=bs(c,r[0],o,i[0],a[0]),d=bs(l,r[1],o,i[1],a[1]);return[...t.slice(0,2),...u?[s,h,d]:[h,d,s]]}}Mw.className="ConvRNN2D";class im extends Zl{constructor(t){const{filters:e,kernelSize:s,strides:r,padding:o,dataFormat:i,dilationRate:a}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,Ue(this.filters,"filters"),this.kernelSize=Uo(s,2,"kernelSize"),this.kernelSize.forEach(u=>Ue(u,"kernelSize")),this.strides=Uo(r||1,2,"strides"),this.strides.forEach(u=>Ue(u,"strides")),this.padding=o||"valid",Hn(this.padding),this.dataFormat=i||"channelsLast",ke(this.dataFormat),this.dilationRate=Uo(a||1,2,"dilationRate"),this.dilationRate.forEach(u=>Ue(u,"dilationRate"))}build(t){var e;t=Vt(t);const s=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[s]==null)throw new F(`The channel dimension of the input should be defined. Found ${t[s]}`);const r=t[s],o=4,i=this.kernelSize.concat([r,this.filters*o]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){const c=this.biasInitializer,l=this.filters;u=new(e=class extends os{apply(d,f){const m=c.apply([l]),p=Fr([l]),x=c.apply([l*2]);return Up([m,p,x])}},e.className="CustomInit",e)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return W(()=>{if(t.length!==3)throw new F(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training||!1,r=t[0],o=t[1],i=t[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Cr({ones:()=>ss(r),rate:this.dropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const u=this.dropoutMask,c=(J,nt,at)=>!nt||!nt[at]?J:M(nt[at],J);let l=c(r,u,0),h=c(r,u,1),d=c(r,u,2),f=c(r,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Cr({ones:()=>ss(o),rate:this.recurrentDropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const m=this.recurrentDropoutMask;let p=c(o,m,0),x=c(o,m,1),g=c(o,m,2),b=c(o,m,3);const w=3,[y,v,C,D]=Wn(this.kernel.read(),a,w),[I,$,S,E]=this.useBias?Wn(this.bias.read(),a):[null,null,null,null];l=this.inputConv(l,y,I,this.padding),h=this.inputConv(h,v,$,this.padding),d=this.inputConv(d,C,S,this.padding),f=this.inputConv(f,D,E,this.padding);const[N,R,L,O]=Wn(this.recurrentKernel.read(),a,w);p=this.recurrentConv(p,N),x=this.recurrentConv(x,R),g=this.recurrentConv(g,L),b=this.recurrentConv(b,O);const _=this.recurrentActivation.apply(rt(l,p)),j=this.recurrentActivation.apply(rt(h,x)),G=rt(M(j,i),M(_,this.activation.apply(rt(d,g)))),q=M(this.recurrentActivation.apply(rt(f,b)),this.activation.apply(G));return[q,q,G]})}getConfig(){const t=super.getConfig(),e=KR(t,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},e),s)}inputConv(t,e,s,r){const o=ro(t,e,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Is(o,s,this.dataFormat):o}recurrentConv(t,e){return ro(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}im.className="ConvLSTM2DCell";et(im);class Bw extends Mw{constructor(t){const e=new im(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}Bw.className="ConvLSTM2D";et(Bw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class am extends Bt{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const e=t.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?e[r]:this.noiseShape[r]);return s}call(t,e){return W(()=>{this.invokeCallHook(t,e);const s=Et(t);if(0<this.rate&&this.rate<1){const r=e.training==null?!1:e.training,o=this.getNoiseShape(s);return cu(()=>Eb(s,this.rate,o,this.seed),()=>s,r)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}am.className="Dropout";et(am);class Lw extends am{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Lw.className="SpatialDropout1D";et(Lw);class um extends Bt{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Ue(this.units,"units"),this.activation=vr(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=de(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=de(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Me(t.kernelConstraint),this.biasConstraint=Me(t.biasConstraint),this.kernelRegularizer=fe(t.kernelRegularizer),this.biasRegularizer=fe(t.biasRegularizer),this.activityRegularizer=fe(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Vt(t);const e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=Vt(t);const e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return W(()=>{this.invokeCallHook(t,e);const s=Et(t),r=vb(this.activation.getClassName());let o;return r!=null?o=Ps(s,this.kernel.read(),r,this.bias?this.bias.read():null):(o=Ps(s,this.kernel.read()),this.bias!=null&&(o=Is(o,this.bias.read())),this.activation!=null&&(o=this.activation.apply(o))),o})}getConfig(){const t={units:this.units,activation:yr(this.activation),useBias:this.useBias,kernelInitializer:me(this.kernelInitializer),biasInitializer:me(this.biasInitializer),kernelRegularizer:ne(this.kernelRegularizer),biasRegularizer:ne(this.biasRegularizer),activityRegularizer:ne(this.activityRegularizer),kernelConstraint:Oe(this.kernelConstraint),biasConstraint:Oe(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}um.className="Dense";et(um);class Pw extends Bt{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Vt(t);for(const e of t.slice(1))if(e==null)throw new F(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],gr(t,1)]}call(t,e){return W(()=>{this.invokeCallHook(t,e);let s=Et(t);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let o=2;o<s.rank;++o)r.push(o);r.push(1),s=Lt(s,r)}return IF(s)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Pw.className="Flatten";et(Pw);class zw extends Bt{constructor(t){super(t),this.supportsMasking=!0,this.activation=vr(t.activation)}call(t,e){return W(()=>{this.invokeCallHook(t,e);const s=Et(t);return this.activation.apply(s)})}getConfig(){const t={activation:yr(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}zw.className="Activation";et(zw);class Vw extends Bt{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return W(()=>(t=Et(t),CF(t,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Vw.className="RepeatVector";et(Vw);class Ww extends Bt{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){const s="Total size of new array must be unchanged.",r=e.slice();let o=1,i=null;for(let u=0;u<r.length;++u){const c=r[u];if(this.isUnknown(c))if(i===null)i=u;else throw new F("Can only specifiy one unknown dimension.");else o*=c}const a=gr(t);if(i!==null){if(o===0||a%o!==0)throw new F(s);r[i]=a/o}else if(a!==o)throw new F(s);return r}computeOutputShape(t){let e=!1;for(let s=0;s<t.length;++s)if(this.isUnknown(t[s])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return W(()=>{this.invokeCallHook(t,e);const s=Et(t),r=s.shape,o=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return z(s,o)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Ww.className="Reshape";et(Ww);class Uw extends Bt{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=ys(1,t.dims.length+1);if(!jt(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new _e({ndim:this.dims.length+1})]}computeOutputShape(t){t=Vt(t);const e=t.slice();return this.dims.forEach((s,r)=>{e[r+1]=t[s]}),e}call(t,e){return Lt(Et(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Uw.className="Permute";et(Uw);class Gw extends Bt{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const s=Et(t),r=-1;return nd(Zu(s,this.maskValue),r)}call(t,e){return W(()=>{this.invokeCallHook(t,e);const s=Et(t),r=-1,o=!0,i=nd(Zu(s,this.maskValue),r,o);return M(s,mt(i,s.dtype))})}}Gw.className="Masking";et(Gw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Hw extends Bt{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Xt(t.inputLength))}this.inputDim=t.inputDim,Ue(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Ue(this.outputDim,"outputDim"),this.embeddingsInitializer=de(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=fe(t.embeddingsRegularizer),this.activityRegularizer=fe(t.activityRegularizer),this.embeddingsConstraint=Me(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return W(()=>this.maskZero?(t=Et(t),Zu(t,Pt(t))):null)}computeOutputShape(t){if(t=Vt(t),this.inputLength==null)return[...t,this.outputDim];const e=Xt(this.inputLength);if(e.length!==t.length-1)throw new F(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let s=0;for(let r=0;r<e.length;++r){const o=e[r],i=t[r+1];if(o!=null&&i!=null&&o!==i)throw new F(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);o==null&&(e[s]=i),s++}}return[t[0],...e,this.outputDim]}call(t,e){return W(()=>{this.invokeCallHook(t,e);let s=Et(t);s.dtype!=="int32"&&(s=Ls(s,"int32"));const r=Sb(this.embeddings.read(),z(s,[s.size]));return z(r,Vt(this.computeOutputShape(s.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:me(this.embeddingsInitializer),embeddingsRegularizer:ne(this.embeddingsRegularizer),activityRegularizer:ne(this.activityRegularizer),embeddingsConstraint:Oe(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Hw.className="Embedding";et(Hw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class vo extends Bt{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Rt}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;const s=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const o=t[t.length-e.length+r],i=e[r];if(o==null||i==null||o<0||i<0)s.push(null);else if(o===1)s.push(i);else if(i===1)s.push(o);else{if(o!==i)throw new F("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));s.push(o)}}return s}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Vt(t)]),t=t,t.length<2)throw new F(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const o of t)o!=null&&o[0]!==null&&e.push(o[0]);if(e=mr(e),e.length>1)throw new F(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let s=t[0]==null?null:t[0].slice(1);for(let o=1;o<t.length;++o){const i=t[o]==null?null:t[o].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const r=t.map(o=>o.length);t.indexOf(null)===-1&&mr(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return W(()=>{if(t=t,this.reshapeRequired){const s=[],r=t.map(o=>o.rank);if(r.indexOf(null)===-1){const o=wr(r);for(let i of t){const a=i.rank;for(let u=0;u<o-a;++u)i=au(i,1);s.push(i)}return this.mergeFunction(s)}else{let o=!1;for(const u of t){const c=u.rank;if(c==null){const l=u.shape,h=l[0],d=l.slice(1).concat([h]);let f=z(u,[h].concat(gr(l.slice(1))));f=Lt(f,[1,0]),f=z(f,d),s.push(f),o=!0}else if(c>1){const l=ys(1,c).concat([0]);s.push(Lt(u,l)),o=!0}else s.push(u)}let i=this.mergeFunction(s);const a=i.rank;if(o){if(a==null){const u=i.shape,c=u.length,l=u[c-1],h=[l].concat(u.slice(0,u.length-1));i=z(Lt(z(i,[-1,l]),[1,0]),h)}else if(a>1){const u=[a-1].concat(ys(0,a-1));i=Lt(i,u)}}return i}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let r=1;r<t.length;++r){const o=t[r]==null?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,o)}let s=[];for(const r of t)r!=null&&r[0]!==null&&s.push(r[0]);return s=mr(s),s.length===1?e=s.concat(e):e=[null].concat(e),e}computeMask(t,e){return W(()=>{if(e==null)return null;if(!Array.isArray(e))throw new F("`mask` should be an Array");if(!Array.isArray(t))throw new F("`inputs` should be an Array");if(e.length!==t.length)throw new F(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(r=>r==null))return null;e=e.map(r=>r==null?r:xn(r,0));let s=e[0];for(let r=1;r<e.length-1;++r)s=tr(s,e[r]);return s})}}class qw extends vo{constructor(t){super(t)}mergeFunction(t){return W(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=rt(e,t[s]);return e})}}qw.className="Add";et(qw);class jw extends vo{constructor(t){super(t)}mergeFunction(t){return W(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=M(e,t[s]);return e})}}jw.className="Multiply";et(jw);class Kw extends vo{constructor(t){super(t)}mergeFunction(t){return W(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=rt(e,t[s]);return M(1/t.length,e)})}}Kw.className="Average";et(Kw);class Xw extends vo{constructor(t){super(t)}mergeFunction(t){return W(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=Tr(e,t[s]);return e})}}Xw.className="Maximum";et(Xw);class Yw extends vo{constructor(t){super(t)}mergeFunction(t){return W(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=Hi(e,t[s]);return e})}}Yw.className="Minimum";et(Yw);class Zw extends vo{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new F("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const r of t)if(r!=null){e=!1;break}if(e)return;const s=[];for(let r=0;r<t.length;++r){const o=t[r].slice();o.splice(this.axis,1);let i=!1;for(const a of s)if(jt(a,o)){i=!0;break}i||s.push(o)}if(s.length>1)throw new F("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return W(()=>Up(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new F("A `Concatenate` layer should be called on a list of inputs.");const e=t,s=e[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const o of e.slice(1)){if(s[r]==null||o[r]==null){s[r]=null;break}s[r]+=o[r]}return s}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new F("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new F("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new F(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return W(()=>{let s=!0;if(e.forEach(i=>{if(i!=null){s=!1;return}}),s)return null;const r=[];for(let i=0;i<t.length;++i)e[i]==null?r.push(mt(ss(t[i]),"bool")):e[i].rank<t[i].rank?r.push(xn(e[i],-1)):r.push(e[i]);const o=wn(r,this.axis);return Q1(o,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}Zw.className="Concatenate";et(Zw);function Ti(n,t){for(;n<0;)n+=t;return n}function XR(n,t,e){if(n.shape.length>3||t.shape.length>3)throw new Rt("batchDot is not implemented for tensors of 4D or higher rank yet");if(k(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),k(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),n.dtype==="complex64"||t.dtype==="complex64")throw new Rt("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=t.shape.length;e==null&&(e=[s-1,r-2]);const o=e;return W(()=>{let i;if(s>r){i=s-r;const u=[];for(let c=0;c<i;++c)u.push(1);t=z(t,t.shape.concat(u))}else if(r>s){i=r-s;const u=[];for(let c=0;c<i;++c)u.push(1);n=z(n,n.shape.concat(u))}else i=0;let a;if(n.shape.length===2&&t.shape.length===2)o[0]===o[1]?a=Ct(M(n,t),o[0]):a=Ct(M(Lt(n,[1,0]),t),o[1]);else{const u=o[0]!==n.shape.length-1,c=o[1]===t.shape.length-1;a=Ht(n,t,u,c)}if(i>0){let u;s>r?u=s+r-3:u=s-1;const c=[];for(let l=u;l<u+i;++l)c.push(l);a=eu(a,c)}return a.shape.length===1&&(a=xn(a,1)),a})}class Jw extends vo{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){k(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],s=t[1];if(e.length>3||s.length>3)throw new Rt("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,s);if(e[r[0]]!==s[r[1]])throw new F(`Dimension incompatibility: ${e[r[0]]} !== ${s[r[1]]}`)}mergeFunction(t){if(t.length!==2)throw new F(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],s=t[1],r;return Array.isArray(this.axes)?r=this.axes.map((o,i)=>Ti(o,t[i].shape.length)):r=[Ti(this.axes,e.shape.length),Ti(this.axes,s.shape.length)],this.normalize&&(e=rc(e,r[0]),s=rc(s,r[1])),XR(e,s,r)}interpretAxes(t,e){let s;return Array.isArray(this.axes)?s=this.axes:s=[Ti(this.axes,t.length),Ti(this.axes,e.length)],s}computeOutputShape(t){k(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),s=t[1].slice();if(e.length>3||s.length>3)throw new Rt("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,s);e.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const o=e.concat(s);return o.length===1&&o.push(1),o}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}Jw.className="Dot";et(Jw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Qw extends Bt{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return W(()=>{this.invokeCallHook(t,e);const s=Et(t);return cu(()=>rt(Gl(s.shape,0,this.stddev),s),()=>s,e.training||!1)})}}Qw.className="GaussianNoise";et(Qw);class ty extends Bt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return W(()=>{this.invokeCallHook(t,e);const s=Et(t);return this.rate>0&&this.rate<1?cu(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return M(s,Gl(s.shape,1,o))},()=>s,e.training||!1):s})}}ty.className="GaussianDropout";et(ty);class ey extends Bt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Et(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return W(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(t);return cu(()=>{const o=Et(t),i=1.6732632423543772,a=1.0507009873554805,u=-i*a;let c=go(tu(s),this.rate);c=Ls(c,"float32");const l=((1-this.rate)*(1+this.rate*u**2))**-.5,h=-l*u*this.rate,d=rt(M(o,c),M(rt(c,-1),u));return rt(M(d,l),h)},()=>Et(t),e.training||!1)}return t})}}ey.className="AlphaDropout";et(ey);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Xi(n,t,e,s,r,o=.001){let i;if(n.rank===2)i=b$(n,t,e,s,r,o);else if(n.rank===3)i=y$(n,t,e,s,r,o);else if(n.rank===4)i=C$(n,t,e,s,r,o);else throw new Rt(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return i}function YR(n,t,e,s,r=.001){return W(()=>{const o=Gf(n,s),i=o.mean,a=o.variance;return[Xi(n,i,a,e,t,r),i,a]})}function ZR(n,t,e,s,r=.001){return W(()=>{const o=Gf(n,s),i=o.mean,a=o.variance,u=[];for(const m of ys(0,n.rank))s.indexOf(m)!==-1?u.push(1):u.push(n.shape[m]);const c=z(i,u),l=z(a,u),h=t==null?null:z(t,u),d=e==null?null:z(e,u);return[Xi(n,c,l,d,h,r),i,a]})}function JR(n,t,e,s,r=.001){return jt(s.slice().sort(),ys(0,n.rank-1))?YR(n,t,e,s,r):ZR(n,t,e,s,r)}class ny extends Bt{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=de(t.betaInitializer||"zeros"),this.gammaInitializer=de(t.gammaInitializer||"ones"),this.movingMeanInitializer=de(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=de(t.movingVarianceInitializer||"ones"),this.betaConstraint=Me(t.betaConstraint),this.gammaConstraint=Me(t.gammaConstraint),this.betaRegularizer=fe(t.betaRegularizer),this.gammaRegularizer=fe(t.gammaRegularizer)}build(t){t=Vt(t);const e=this.axis>=0?this.axis:this.axis+t.length,s=t[e];if(s==null)throw new F(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new _e({ndim:t.length,axes:{[e]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return W(()=>{const s=e.training==null?!1:e.training,r=Et(t),o=r.shape,i=o.length,a=ys(0,i),u=this.axis>=0?this.axis:this.axis+i;a.splice(u,1);const c=ao(1,i);c[u]=o[u];const l=a.slice();l.sort();const h=!jt(l,ys(0,i).slice(0,i-1)),d=()=>{if(h){const b=z(this.movingMean.read(),c),w=z(this.movingVariance.read(),c),y=this.center?z(this.beta.read(),c):null,v=this.scale?z(this.gamma.read(),c):null;return Xi(r,b,w,y,v,this.epsilon)}else return Xi(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[f,m,p]=JR(r,this.gamma.read(),this.beta.read(),a,this.epsilon),x=(b,w,y)=>{W(()=>{const v=1-y,C=b.read(),D=M(St(C,w),v);b.write(St(C,D))})};return(()=>{x(this.movingMean,m,this.momentum),x(this.movingVariance,p,this.momentum)})(),f})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:me(this.betaInitializer),gammaInitializer:me(this.gammaInitializer),movingMeanInitializer:me(this.movingMeanInitializer),movingVarianceInitializer:me(this.movingVarianceInitializer),betaRegularizer:ne(this.betaRegularizer),gammaRegularizer:ne(this.gammaRegularizer),betaConstraint:Oe(this.betaConstraint),gammaConstraint:Oe(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}ny.className="BatchNormalization";et(ny);class sy extends Bt{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=de(t.betaInitializer||"zeros"),this.gammaInitializer=de(t.gammaInitializer||"ones"),this.betaRegularizer=fe(t.betaRegularizer),this.gammaRegularizer=fe(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Vt(t);const e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=e);for(const o of this.axis)if(o<0||o>=e)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==mr(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(o=>t[o]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(t,e){const s=Et(t),r=s.shape,o=r.length;return W(()=>{let{mean:a,variance:u}=Gf(s,this.axis,!0);const c=ao(1,o);for(const p of this.axis)c[p]=r[p];const l=p=>p!=null&&p.shape.length!==o?z(p,c):p;let h=this.scale?l(this.gamma.read()):null,d=this.center?l(this.beta.read()):null;const f=[],m=[];for(let p=0;p<o;++p)this.axis.indexOf(p)!==-1?(f.push(r[p]),m.push(1)):(f.push(1),m.push(r[p]));return a=ps(a,f),u=ps(u,f),h!=null&&(h=ps(h,m)),d!=null&&(d=ps(d,m)),Xi(s,a,u,d,h,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:me(this.betaInitializer),gammaInitializer:me(this.gammaInitializer),betaRegularizer:ne(this.betaRegularizer),gammaRegularizer:ne(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}sy.className="LayerNormalization";et(sy);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function QR(n,t,e){return W(()=>{if(n.rank!==4)throw new F(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new F("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=vs()),e!=="channelsLast"&&e!=="channelsFirst")throw new F(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return e==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],Hf(n,s)})}class ry extends Bt{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?vs():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new F(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,s;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],s=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new F(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new F(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);s=t.padding[1]}this.padding=[e,s]}this.inputSpec=[new _e({ndim:4})]}computeOutputShape(t){t=Vt(t);let e,s;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?s=t[3]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],t[1],e,s]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?s=t[2]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],e,s,t[3]])}call(t,e){return W(()=>QR(Et(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}ry.className="ZeroPadding2D";et(ry);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Jl(n,t,e,s,r,o){return W(()=>{ke(r),Db(o),Hn(s),e==null&&(e=[1,1]),s==null&&(s="valid"),r==null&&(r=vs()),o==null&&(o="max"),n=nm(n,r);let i;const a=s==="same"?"same":"valid";return o==="max"?i=Uf(n,t,e,a):i=Ff(n,t,e,a),r==="channelsFirst"&&(i=Lt(i,[0,3,1,2])),i})}function oy(n,t,e,s,r,o){return W(()=>{ke(r),Db(o),Hn(s),e==null&&(e=[1,1,1]),s==null&&(s="valid"),r==null&&(r=vs()),o==null&&(o="max"),n=Dw(n,r);let i;const a=s==="same"?"same":"valid";return o==="max"?i=aS(n,t,e,a):i=u$(n,t,e,a),r==="channelsFirst"&&(i=Lt(i,[0,4,1,2,3])),i})}class iy extends Bt{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new F(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(Ue(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new F(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);Ue(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,Hn(this.padding),this.inputSpec=[new _e({ndim:3})]}computeOutputShape(t){t=Vt(t);const e=bs(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return W(()=>{this.invokeCallHook(t,e),t=au(Et(t),2);const s=this.poolingFunction(Et(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return eu(s,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class ay extends iy{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return ke(o),Hn(r),Jl(t,e,s,r,o,"max")}}ay.className="MaxPooling1D";et(ay);class uy extends iy{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return ke(o),Hn(r),Jl(t,e,s,r,o,"avg")}}uy.className="AveragePooling1D";et(uy);class cy extends Bt{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new F(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Ue(this.poolSize,"poolSize"),Ue(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,ke(this.dataFormat),Hn(this.padding),this.inputSpec=[new _e({ndim:4})]}computeOutputShape(t){t=Vt(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=bs(e,this.poolSize[0],this.padding,this.strides[0]),s=bs(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s]:[t[0],e,s,t[3]]}call(t,e){return W(()=>(this.invokeCallHook(t,e),this.poolingFunction(Et(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class ly extends cy{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return ke(o),Hn(r),Jl(t,e,s,r,o,"max")}}ly.className="MaxPooling2D";et(ly);class hy extends cy{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return ke(o),Hn(r),Jl(t,e,s,r,o,"avg")}}hy.className="AveragePooling2D";et(hy);class dy extends Bt{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new F(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Ue(this.poolSize,"poolSize"),Ue(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,ke(this.dataFormat),Hn(this.padding),this.inputSpec=[new _e({ndim:5})]}computeOutputShape(t){t=Vt(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],r=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=bs(e,this.poolSize[0],this.padding,this.strides[0]),s=bs(s,this.poolSize[1],this.padding,this.strides[1]),r=bs(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s,r]:[t[0],e,s,r,t[4]]}call(t,e){return W(()=>(this.invokeCallHook(t,e),this.poolingFunction(Et(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class fy extends dy{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return ke(o),Hn(r),oy(t,e,s,r,o,"max")}}fy.className="MaxPooling3D";et(fy);class py extends dy{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return ke(o),Hn(r),oy(t,e,s,r,o,"avg")}}py.className="AveragePooling3D";et(py);class my extends Bt{constructor(t){super(t),this.inputSpec=[new _e({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Rt}}class gy extends my{constructor(t){super(t||{})}call(t,e){return W(()=>{const s=Et(t);return Ee(s,1)})}}gy.className="GlobalAveragePooling1D";et(gy);class xy extends my{constructor(t){super(t||{})}call(t,e){return W(()=>{const s=Et(t);return xs(s,1)})}}xy.className="GlobalMaxPooling1D";et(xy);class by extends Bt{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,ke(this.dataFormat),this.inputSpec=[new _e({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Rt}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class wy extends by{call(t,e){return W(()=>{const s=Et(t);return this.dataFormat==="channelsLast"?Ee(s,[1,2]):Ee(s,[2,3])})}}wy.className="GlobalAveragePooling2D";et(wy);class yy extends by{call(t,e){return W(()=>{const s=Et(t);return this.dataFormat==="channelsLast"?xs(s,[1,2]):xs(s,[2,3])})}}yy.className="GlobalMaxPooling2D";et(yy);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class vy extends Bt{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,s={}){const r=e.layer,o=zs(r,s);delete e.layer;const i={layer:o};return Object.assign(i,e),new t(i)}}class Cy extends vy{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=Vt(t),t.length<3)throw new F(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Vt(t);const e=[t[0]].concat(t.slice(2)),s=this.layer.computeOutputShape(e),r=t[1];return[s[0],r].concat(s.slice(1))}call(t,e){return W(()=>(t=Et(t),Fw((i,a)=>[Et(this.layer.call(i,e)),[]],t,[],!1,null,null,!1,!0)[1]))}}Cy.className="TimeDistributed";et(Cy);function t_(n){yo(xF,"BidirectionalMergeMode",n)}const e_="concat";class Dy extends vy{constructor(t){super(t);const e=t.layer.getConfig(),s={};s.className=t.layer.getClassName(),s.config=e,this.forwardLayer=zs(s),e.goBackwards=e.goBackwards!==!0;const r={};if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=zs(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?e_:t.mergeMode,t_(this.mergeMode),t.weights)throw new Rt("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,s=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,s)),this.backwardLayer.setWeights(t.slice(s))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let s,r,o;return this.returnState&&(o=e.slice(1)),s=e[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(o).concat(o.slice()):[s].concat(o).concat(o.slice()):bn(r)}apply(t,e){let s=e==null?null:e.initialState,r=e==null?null:e.constants;e==null&&(e={});const o=Tw(t,s,r,this.numConstants);if(t=o.inputs,s=o.initialState,r=o.constants,Array.isArray(t)&&(s=t.slice(1),t=t[0]),(s==null||s.length===0)&&r==null)return super.apply(t,e);const i=[],a=[];if(s!=null){const c=s.length;if(c%2>0)throw new F("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=s,i.push(...s);const l=s.map(h=>new _e({shape:h.shape}));this.forwardLayer.stateSpec=l.slice(0,c/2),this.backwardLayer.stateSpec=l.slice(c/2),a.push(...l)}if(r!=null)throw new Rt("Support for constants in Bidirectional layers is not implemented yet.");const u=i[0]instanceof Hs;for(const c of i)if(c instanceof Hs!==u)throw new F("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){const c=[t].concat(i),l=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=l;const d=super.apply(c,e);return this.inputSpec=h,d}else return super.apply(t,e)}call(t,e){return W(()=>{const s=e.initialState;let r,o;if(s==null)r=this.forwardLayer.call(t,e),o=this.backwardLayer.call(t,e);else{const u=s.slice(0,s.length/2),c=s.slice(s.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:u})),o=this.backwardLayer.call(t,Object.assign(e,{initialState:c}))}let i;this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(o.slice(1))),r=r[0],o=o[0]),this.returnSequences&&(o=oo(o,1));let a;return this.mergeMode==="concat"?a=Up([r,o]):this.mergeMode==="sum"?a=rt(r,o):this.mergeMode==="ave"?a=M(.5,rt(r,o)):this.mergeMode==="mul"?a=M(r,o):this.mergeMode==null&&(a=[r,o]),this.returnState?this.mergeMode==null?a.concat(i):[a].concat(i):a})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Xr(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),Xr(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[e,e]:s=e:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const o=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(o).concat(o):[s].concat(o).concat(o)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const s=zs(e.layer);if(delete e.layer,e.numConstants!=null)throw new Rt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=s,new t(r)}}Dy.className="Bidirectional";et(Dy);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Iy extends Bt{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return W(()=>(t=Et(t),t.dtype!=="float32"&&(t=Ls(t,"float32")),rt(M(t,this.scale),this.offset)))}}Iy.className="Rescaling";et(Iy);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:n_,cropAndResize:s_}=Js;class $y extends Bt{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,s,r,o,i,a,u){return W(()=>{let c,l=!1;const h=e/i,d=s/a,f=(r+e)/i,m=(o+s)/a,p=[h,d,f,m],x=[];t.rank===3?(l=!0,c=Gs([t])):c=t;for(let v=0;v<c.shape[0];v++)x.push(p);const g=zo(x,[x.length,4]),b=qi(0,x.length,1,"int32"),y=s_(c,g,b,[r,o],"nearest");return Ls(l?Et(io(y)):y,u)})}upsize(t,e,s,r){return W(()=>{const o=n_(t,[e,s]);return Ls(o,r)})}call(t,e){return W(()=>{const s=Et(t),r=s.dtype,o=s.shape,i=o[o.length-3],a=o[o.length-2];let u=0;i!==this.height&&(u=Math.floor((i-this.height)/2));let c=0;return a!==this.width&&(c=Math.floor((a-this.width)/2),c===0&&(c=1)),u>=0&&c>=0?this.centerCrop(s,u,c,this.height,this.width,i,a,r):this.upsize(t,this.height,this.width,r)})}getConfig(){const t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=Vt(t);const e=t.length-3,s=t.length-2;return t[e]=this.height,t[s]=this.width,t}}$y.className="CenterCrop";et($y);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function r_(n,t,e,s){let r=Et(n);if(r.dtype!=="int32"&&(r=Ls(r,"int32")),t==="int")return r;const o=r.shape;if(r.rank===0&&(r=xn(r,-1)),t==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=xn(r,-1)),r.rank>2)throw new F(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${o} which would result in output rank ${r.rank}.`);const i=["multiHot","oneHot"].includes(t),a=r;let u;if(typeof s<"u"&&t==="count"?u=og(a,s,e,i):u=og(a,[],e,i),t!=="tfIdf")return u;if(s)return M(u,s);throw new F("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ky extends Bt{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return t=Vt(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return W(()=>{t=Et(t),t.dtype!=="int32"&&(t=Ls(t,"int32"));let s;if(typeof e.countWeights<"u"){if(this.outputMode!=="count")throw new F(`countWeights is not used when outputMode !== count.
              Received countWeights=${e.countWeights}`);s=Et(e.countWeights)}const r=xs(t),o=Xu(t),i=Gn(this.numTokens,r).bufferSync().get(0),a=go(o,0).bufferSync().get(0);if(!(i&&a))throw new F(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return r_(t,this.outputMode,this.numTokens,s)})}}ky.className="CategoryEncoding";et(ky);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const o_=["bilinear","nearest"],zg=new Set(o_);class Sy extends Bt{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(zg.has(t.interpolation))this.interpolation=t.interpolation;else throw new F(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!t.cropToAspectRatio}computeOutputShape(t){t=Vt(t);const e=t[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return W(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return Js.resizeBilinear(t,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Js.resizeNearestNeighbor(t,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...zg]} are supported`)})}}Sy.className="Resizing";et(Sy);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ey{constructor(t){this.seed=t}next(){if(this.seed!==void 0)return this.seed++}}Ey.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ny extends Bt{constructor(t){super(t),this.randomGenerator=new Ey(t.seed)}getConfig(){const t={seed:this.randomGenerator.seed},e=super.getConfig();return Object.assign(t,e),t}}Ny.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const i_=["bilinear","nearest"],Vg=new Set(i_);class Ay extends Ny{constructor(t){super(t);const{factor:e,interpolation:s="bilinear"}=t;if(this.factor=e,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new F(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new F(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new F(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(Vg.has(s))this.interpolation=s;else throw new F(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const t={factor:this.factor,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=Vt(t);const e=t[2];return[this.imgHeight,-1,e]}call(t,e){return W(()=>{const s=Et(t);this.imgHeight=s.shape[s.shape.length-3];const r=s.shape[s.shape.length-2];this.widthFactor=tu([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let o=this.widthFactor.dataSync()[0]*r;o=Math.round(o);const i=[this.imgHeight,o];switch(this.interpolation){case"bilinear":return Js.resizeBilinear(t,i);case"nearest":return Js.resizeNearestNeighbor(t,i);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...Vg]} are supported`)}})}}Ay.className="RandomWidth";et(Ay);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Sh(n){return new um(n)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a_=U();a_.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Wg;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(Wg||(Wg={}));var Ug;(function(n){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(Ug||(Ug={}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Gg;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(Gg||(Gg={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xt(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&k(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u_=Ex;class Ql extends Rd{nextDataId(){return Ql.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new X0(this,ks())}write(t,e,s){this.firstUse&&(this.firstUse=!1,U().get("IS_NODE")&&Pn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:s,refCount:1}),r}makeTensorInfo(t,e,s){let r;if(e==="string"&&s!=null&&s.length>0&&na(s[0])){const o=s.map(i=>pr(i));r=this.write(o,t,e)}else r=this.write(s,t,e);return{dataId:r,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){const e=this.data.get(t);e.refCount--}}move(t,e,s,r,o){this.data.set(t,{values:e,dtype:r,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:s}=this.data.get(t);if(e==="complex64"){const r=this.readSync(s.real.dataId),o=this.readSync(s.imag.dataId);return er(r,o)}return h2(this.data.get(t).values,e)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(r=>br(r));return Ot(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ot(t.shape,t.dtype,e)}makeOutput(t,e,s){return ks().makeTensorFromTensorInfo(this.makeTensorInfo(e,s,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(t);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=gn();return t(),{kernelMs:gn()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){xt([t],"where");const e=this.readSync(t.dataId);return u_(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Ql.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ty(n){const t=new Float32Array(n.length);for(let e=0;e<n.length;++e)t[e]=Math.abs(n[e]);return t}const c_=n=>{const{x:t}=n.inputs,e=n.backend;xt(t,"abs");let s=new Float32Array(X(t.shape));const r=e.data.get(t.dataId).values;return s=Ty(r),e.makeOutput(s,t.shape,t.dtype)},l_={kernelName:Nc,backendName:"cpu",kernelFunc:c_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Se(n){return(t,e,s,r,o)=>{const i=Tt(t,e),a=i.length,u=vt(i),c=X(i),l=tn(o,c),h=t.length,d=e.length,f=vt(t),m=vt(e),p=Xo(t,i),x=Xo(e,i);if(p.length+x.length===0)for(let g=0;g<l.length;++g)l[g]=n(s[g%s.length],r[g%r.length]);else for(let g=0;g<l.length;++g){const b=ci(g,a,u),w=b.slice(-h);p.forEach(D=>w[D]=0);const y=Os(w,h,f),v=b.slice(-d);x.forEach(D=>v[D]=0);const C=Os(v,d,m);l[g]=n(s[y],r[C])}return[l,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nn(n){const{inputs:t,backend:e}=n,{real:s,imag:r}=t,o=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,a=e.makeTensorInfo(s.shape,"complex64"),u=e.data.get(a.dataId);return u.complexTensorInfos={real:e.makeTensorInfo(s.shape,"float32",o),imag:e.makeTensorInfo(r.shape,"float32",i)},a}const h_={kernelName:qd,backendName:"cpu",kernelFunc:Nn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lc(n,t,e="float32"){if(e==="complex64"){const r=lc(n,t,"float32"),o=lc(n,t,"float32");return Nn({inputs:{real:r,imag:o},backend:n})}const s=en(X(t),e);return n.makeTensorInfo(t,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qs(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const d_={kernelName:Da,backendName:"cpu",kernelFunc:qs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uo(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.data.get(s.dataId).complexTensorInfos.real,o=e.data.get(r.dataId).values;return e.makeTensorInfo(r.shape,r.dtype,o)}const f_={kernelName:xf,backendName:"cpu",kernelFunc:uo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fy(n,t,e,s){if(s==="int32"){const r=Int32Array.from(n);return[t,"int32",r]}if(s==="bool"){const r=mo([0],e),[o,i]=Se((a,u)=>a!==u?1:0)(t,[],n,r,"bool");return[i,"bool",o]}throw new Error(`Error in Cast: failed to cast ${e} to ${s}`)}function Dr(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return qs({inputs:{x:r},backend:e});const l=lc(e,r.shape,r.dtype),h=Dr({inputs:{x:r},backend:e,attrs:{dtype:"float32"}}),d=Nn({inputs:{real:h,imag:l},backend:e});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(h),d}if(r.dtype==="complex64"){const l=uo({inputs:{input:r},backend:e}),h=Dr({inputs:{x:l},backend:e,attrs:{dtype:o}});return e.disposeIntermediateTensorInfo(l),h}if(!J0(r.dtype,o)){const l=qs({inputs:{x:r},backend:e});return{dataId:l.dataId,shape:l.shape,dtype:o}}const i=e.data.get(r.dataId).values,[a,u,c]=Fy(i,r.shape,r.dtype,o);return e.makeTensorInfo(a,u,c)}const p_={kernelName:la,backendName:"cpu",kernelFunc:Dr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Le(n,t,e,s){return e==null?({inputs:r,backend:o})=>{const{a:i,b:a}=r,u=o;xt([i,a],n);const c=u.data.get(i.dataId).values,l=u.data.get(a.dataId).values,h=i.dtype==="string"?nr(c):c,d=i.dtype==="string"?nr(l):l,f=s||i.dtype,[m,p]=t(i.shape,a.shape,h,d,f);return u.makeTensorInfo(p,f,m)}:({inputs:r,backend:o})=>{const{a:i,b:a}=r,u=o;if(i.dtype==="complex64"||a.dtype==="complex64"){const c=Dr({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),l=u.data.get(c.dataId),h=l.complexTensorInfos.real,d=l.complexTensorInfos.imag,f=u.data.get(h.dataId).values,m=u.data.get(d.dataId).values,p=Dr({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),x=u.data.get(p.dataId),g=x.complexTensorInfos.real,b=x.complexTensorInfos.imag,w=u.data.get(g.dataId).values,y=u.data.get(b.dataId).values,[v,C,D]=e(i.shape,a.shape,f,m,w,y),I=u.makeTensorInfo(D,"float32",v),$=u.makeTensorInfo(D,"float32",C),S=Nn({inputs:{real:I,imag:$},backend:u});return u.disposeIntermediateTensorInfo(c),u.disposeIntermediateTensorInfo(p),u.disposeIntermediateTensorInfo(I),u.disposeIntermediateTensorInfo($),S}else{const c=u.data.get(i.dataId).values,l=u.data.get(a.dataId).values,h=s||i.dtype,[d,f]=t(i.shape,a.shape,c,l,h);return u.makeTensorInfo(f,h,d)}}}function cm(n){return(t,e,s,r,o,i)=>{const a=Tt(t,e),u=X(a),c=a.length,l=vt(a),h=tn("float32",u),d=tn("float32",u),f=Xo(t,a),m=Xo(e,a),p=er(s,r),x=er(o,i),g=t.length,b=vt(t),w=e.length,y=vt(e);if(f.length+m.length===0)for(let v=0;v<h.length;v++){const C=v%p.length,D=v%x.length,I=n(p[C*2],p[C*2+1],x[D*2],x[D*2+1]);h[v]=I.real,d[v]=I.imag}else for(let v=0;v<h.length;v++){const C=ci(v,c,l),D=C.slice(-g);f.forEach(N=>D[N]=0);const I=Os(D,g,b),$=C.slice(-w);m.forEach(N=>$[N]=0);const S=Os($,w,y),E=n(p[I*2],p[I*2+1],x[S*2],x[S*2+1]);h[v]=E.real,d[v]=E.imag}return[h,d,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ry=Se((n,t)=>n+t),m_=cm((n,t,e,s)=>({real:n+e,imag:t+s})),ti=Le(li,Ry,m_),g_={kernelName:li,backendName:"cpu",kernelFunc:ti};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lm(n,t,e,s,r){const o=X(s),i=en(r,e);for(let a=0;a<n.length;a++){const u=n[a];if(u<0)throw new Error("Input x must be non-negative!");u>=r||(o>0?i[u]+=t[a]:i[u]+=1)}return i}function _y(n,t,e,s=!1){const r=n.shape[0],o=n.shape[1],i=Ot([r,e],t.dtype);for(let a=0;a<r;a++)for(let u=0;u<o;u++){const c=n.get(a,u);if(c<0)throw new Error("Input x must be non-negative!");c>=e||(s?i.set(1,a,c):t.size>0?i.set(i.get(a,c)+t.get(a,u),a,c):i.set(i.get(a,c)+1,a,c))}return i}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oy=Se((n,t)=>n&t),x_=Le(Hd,Oy),b_={kernelName:Hd,backendName:"cpu",kernelFunc:x_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ks(n){return(t,e,s)=>{const r=Ce(e,t.length);for(let o=0;o<t.length;++o)r[o]=n(t[o],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yt(n,t,e){const s=Ks(t);return Or(n,s,e)}function Or(n,t,e){return({inputs:s,attrs:r,backend:o})=>{const{x:i}=s;xt(i,n);const a=o,u=a.data.get(i.dataId).values;let c;if(i.dtype==="string"){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");c=nr(u)}else c=u;const l=e||i.dtype,h=t(c,l,r);return a.makeTensorInfo(i.shape,l,h)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const My=Ks(n=>Math.ceil(n)),w_=Or(ha,My),y_={kernelName:ha,backendName:"cpu",kernelFunc:w_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function By(n,t,e,s){const r=Ce(e,X(t));if(s&&e!=="string"){let o=0;n.forEach(i=>{const a=X(i.shape);r.set(i.vals,o),o+=a})}else{let o=0;n.forEach(i=>{const a=e==="string"?nr(i.vals):i.vals;let u=0;for(let c=0;c<i.shape[0];++c){const l=c*t[1]+o;for(let h=0;h<i.shape[1];++h)r[l+h]=a[u++]}o+=i.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ly=Se((n,t)=>n===t?1:0),Py=Le(Gc,Ly,null,"bool"),v_={kernelName:Gc,backendName:"cpu",kernelFunc:Py};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zy=Ks(n=>Math.exp(n)),Vy=Or(ba,zy,"float32"),C_={kernelName:ba,backendName:"cpu",kernelFunc:Vy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wy=Ks(n=>Math.expm1(n)),D_=Or(wa,Wy),I_={kernelName:wa,backendName:"cpu",kernelFunc:D_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uy=Ks(n=>Math.floor(n)),$_=Or(ya,Uy),k_={kernelName:ya,backendName:"cpu",kernelFunc:$_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gy=Se((n,t)=>Math.floor(n/t)),S_=Le(va,Gy,null,"int32"),E_={kernelName:va,backendName:"cpu",kernelFunc:S_};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hy(n,t,e,s,r,o,i,a,u){const c=Ot([s,o],e);for(let l=0;l<s;l++){const h=[];let d=0;for(let f=0;f<r;f++){const m=n[l*r+f];d+=m*i[f],h.push(m)}if(d<0||d>=u/o)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let f=0;f<o;f++)c.values[l*o+f]=t.get(...t.indexToLoc(d*o+f))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qy(n,t,e){const s=Ot(e,n.dtype);for(let r=0;r<s.size;++r){const i=s.indexToLoc(r).slice(),a=i[0],u=i[2],c=t.locToIndex([a,u]);i[2]=t.values[c];const l=n.locToIndex(i);0<=l&&l<n.values.length&&(s.values[r]=n.values[l])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jy=Se((n,t)=>n>t?1:0),N_=Le(Kc,jy,null,"bool"),A_={kernelName:Kc,backendName:"cpu",kernelFunc:N_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ky=Se((n,t)=>n>=t?1:0),T_=Le(Ca,Ky,null,"bool"),F_={kernelName:Ca,backendName:"cpu",kernelFunc:T_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xy=Se((n,t)=>n<t?1:0),R_=Le(Yc,Xy,null,"bool"),__={kernelName:Yc,backendName:"cpu",kernelFunc:R_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yy=Se((n,t)=>n<=t?1:0),O_=Le(Zc,Yy,null,"bool"),M_={kernelName:Zc,backendName:"cpu",kernelFunc:O_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zy(n,t,e){const s=(t-n)/(e-1),r=en(e,"float32");r[0]=n;for(let o=1;o<r.length;o++)r[o]=r[o-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jy=Ks(n=>Math.log(n)),B_=Or(Sa,Jy),L_={kernelName:Sa,backendName:"cpu",kernelFunc:B_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qy(n,t,e,s){const r=tn(s,X(e));for(let o=0;o<r.length;++o){const i=o*t;let a=n[i];for(let u=0;u<t;++u){const c=n[i+u];(Number.isNaN(c)||c>a)&&(a=c)}r[o]=a}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tv=Se((n,t)=>Math.max(n,t)),P_=Le(Na,tv),z_={kernelName:Na,backendName:"cpu",kernelFunc:P_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ev=Se((n,t)=>Math.min(n,t)),V_=Le(Aa,ev),W_={kernelName:Aa,backendName:"cpu",kernelFunc:V_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hm=Se((n,t)=>n*t),U_=cm((n,t,e,s)=>({real:n*e-t*s,imag:n*s+t*e})),th=Le(Fa,hm,U_),G_={kernelName:Fa,backendName:"cpu",kernelFunc:th};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nv(n,t,e){const s=Sr(-1,e);return hm([],t,s,n,e)}function H_(n){const{inputs:t,backend:e}=n,{x:s}=t;xt(s,"neg");const r=e.data.get(s.dataId).values,[o,i]=nv(r,s.shape,s.dtype);return e.makeTensorInfo(i,s.dtype,o)}const q_={kernelName:ul,backendName:"cpu",kernelFunc:H_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sv=Se((n,t)=>n!==t?1:0),j_=Le(cl,sv,null,"bool"),K_={kernelName:cl,backendName:"cpu",kernelFunc:j_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dm(n,t,e,s,r){const o=t.length,i=X(t),a=vt(t),u=vt(r),c=tn(e,X(r));for(let l=0;l<i;++l){const h=ci(l,o,a),d=new Array(h.length);for(let m=0;m<d.length;m++)d[m]=h[s[m]];const f=Os(d,o,u);c[f]=n[l]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vn(n){const{inputs:t,attrs:e,backend:s}=n,{x:r}=t,{perm:o}=e;xt(r,"transpose");const i=r.shape.length,a=new Array(i);for(let h=0;h<a.length;h++)a[h]=r.shape[o[h]];const u=s.data.get(r.dataId).values,c=dm(u,r.shape,r.dtype,o,a);return{dataId:s.write(c,a,r.dtype),shape:a,dtype:r.dtype}}const X_={kernelName:Po,backendName:"cpu",kernelFunc:vn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rv(n,t,e,s){const[r,o]=Ge(n,s),i=Fn(t,"int32"),a=en(X(r),i),u=X(o);for(let c=0;c<a.length;++c){const l=c*u;let h=1;for(let d=0;d<u;++d)h*=e[l+d];a[c]=h}return{outVals:a,outShape:r,outDtype:i}}function Y_(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s;xt(r,"prod");const a=r.shape.length,u=Mt(o,r.shape),c=ge(u,a);let l=u,h=r;const d=[];c!=null&&(h=vn({inputs:{x:r},backend:e,attrs:{perm:c}}),d.push(h),l=$e(l.length,a));const f=e.data.get(h.dataId).values,{outVals:m,outShape:p,outDtype:x}=rv(h.shape,h.dtype,f,l);let g=p;return i&&(g=Ne(p,u)),d.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.makeTensorInfo(g,x,m)}const Z_={kernelName:ml,backendName:"cpu",kernelFunc:Y_};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J_(n,t,e){n.forEach((s,r)=>{if(s<0||s>=e){const o=ci(r,t.length,vt(t)).join(",");throw new Error(`indices[${o}] = ${s} is not in [0, ${e})`)}})}function Q_(n,t){for(let e=0;e<n.length;++e){const s=n[e],r=e===n.length-1?t:n[e+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let o=1;o<s.length;++o)if(s[o-1]>s[o])throw new Error("Ragged splits must be sorted in ascending order")}}function t3(n,t,e,s){const r=[];let o=0;const i=t.length-1+e.length,a=new Array(i).fill(null).map(()=>[0]);Q_(e,s);let u=1;for(let c=0;c<t.length-1;++c){u*=t[c];const l=t[c+1];for(let h=1;h<u+1;++h)a[c].push(h*l)}for(let c=0;c<n.length;++c){let l=n[c],h=n[c]+1;for(let d=0;d<e.length;++d){const f=e[d],m=d+t.length-1;if(m>=0){const p=a[m],x=p[p.length-1]-f[l];for(let g=l;g<h;++g)a[m].push(f[g+1]+x)}l=f[l],h=f[h]}h!==l&&(r.push([l,h]),o+=h-l)}return{outSplits:a,valueSlices:r,numValues:o}}function e3(n){const t=[];for(let e=0;e<n.length;++e){const s=n[e].length,r=Ce("int32",s);t.push(r),n[e].forEach((o,i)=>r[i]=o)}return t}function Hg(n,t){const e=n.slice(0,t);for(;e.length<t;)e.push(1);for(let s=t;s<n.length;s++)e[t-1]*=n[s];return e}function n3(n,t,e,s,r,o){const i=Hg(t,2)[1],a=Hg(o,2)[1];let u=0;for(const c of e)for(let l=c[0];l<c[1];++l){for(let h=0;h<s;++h)r[u*a+h]=n[l*i+h];++u}}function s3(n,t,e,s,r){const o=t.slice();o[0]=r;const i=Ce(e,X(o)),a=n.length,u=a===0?0:a/t[0];return n3(n,t,s,u,i,o),[i,o]}function ov(n,t,e,s,r,o,i,a){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");const u=t[0][0]-1;if(J_(o,i,u),s.length===0)throw new Error("params.rank must be nonzero");const c=s[0],{outSplits:l,valueSlices:h,numValues:d}=t3(o,i,n,c),f=e3(l),m=s3(e,s,r,h,d);return[f,m[0],m[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qg=2147483647;function iv(n,t,e,s,r,o,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const a=t.length===0,u=r.length===0,c=i.length===0,l=[];a||l.push(t[0]),u||l.push(r[0]),c||l.push(i[0]);for(let x=1;x<l.length;++x)if(l[x]!==l[x-1])throw new Error("starts, limits, and deltas must have the same shape");const h=l.length===0?1:l[0],d=Ce("int32",h+1);d[0]=0;for(let x=0;x<h;++x){const g=a?n[0]:n[x],b=u?s[0]:s[x],w=c?o[0]:o[x];if(w===0)throw new Error("Requires delta != 0");let y;if(w>0&&b<g||w<0&&b>g)y=0;else if(y=Math.ceil(Math.abs((b-g)/w)),y>qg)throw new Error(`Requires ((limit - start) / delta) <= ${qg}`);d[x+1]=d[x]+y}const f=d[h],m=Ce(e,f);let p=0;for(let x=0;x<h;++x){const g=d[x+1]-d[x];let b=a?n[0]:n[x];const w=c?o[0]:o[x];for(let y=0;y<g;++y)m[p++]=b,b+=w}return[d,m]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var jn=fs;class hc{constructor(t,e,s,r,o,i,a,u,c,l){this.shape=t,this.shapeShape=e,this.values=s,this.valuesShape=r,this.valuesDType=o,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=u,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=Kx(l),this.raggedRank=Xx(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===jn.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===jn.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case jn.VALUE_ROWIDS:return hc.getMaxWidthValueRowID(e);case jn.ROW_SPLITS:return hc.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${jn[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(e===0||e===1)return 0;let s=0;for(let r=0;r<e-1;++r){const o=t[r+1]-t[r];o>s&&(s=o)}return s}static getMaxWidthValueRowID(t){const e=t.length;if(e===0)return 0;let s=0,r=t[0],o=0;for(let i=1;i<e;++i){const a=t[i];a!==r&&(r=a,o=Math.max(i-s,o),s=i)}return Math.max(e-s,o)}tensorShapeFromTensor(t,e,s=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Kg(t,s)}calculateOutputSize(t){const e=this.valuesShape,s=this.defaultValueShape;Yx(s,e);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=jx(this.raggedRank,r,e);i[0]<0&&(i[0]=t);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(t,e,s){const r=Math.min(t,s),o=[];let i=0;for(let a=0;a<r;++a,i+=e)o.push(i);for(let a=r;a<t;++a)o.push(-1);return k(o.length===t,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(t,e,s,r){const o=t.length,i=[];for(let a=0;a<o-1;++a){const u=t[a+1]-t[a];let c=Math.min(r,u),l=e[a];l===-1&&(c=0);for(let h=0;h<c;++h)i.push(l),l+=s;for(let h=0;h<u-c;++h)i.push(-1)}if(o>0&&i.length!==t[o-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,e,s,r){const o=t.length,i=[];if(o===0)return[];let a=0,u=t[0];if(u>=e.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${e.length}`);let c=e[u];i.push(c);for(let l=1;l<o;++l){const h=t[l];if(h===u)c>=0&&(++a,a<r?c+=s:c=-1);else{if(a=0,u=h,h>=e.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${e.length}`);c=e[h]}i.push(c)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,e,s,r){const o=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case jn.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,e,s,r);case jn.ROW_SPLITS:if(o.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(o,e,s,r);default:throw new Error(`Unsupported partition type: ${jn[i]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case jn.FIRST_DIM_SIZE:return t[0];case jn.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case jn.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${jn[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),s=this.calculateOutputSize(e),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let u=r.length-2;u>=0;--u)r[u]=r[u+1]*s[u+1];const o=Kg(s,!1),i=Ce(this.valuesDType,X(o));if(r[0]*s[0]>0){let u=this.calculateFirstParentOutputIndex(e,r[0],s[0]);for(let c=1;c<=this.raggedRank;++c)u=this.calculateOutputIndex(c-1,u,r[c],s[c]);this.setOutput(this.raggedRank,u,i,o)}return[o,i]}setOutput(t,e,s,r){if(s.length===0)return;const o=this.values,i=s;let a=r.slice();a=a.slice(t+1);const u=X(a),c=e.length;let l=this.defaultValue;if(l.length!==u&&l.length!==1){const m=this.defaultValueShape;W(()=>{const p=z(l,m);l=Pi(p,a).dataSync()})}let h=0,d=0,f=0;for(let m=0;m<=c;++m){let p=m<c?e[m]:-1;if(p===f){++f;continue}if(d<f){const x=o.subarray(h*u),g=i.subarray(d*u),b=(f-d)*u;jg(g,x,b)}if(m>=c){const x=s.length;p=Math.floor(x/u)}if(p>f)if(this.defaultValue.length===1)i.subarray(f*u,p*u).fill(this.defaultValue[0]),f=p;else for(;p>f;){const x=i.slice(f*u);jg(x,l,u),++f}p<0?(h=m+1,d=f):(h=m,d=f,f=d+1)}}}function jg(n,t,e){for(let s=0;s<e;s++)n[s]=t[s]}function Kg(n,t){const e=[];for(let s of n){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}e.push(s)}return e}function av(n,t,e,s,r,o,i,a,u,c){return new hc(n,t,e,s,r,o,i,a,u,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uv(n,t,e,s){const r=n===t,o=n<t&&e<0,i=t<n&&e>1;if(r||o||i)return en(0,s);const a=Math.abs(Math.ceil((t-n)/e)),u=en(a,s);t<n&&e===1&&(e=-1),u[0]=n;for(let c=1;c<u.length;c++)u[c]=u[c-1]+e;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cv=Ks(n=>1/Math.sqrt(n)),r3=Or(La,cv),o3={kernelName:La,backendName:"cpu",kernelFunc:r3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jr(n,t,e,s,r,o,i,a,u,c){const l=[s/r,r],h=n.values,d=t.values;if(s===0)return Ot(e,t.dtype);const f=u instanceof je?u:Ot(l,t.dtype);typeof u=="string"||typeof u=="number"?f.values.fill(u):typeof u=="boolean"&&f.values.fill(+u);for(let m=0;m<o;m++){const p=[];let x=0;for(let g=0;g<i;g++){const b=h[m*i+g];p.push(b),x+=b*a[g]}if(x<0||x>=s/r)throw new Error(`Invalid indices: ${p} does not index into ${e}`);for(let g=0;g<r;g++)c?f.values[x*r+g]+=d[m*r+g]:f.values[x*r+g]=t.rank===0?d[0]:d[m*r+g]}return f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i3=Ks(n=>1/(1+Math.exp(-n))),lv=Yt(Ua,n=>1/(1+Math.exp(-n))),a3={kernelName:Ua,backendName:"cpu",kernelFunc:lv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hv(n,t,e,s,r){const o=xp(s,t,e),i=X(e),a=vt(s);if(o){const h=bp(t,a);return r==="string"?n.slice(h,h+i):n.subarray(h,h+i)}const u=r==="string"?nr(n):n,c=Ot(s,r,u),l=Ot(e,r);for(let h=0;h<l.size;++h){const d=l.indexToLoc(h),f=d.map((m,p)=>m+t[p]);l.set(c.get(...f),...d)}return r==="string"?gb(l.values):l.values}function co(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,size:i}=s;xt(r,"slice");const[a,u]=Pl(r,o,i);mp(r,a,u);const c=e.data.get(r.dataId).values,l=hv(c,a,u,r.shape,r.dtype);return e.makeTensorInfo(u,r.dtype,l)}const u3={kernelName:vl,backendName:"cpu",kernelFunc:co};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dv(n,t,e,s,r,o,i){const a=t[0],u=o[0],c=new Array(u),l=new Array(a),h=t[1];if(u===0){if(a!==0)throw new Error(sb(a));const x=Ce(e,0),g=Ce(r,0);return[x,[0,h],g,c,l]}let d=!0,f=0;const m=new Array(u).fill(0);for(let x=0;x<a;++x){const g=n[x*h];if(g<0)throw new Error(rb(x,g));if(g>=u)throw new Error(ob(x,g,u));++m[g],d=d&&g>=f,f=g}let p=!0;for(let x=0;x<u;++x){const g=m[x]===0;c[x]=g,p=p&&!g,m[x]=Math.max(m[x],1),x>0&&(m[x]+=m[x-1])}if(p&&d){const x=n,g=s;for(let b=0;b<a;++b)l[b]=b;return[x,[a,h],g,c,l]}else{const x=m[u-1],g=Ce(e,x*h),b=Ce(r,x),w=new Array(u).fill(0);for(let y=0;y<a;++y){const v=n[y*h],C=w[v],D=(v===0?0:m[v-1])+C;w[v]++;for(let I=0;I<h;++I)g[D*h+I]=n[y*h+I];b[D]=s[y],l[y]=D}for(let y=0;y<u;++y)if(w[y]===0){const C=y===0?0:m[y-1];g[C*h+0]=y;for(let D=1;D<h;++D)g[C*h+D]=0;b[C]=i}return[g,[x,h],b,c,l]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fv(n,t,e,s,r){const o=X(s),i=t[0],a=r.length,u=[];let c=1,l=-1;for(let x=0;x<a;++x){const g=r[x];if(g===-1){if(l!==-1)throw new Error(ib(l,x));l=x,u.push(1)}else{if(g<0)throw new Error(ab(x,g));c*=g,u.push(g)}}if(l!==-1){if(c<=0)throw new Error(ub());const x=Math.trunc(o/c);if(c*x!==o)throw new Error(cb(s,u));u[l]=x}if(X(u)!==o)throw new Error(lb(s,u));const d=s.length,f=[];if(d>0){f[d-1]=1;for(let x=d-2;x>=0;--x)f[x]=f[x+1]*s[x+1]}const m=[];if(a>0){m[a-1]=1;for(let x=a-2;x>=0;--x)m[x]=m[x+1]*u[x+1]}const p=Ce(e,i*a);for(let x=0;x<i;++x){let g=0;for(let b=0;b<d;++b)g+=n[x*d+b]*f[b];for(let b=0;b<a;++b)p[x*a+b]=Math.trunc(g/m[b]),g%=m[b]}return[p,[i,a],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fm(n,t,e,s,r,o=!1,i=0){const a=s.length,u=[t[0],n.length/t[0]],c=u[1],h=a>0?r[a-1]+1:0;if(h<0)throw new Error(ad());const d=t.slice();d[0]=h;const f=d.reduce((w,y)=>w*y,1),m=Ce(e,f);if(a===0)return h>0&&m.fill(i),[m,d];if(h<=0)throw new Error(ad());let p=0,x=1,g=0,b=r[p];for(;;){let w=0;if(x<a){if(w=r[x],b===w){++x;continue}if(b>=w)throw new Error(hb())}if(b<0||b>=h)throw new Error(db(b,h));b>g&&m.fill(i,g*c,b*c);for(let y=p;y<x;++y){const v=s[y];if(v<0||v>=u[0])throw new Error(fb(y,s[y],u[0]));for(let C=0;C<c;C++)m[b*c+C]+=n[v*c+C]}if(o)for(let y=0;y<c;y++)m[b*c+y]/=x-p;if(p=x,++x,g=b+1,b=w,x>a)break}return g<h&&m.fill(i,g*c,h*c),[m,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c3=Ks(n=>Math.sqrt(n)),l3=Yt(Ha,n=>Math.sqrt(n)),h3={kernelName:Ha,backendName:"cpu",kernelFunc:l3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pv=Se((n,t)=>{const e=n-t;return e*e}),d3=Le(qa,pv),f3={kernelName:qa,backendName:"cpu",kernelFunc:d3};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mv=Ks((n,t)=>{const{pattern:e,replaceGlobal:s,rewrite:r}=t;return n.replace(new RegExp(e,s?"g":""),r)}),p3=Or(vf,mv),m3={kernelName:vf,backendName:"cpu",kernelFunc:p3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gv(n,t,e,s){const r=Ot(n,t.dtype);for(let o=0;o<r.size;o++){const i=r.indexToLoc(o),a=new Array(i.length);for(let u=0;u<a.length;u++)a[u]=i[u]*e[u]+s[u];r.set(t.get(...a),...i)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g3{constructor(t,e,s,r,o,i){this.separator=pr(t),this.nGramWidths=e,this.leftPad=pr(s),this.rightPad=pr(r),this.padWidth=o,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const s=this.getPadWidth(e);return Math.max(0,t+2*s-e+1)}createNGrams(t,e,s,r,o,i){for(let a=0;a<o;++a){const u=this.getPadWidth(i),c=Math.max(0,u-a),l=Math.max(0,u-(o-(a+1))),h=i-(c+l),d=e+(c>0?0:a-u);let f=0;f+=c*this.leftPad.length;for(let b=0;b<h;++b)f+=t[d+b].length;f+=l*this.rightPad.length;const m=c+l+h-1;f+=m*this.separator.length,s[r+a]=new Uint8Array(f);const p=s[r+a];let x=0;const g=b=>b.forEach(w=>p[x++]=w);for(let b=0;b<c;++b)g(this.leftPad),g(this.separator);for(let b=0;b<h-1;++b)g(t[d+b]),g(this.separator);if(h>0){g(t[d+h-1]);for(let b=0;b<l;++b)g(this.separator),g(this.rightPad)}else{for(let b=0;b<l-1;++b)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(t,e){const s=t.length,r=e.length;if(r>0){let u=e[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let c=1;c<r;++c){let l=e[c]>=u;if(l=l&&e[c]<=s,!l)throw new Error(`Invalid split value ${e[c]}, must be in [${u}, ${s}]`);u=e[c]}if(u!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${u}`)}const o=r-1,i=Ce("int32",r);if(s===0||r===0){const u=new Array(s);for(let c=0;c<=o;++c)i[c]=0;return[u,i]}i[0]=0;for(let u=1;u<=o;++u){const c=e[u]-e[u-1];let l=0;this.nGramWidths.forEach(h=>{l+=this.getNumNGrams(c,h)}),this.preserveShort&&c>0&&l===0&&(l=1),i[u]=i[u-1]+l}const a=new Array(i[o]);for(let u=0;u<o;++u){const c=e[u];let l=i[u];if(this.nGramWidths.forEach(h=>{const d=e[u+1]-e[u],f=this.getNumNGrams(d,h);this.createNGrams(t,c,a,l,f,h),l+=f}),this.preserveShort&&l===i[u]){const h=e[u+1]-e[u];if(h===0)continue;const d=h+2*this.padWidth,f=1;this.createNGrams(t,c,a,l,f,d)}}return[a,i]}}function xv(n,t,e,s,r,o,i,a){return new g3(e,s,r,o,i,a).compute(n,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x3(n,t,e,s){if(!n.length)return;if(t.length===0){for(let o=0;o<n.length;++o)s.push(n.subarray(o,o+1));return}if(t.length===1){const o=t[0];let i=n.indexOf(o);for(;i!==-1;){const a=n.subarray(0,i);(!e||a.length!==0)&&s.push(a),n=n.subarray(i+1),i=n.indexOf(o)}(!e||n.length!==0)&&s.push(n);return}let r=0;for(let o=0;o<n.length+1;o++)if(o===n.length||t.indexOf(n[o])!==-1){const i=n.subarray(r,o);(!e||i.length!==0)&&s.push(i),r=o+1}}function bv(n,t,e){const s=n.length,r=[];let o=0,i=0;const a=new Array(s);for(let d=0;d<s;++d){const f=r.length;x3(n[d],t,e,r);const m=r.length-f;a[d]=m,o+=m,i=Math.max(i,m)}const u=Ce("int32",o*2),c=new Array(o),l=[s,i];let h=0;for(let d=0;d<s;++d)for(let f=0;f<a[d];++f)u[h*2]=d,u[h*2+1]=f,c[h]=r[h],++h;return[u,c,l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wv(n,t){const e=Ce("int32",n.length);for(let s=0;s<n.length;++s)e[s]=T2(n[s]).modulo(t).getLowBitsUnsigned();return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yv=Se((n,t)=>n-t),b3=cm((n,t,e,s)=>({real:n-e,imag:t-s})),pm=Le(ja,yv,b3),w3={kernelName:ja,backendName:"cpu",kernelFunc:pm};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vv(n,t){const e=new Array(n.rank);for(let r=0;r<e.length;r++)e[r]=n.shape[r]*t[r];const s=Ot(e,n.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r),i=new Array(n.rank);for(let u=0;u<i.length;u++)i[u]=o[u]%n.shape[u];const a=n.locToIndex(i);s.values[r]=n.values[a]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mi=(n,t)=>{const e=t.value-n.value;return e===0?n.index-t.index:e};function Cv(n,t,e=0,s=n.length-1){for(;s>e;){if(s-e>600){const a=s-e+1,u=t-e+1,c=Math.log(a),l=.5*Math.exp(2*c/3),h=.5*Math.sqrt(c*l*(a-l)/a)*Math.sign(u-a/2),d=Math.max(e,Math.floor(t-u*l/a+h)),f=Math.min(s,Math.floor(t+(a-u)*l/a+h));Cv(n,t,d,f)}const r=n[t];let o=e,i=s;for(Ro(n,e,t),Mi(n[s],r)>0&&Ro(n,e,s);o<i;){for(Ro(n,o,i),o++,i--;Mi(n[o],r)<0;)o=o+1;for(;Mi(n[i],r)>0;)i=i-1}Mi(n[e],r)===0?Ro(n,e,i):(i=i+1,Ro(n,i,s)),i<=t&&(e=i+1),t<=i&&(s=i-1)}}function Dv(n,t,e,s,r){const o=t[t.length-1],[i,a]=[n.length/o,o],u=tn(e,i*s),c=tn("int32",i*s);for(let h=0;h<i;h++){const d=h*a,f=n.subarray(d,d+a);let m=new Array(f.length);f.forEach((b,w)=>m[w]={value:b,index:w}),s<m.length&&(Cv(m,s),m=m.slice(0,s)),r&&m.sort(Mi);const p=h*s,x=u.subarray(p,p+s),g=c.subarray(p,p+s);for(let b=0;b<s;b++)x[b]=m[b].value,g[b]=m[b].index}const l=t.slice();return l[l.length-1]=s,[Ot(l,e,u),Ot(l,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iv(n,t,e,s){const r=Mt(t,e)[0],o=[1,e[0],1];for(let m=0;m<r;m++)o[0]*=e[m];o[1]=e[r];for(let m=r+1;m<e.length;m++)o[2]*=e[m];const i=new Map,a=new Int32Array(e[r]),u=new je(o,s,n),c=[],l=o[0]===1&&o[2]===1;for(let m=0;m<e[r];m++){let p;if(l)p=n[m].toString();else{const g=[];for(let b=0;b<o[0];b++)for(let w=0;w<o[2];w++)g.push(u.get(b,m,w));p=g.join(",")}const x=i.get(p);if(x!=null)a[m]=x;else{const g=i.size;i.set(p,g),a[m]=g,c.push(m)}}const h=o.slice();h[1]=i.size;const d=new je(h,s);c.forEach((m,p)=>{for(let x=0;x<o[0];x++)for(let g=0;g<o[2];g++)d.set(u.get(x,m,g),x,p,g)});const f=e.slice();return f[r]=h[1],{outputValues:d.values,outputShape:f,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y3=Object.freeze(Object.defineProperty({__proto__:null,addImpl:Ry,bincountImpl:lm,bincountReduceImpl:_y,bitwiseAndImpl:Oy,castImpl:Fy,ceilImpl:My,concatImpl:By,equalImpl:Ly,expImpl:zy,expm1Impl:Wy,floorDivImpl:Gy,floorImpl:Uy,gatherNdImpl:Hy,gatherV2Impl:qy,greaterEqualImpl:Ky,greaterImpl:jy,lessEqualImpl:Yy,lessImpl:Xy,linSpaceImpl:Zy,logImpl:Jy,maxImpl:Qy,maximumImpl:tv,minimumImpl:ev,multiplyImpl:hm,negImpl:nv,notEqualImpl:sv,prodImpl:rv,raggedGatherImpl:ov,raggedRangeImpl:iv,raggedTensorToTensorImpl:av,rangeImpl:uv,rsqrtImpl:cv,scatterImpl:jr,sigmoidImpl:i3,simpleAbsImpl:Ty,sliceImpl:hv,sparseFillEmptyRowsImpl:dv,sparseReshapeImpl:fv,sparseSegmentReductionImpl:fm,sqrtImpl:c3,squaredDifferenceImpl:pv,staticRegexReplaceImpl:mv,stridedSliceImpl:gv,stringNGramsImpl:xv,stringSplitImpl:bv,stringToHashBucketFastImpl:wv,subImpl:yv,tileImpl:vv,topKImpl:Dv,transposeImpl:dm,uniqueImpl:Iv},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */H1("cpu",()=>new Ql,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $v=Yt(ga,n=>n>=0?n:Math.exp(n)-1),v3={kernelName:ga,backendName:"cpu",kernelFunc:$v};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kv(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{alpha:o}=s;xt([r],"leakyRelu");const i=X(r.shape),a=e.data.get(r.dataId).values,u=tn("float32",i);for(let c=0;c<a.length;c++)u[c]=a[c]<0?o*a[c]:a[c];return e.makeTensorInfo(r.shape,"float32",u)}const C3={kernelName:Xc,backendName:"cpu",kernelFunc:kv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D3=Se((n,t)=>n<0?t*n:n);function Sv(n){const{inputs:t,backend:e}=n,{x:s,alpha:r}=t;xt([s,r],"prelu");const o=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,[a,u]=D3(s.shape,r.shape,o,i,"float32");return e.makeTensorInfo(u,"float32",a)}const I3={kernelName:pl,backendName:"cpu",kernelFunc:Sv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ev=Yt(Oa,n=>Math.max(0,n)),$3={kernelName:Oa,backendName:"cpu",kernelFunc:Ev};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nv=Yt(Ma,n=>Math.min(Math.max(0,n),6)),k3={kernelName:Ma,backendName:"cpu",kernelFunc:Nv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dc(n,t,e,s,r){if(e==="linear")return qs({inputs:{x:t},backend:n});if(e==="relu")return Ev({inputs:{x:t},backend:n});if(e==="elu")return $v({inputs:{x:t},backend:n});if(e==="relu6")return Nv({inputs:{x:t},backend:n});if(e==="prelu")return Sv({inputs:{x:t,alpha:s},backend:n});if(e==="leakyrelu")return kv({inputs:{x:t},backend:n,attrs:{alpha:r}});if(e==="sigmoid")return lv({inputs:{x:t},backend:n});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ae(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{shape:o}=s,i=X(r.shape),a=Z0(o,i),u=X(a);k(i===u,()=>`The new shape (${a}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),e.incRef(r.dataId);const c=e.data.get(r.dataId);if(c.complexTensorInfos!=null){const l=c.complexTensorInfos.real,h=c.complexTensorInfos.imag;l.shape=a,h.shape=a}return{dataId:r.dataId,shape:a,dtype:r.dtype}}const S3={kernelName:gl,backendName:"cpu",kernelFunc:ae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Av(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o}=t,{transposeA:i,transposeB:a}=s;xt([r,o],"matMul");const u=r.shape.length,c=o.shape.length,l=i?r.shape[u-2]:r.shape[u-1],h=a?o.shape[c-1]:o.shape[c-2],d=i?r.shape[u-1]:r.shape[u-2],f=a?o.shape[c-2]:o.shape[c-1],m=r.shape.slice(0,-2),p=o.shape.slice(0,-2),x=X(m),g=X(p),w=Tt(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([d,f]);k(l===h,()=>`Error in matMul: inner shapes (${l}) and (${h}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${i} and transposeB=${a} must match.`);const y=i?[x,l,d]:[x,d,l],v=a?[g,f,h]:[g,h,f],C=ae({inputs:{x:r},backend:e,attrs:{shape:y}}),D=ae({inputs:{x:o},backend:e,attrs:{shape:v}}),I=i?C.shape[1]:C.shape[2],$=i?C.shape[2]:C.shape[1],S=a?D.shape[1]:D.shape[2],E=Math.max(x,g),N=e.data.get(C.dataId).values,R=e.data.get(D.dataId).values,L=vt(C.shape),O=vt(D.shape),[_,j,G]=i?[L[0],1,L[1]]:[L[0],L[1],1],[q,J,nt]=a?[1,O[1],O[0]]:[O[1],1,O[0]],at=$*S,st=Ot([E,$,S],C.dtype),ct=st.values,ut=e.blockSize;for(let gt=0;gt<E;gt++){const wt=gt%x,It=gt%g;for(let yt=0;yt<$;yt+=ut){const Nt=Math.min(yt+ut,$);for(let Ft=0;Ft<S;Ft+=ut){const Ut=Math.min(Ft+ut,S);for(let Zt=0;Zt<I;Zt+=ut){const ue=Math.min(Zt+ut,I);for(let Kt=yt;Kt<Nt;Kt++)for(let Gt=Ft;Gt<Ut;Gt++){let se=0;for(let te=Zt;te<ue;te++){const as=N[wt*_+Kt*j+te*G],Ae=R[te*q+Gt*J+It*nt];se+=as*Ae}ct[gt*at+(Kt*S+Gt)]+=se}}}}}return e.disposeIntermediateTensorInfo(C),e.disposeIntermediateTensorInfo(D),e.makeTensorInfo(w,st.dtype,st.values)}const E3={kernelName:_c,backendName:"cpu",kernelFunc:Av};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N3(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:a}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:h}=s;let d,f,m;const p=[];d=Av({inputs:{a:r,b:o},attrs:{transposeA:u,transposeB:c},backend:e}),i&&(f=ti({inputs:{a:d,b:i},backend:e}),p.push(d),d=f),l&&(m=dc(e,d,l,a,h),p.push(d),d=m);for(const g of p)e.disposeIntermediateTensorInfo(g);return d}const A3={kernelName:Uu,backendName:"cpu",kernelFunc:N3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T3=Yt(sa,n=>Math.acos(n)),F3={kernelName:sa,backendName:"cpu",kernelFunc:T3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R3=Yt(ra,n=>Math.acosh(n)),_3={kernelName:ra,backendName:"cpu",kernelFunc:R3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O3(n){const{inputs:t,backend:e}=n,s=t;xt(t,"addN");const r=s.map(a=>e.data.get(a.dataId).values),o=Ot(s[0].shape,s[0].dtype),i=o.values;for(let a=0;a<s.length;a++){const u=r[a];for(let c=0;c<i.length;c++)i[c]+=u[c]}return e.makeTensorInfo(o.shape,o.dtype,o.values)}const M3={kernelName:Pd,backendName:"cpu",kernelFunc:O3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B3(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s;xt(r,"all");const a=Mt(o,r.shape);let u=a;const c=ge(u,r.shape.length);let l=r;c!=null&&(l=vn({inputs:{x:r},backend:e,attrs:{perm:c}}),u=$e(u.length,r.shape.length)),Xe("all",u,l.shape.length);const[h,d]=Ge(l.shape,u),f=X(d),m=en(X(h),l.dtype),p=e.data.get(l.dataId).values;for(let g=0;g<m.length;++g){const b=g*f;let w=p[b];for(let y=0;y<f;++y){const v=p[b+y];w=w&&v}m[g]=w}c!=null&&e.disposeIntermediateTensorInfo(l);const x=e.makeTensorInfo(h,l.dtype,m);if(i){const g=Ne(h,a),b=ae({inputs:{x},backend:e,attrs:{shape:g}});return e.disposeIntermediateTensorInfo(x),b}return x}const L3={kernelName:zd,backendName:"cpu",kernelFunc:B3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P3(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s;xt(r,"any");const a=Mt(o,r.shape);let u=a;const c=ge(u,r.shape.length);let l=r;c!=null&&(l=vn({inputs:{x:r},backend:e,attrs:{perm:c}}),u=$e(u.length,r.shape.length)),Xe("any",u,l.shape.length);const[h,d]=Ge(l.shape,u),f=X(d),m=en(X(h),l.dtype),p=e.data.get(l.dataId).values;for(let g=0;g<m.length;++g){const b=g*f;let w=p[b];for(let y=0;y<f;++y){const v=p[b+y];w=w||v}m[g]=w}c!=null&&e.disposeIntermediateTensorInfo(l);const x=e.makeTensorInfo(h,l.dtype,m);if(i){const g=Ne(h,a),b=ae({inputs:{x},backend:e,attrs:{shape:g}});return e.disposeIntermediateTensorInfo(x),b}return x}const z3={kernelName:Vd,backendName:"cpu",kernelFunc:P3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V3(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;xt(r,"argMax");let i=Mt(o,r.shape);const a=ge(i,r.shape.length);let u=r;const c=[];a!=null&&(u=vn({inputs:{x:r},backend:e,attrs:{perm:a}}),c.push(u),i=$e(i.length,u.shape.length)),i=[i[0]],Xe("argMax",i,u.shape.length);const[l,h]=Ge(u.shape,i),d=X(l),f=en(d,"int32"),m=X(h),p=e.data.get(u.dataId).values;for(let x=0;x<f.length;++x){const g=x*m;let b=p[g],w=0;for(let y=0;y<m;++y){const v=p[g+y];v>b&&(b=v,w=y)}f[x]=w}return c.forEach(x=>e.disposeIntermediateTensorInfo(x)),e.makeTensorInfo(l,"int32",f)}const W3={kernelName:Ac,backendName:"cpu",kernelFunc:V3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U3(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;xt(r,"argMin");let i=Mt(o,r.shape);const a=ge(i,r.shape.length);let u=r;const c=[];a!=null&&(u=vn({inputs:{x:r},backend:e,attrs:{perm:a}}),c.push(u),i=$e(i.length,u.shape.length)),i=[i[0]],Xe("argMin",i,u.shape.length);const[l,h]=Ge(u.shape,i),d=X(l),f=en(d,"int32"),m=X(h),p=e.data.get(u.dataId).values;for(let x=0;x<f.length;++x){const g=x*m;let b=p[g],w=0;for(let y=0;y<m;++y){const v=p[g+y];v<b&&(b=v,w=y)}f[x]=w}return c.forEach(x=>e.disposeIntermediateTensorInfo(x)),e.makeTensorInfo(l,"int32",f)}const G3={kernelName:Tc,backendName:"cpu",kernelFunc:U3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H3=Yt(oa,n=>Math.asin(n)),q3={kernelName:oa,backendName:"cpu",kernelFunc:H3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j3=Yt(ia,n=>Math.asinh(n)),K3={kernelName:ia,backendName:"cpu",kernelFunc:j3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X3=Yt(aa,n=>Math.atan(n)),Y3={kernelName:aa,backendName:"cpu",kernelFunc:X3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z3=Se((n,t)=>Math.atan2(n,t)),J3=Le(ca,Z3),Q3={kernelName:ca,backendName:"cpu",kernelFunc:J3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tO=Yt(ua,n=>Math.atanh(n)),eO={kernelName:ua,backendName:"cpu",kernelFunc:tO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mm(n,t,e,s,r,o){const i=r.strideHeight,a=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,l=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,p=Ot(r.outShape,e),x=p.values,g=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],w=r.outShape[3];for(let y=0;y<r.batchSize;++y){const v=y*g,C=y*s[0];for(let D=0;D<r.inChannels;++D)for(let I=0;I<r.outHeight;++I){const $=I*i-d,S=Math.max(0,$),E=Math.min(r.inHeight,l+$),N=v+I*b;for(let R=0;R<r.outWidth;++R){const L=R*a-f,O=Math.max(0,L),_=Math.min(r.inWidth,h+L);let j=m,G=0,q=0;for(let nt=S;nt<E;nt+=u){const at=C+nt*s[1];for(let st=O;st<_;st+=c){const ct=at+st*s[2],ut=n[ct+D];o==="max"&&ut>j?j=ut:o==="avg"&&(G+=ut,q++)}if(isNaN(j))break}const J=N+R*w+D;x[J]=o==="avg"?G/q:j}}}return p}function Tv(n,t,e,s,r=!1,o=!1){const i=Ot(s.outShape,"int32"),a=s.strideHeight,u=s.strideWidth,c=s.dilationHeight,l=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,f=s.padInfo.top,m=s.padInfo.left,p=Ot(t,e,n);for(let x=0;x<s.batchSize;++x)for(let g=0;g<s.inChannels;++g)for(let b=0;b<s.outHeight;++b){const w=b*a-f;let y=w;for(;y<0;)y+=c;const v=Math.min(s.inHeight,h+w);for(let C=0;C<s.outWidth;++C){const D=C*u-m;let I=D;for(;I<0;)I+=l;const $=Math.min(s.inWidth,d+D);let S=Number.NEGATIVE_INFINITY,E=-1;for(let N=y;N<v;N+=c){const R=N-w;for(let L=I;L<$;L+=l){const O=L-D,_=p.get(x,N,L,g);_>S&&(S=_,r?E=o?((x*s.inHeight+N)*s.inWidth+L)*s.inChannels+g:(N*s.inWidth+L)*s.inChannels+g:E=R*d+O)}}i.set(E,x,b,C,g)}}return i}function Fv(n,t,e,s,r,o){const i=r.strideDepth,a=r.strideHeight,u=r.strideWidth,c=r.dilationDepth,l=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,f=r.effectiveFilterHeight,m=r.effectiveFilterWidth,p=r.padInfo.front,x=r.padInfo.top,g=r.padInfo.left,b=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=Ot(r.outShape,e),y=w.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],C=r.outShape[2]*r.outShape[3]*r.outShape[4],D=r.outShape[3]*r.outShape[4],I=r.outShape[4];for(let $=0;$<r.batchSize;++$){const S=$*v,E=$*s[0];for(let N=0;N<r.inChannels;++N)for(let R=0;R<r.outDepth;++R){const L=R*i-p;let O=L;for(;O<0;)O+=c;const _=Math.min(r.inDepth,d+L),j=S+R*C;for(let G=0;G<r.outHeight;++G){const q=G*a-x;let J=q;for(;J<0;)J+=l;const nt=Math.min(r.inHeight,f+q),at=j+G*D;for(let st=0;st<r.outWidth;++st){const ct=st*u-g;let ut=ct;for(;ut<0;)ut+=h;const gt=Math.min(r.inWidth,m+ct),wt=at+st*I;let It=b,yt=0,Nt=0;for(let Ut=O;Ut<_;Ut+=c){const Zt=E+Ut*s[1];for(let ue=J;ue<nt;ue+=l){const Kt=Zt+ue*s[2];for(let Gt=ut;Gt<gt;Gt+=h){const se=Kt+Gt*s[3],te=n[se+N];if(o==="max"&&te>It?It=te:o==="avg"&&(yt+=te,Nt++),isNaN(It))break}if(isNaN(It))break}if(isNaN(It))break}const Ft=wt+N;y[Ft]=o==="avg"?yt/Math.max(Nt,1):It}}}}return w}function nO(n,t){const e=Ot(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,a=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,l=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let p=0;p<t.batchSize;++p)for(let x=0;x<t.inChannels;++x)for(let g=0;g<t.outDepth;++g){const b=g*s-d;let w=b;for(;w<0;)w+=i;const y=Math.min(t.inDepth,c+b);for(let v=0;v<t.outHeight;++v){const C=v*r-f;let D=C;for(;D<0;)D+=a;const I=Math.min(t.inHeight,l+C);for(let $=0;$<t.outWidth;++$){const S=$*o-m;let E=S;for(;E<0;)E+=u;const N=Math.min(t.inWidth,h+S);let R=Number.NEGATIVE_INFINITY,L=-1;for(let O=w;O<y;O+=i){const _=O-b;for(let j=D;j<I;j+=a){const G=j-C;for(let q=E;q<N;q+=u){const J=q-S,nt=n.get(p,O,j,q,x);nt>=R&&(R=nt,L=_*l*h+G*l+J)}}}e.set(L,p,g,v,$,x)}}}return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;xt(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:u}=s,c=1;k(nn(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const l=rs(r.shape,o,i,c,a,u);let h;if(l.filterWidth===1&&l.filterHeight===1&&jt(l.inShape,l.outShape))h=qs({inputs:{x:r},backend:e});else{const d=e.data.get(r.dataId).values,f=vt(r.shape),m=mm(d,r.shape,r.dtype,f,l,"avg");h=e.makeTensorInfo(l.outShape,r.dtype,m.values)}return h}const rO={kernelName:Fc,backendName:"cpu",kernelFunc:sO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:i,pad:a,dimRoundingMode:u,dataFormat:c}=s;xt(r,"avgPool3d");const l=rr(r.shape,o,i,1,a,u,c),h=e.data.get(r.dataId).values,d=Fv(h,r.shape,r.dtype,vt(r.shape),l,"avg");return e.makeTensorInfo(d.shape,"float32",d.values)}const iO={kernelName:Rc,backendName:"cpu",kernelFunc:oO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aO(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,{filterSize:i,strides:a,pad:u,dimRoundingMode:c}=s;xt([r,o],"avgPool3DGrad");const l=rr(o.shape,i,a,1,u,c),h=l.strideDepth,d=l.strideHeight,f=l.strideWidth,m=l.filterDepth,p=l.filterHeight,x=l.filterWidth,g=l.dilationDepth,b=l.dilationHeight,w=l.dilationWidth,y=l.effectiveFilterDepth,v=l.effectiveFilterHeight,C=l.effectiveFilterWidth,D=y-1-l.padInfo.front,I=C-1-l.padInfo.left,$=v-1-l.padInfo.top,S=Ot(o.shape,"float32"),E=1/(m*p*x),N=e.bufferSync(r);for(let R=0;R<l.batchSize;++R)for(let L=0;L<l.inChannels;++L)for(let O=0;O<l.inDepth;++O)for(let _=0;_<l.inHeight;++_)for(let j=0;j<l.inWidth;++j){const G=O-D,q=_-$,J=j-I;let nt=0;for(let at=0;at<y;at+=g){const st=(G+at)/h;if(!(st<0||st>=l.outDepth||Math.floor(st)!==st))for(let ct=0;ct<v;ct+=b){const ut=(q+ct)/d;if(!(ut<0||ut>=l.outHeight||Math.floor(ut)!==ut))for(let gt=0;gt<C;gt+=w){const wt=(J+gt)/f;if(wt<0||wt>=l.outWidth||Math.floor(wt)!==wt)continue;const It=N.get(R,st,ut,wt,L);nt+=It}}}S.set(nt*E,R,O,_,j,L)}return e.makeTensorInfo(S.shape,S.dtype,S.values)}const uO={kernelName:Ud,backendName:"cpu",kernelFunc:aO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cO(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,i=o;xt([r,o],"avgPoolGrad");const{filterSize:a,strides:u,pad:c}=s,l=rs(i.shape,a,u,1,c),h=l.strideHeight,d=l.strideWidth,f=l.filterHeight,m=l.filterWidth,p=l.dilationHeight,x=l.dilationWidth,g=l.effectiveFilterHeight,b=l.effectiveFilterWidth,w=b-1-l.padInfo.left,y=g-1-l.padInfo.top,v=Ot(i.shape,"float32"),C=1/(f*m),D=e.data.get(r.dataId).values,I=Ot(r.shape,"float32",D);for(let $=0;$<l.batchSize;++$)for(let S=0;S<l.inChannels;++S)for(let E=0;E<l.inHeight;++E)for(let N=0;N<l.inWidth;++N){const R=E-y,L=N-w;let O=0;for(let _=0;_<g;_+=p){const j=(R+_)/h;if(!(j<0||j>=l.outHeight||Math.floor(j)!==j))for(let G=0;G<b;G+=x){const q=(L+G)/d;if(q<0||q>=l.outWidth||Math.floor(q)!==q)continue;const J=I.get($,j,q,S);O+=J}}v.set(O*C,$,E,N,S)}return e.makeTensorInfo(v.shape,v.dtype,v.values)}const lO={kernelName:Wd,backendName:"cpu",kernelFunc:cO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,scale:o,offset:i,mean:a,variance:u}=t;k(a.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),xt([r,a,u,o,i],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);const l=e.data.get(r.dataId).values,h=e.data.get(a.dataId).values,d=e.data.get(u.dataId).values,f=o?e.data.get(o.dataId).values:new Float32Array([1]),m=i?e.data.get(i.dataId).values:new Float32Array([0]),p=new Float32Array(l.length),x=m.length,g=f.length,b=d.length,w=h.length;let y=0,v=0,C=0,D=0;for(let I=0;I<l.length;++I)p[I]=m[y++]+(l[I]-h[v++])*f[C++]/Math.sqrt(d[D++]+c),y>=x&&(y=0),v>=w&&(v=0),C>=g&&(C=0),D>=b&&(D=0);return e.makeTensorInfo(r.shape,r.dtype,p)}const dO={kernelName:qc,backendName:"cpu",kernelFunc:hO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,crops:i}=s;xt([r],"batchToSpaceND");const a=o.reduce((g,b)=>g*b),u=su(r.shape,o,a),c=ru(u.length,o.length),l=ou(r.shape,o,a),h=Ip(i,o.length),d=$p(l,i,o.length),f=ae({inputs:{x:r},backend:e,attrs:{shape:u}}),m=vn({inputs:{x:f},backend:e,attrs:{perm:c}}),p=ae({inputs:{x:m},backend:e,attrs:{shape:l}}),x=co({inputs:{x:p},backend:e,attrs:{begin:h,size:d}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(p),x}const pO={kernelName:Oc,backendName:"cpu",kernelFunc:fO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:i}=s,a=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,c=lm(a,u,o.dtype,o.shape,i);return e.makeTensorInfo([i],o.dtype,c)}const gO={kernelName:Gd,backendName:"cpu",kernelFunc:mO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xO(n){const{inputs:t,backend:e}=n,{s0:s,s1:r}=t,o=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,a=Tt(Array.from(o),Array.from(i));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const bO={kernelName:s1,backendName:"cpu",kernelFunc:xO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wO=Yt(da,(n,t)=>{const e=t;return n>e.clipValueMax?e.clipValueMax:n<e.clipValueMin?e.clipValueMin:n}),yO={kernelName:da,backendName:"cpu",kernelFunc:wO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vO=n=>{const{x:t}=n.inputs,e=n.backend,s=new Float32Array(X(t.shape)),r=e.data.get(t.dataId),o=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,a=e.data.get(o.dataId).values,u=e.data.get(i.dataId).values;for(let c=0;c<a.length;c++){const l=a[c],h=u[c];s[c]=Math.hypot(l,h)}return e.makeOutput(s,t.shape,"float32")},CO={kernelName:Mc,backendName:"cpu",kernelFunc:vO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ei(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.data.get(s.dataId).complexTensorInfos.imag,o=e.data.get(r.dataId).values;return e.makeTensorInfo(r.shape,r.dtype,o)}const DO={kernelName:cf,backendName:"cpu",kernelFunc:ei};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ni(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s,o=Mt(r,t[0].shape)[0],i=t.map(p=>p.shape);vp(i,o);let a=Bs(t.map(p=>p.shape),o);if(X(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);const u=t.filter(p=>X(p.shape)>0);if(u.length===1)return qs({inputs:{x:u[0]},backend:e});if(u[0].dtype==="complex64"){const p=u.map(y=>uo({inputs:{input:y},backend:e})),x=u.map(y=>ei({inputs:{input:y},backend:e})),g=ni({inputs:p,backend:e,attrs:{axis:o}}),b=ni({inputs:x,backend:e,attrs:{axis:o}}),w=Nn({inputs:{real:g,imag:b},backend:e});return p.forEach(y=>e.disposeIntermediateTensorInfo(y)),x.forEach(y=>e.disposeIntermediateTensorInfo(y)),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(b),w}const c=u.map(p=>{const g=[-1,X(p.shape.slice(o))];return ae({inputs:{x:p},backend:e,attrs:{shape:g}})}),l=c.map(p=>({vals:e.data.get(p.dataId).values,shape:p.shape}));a=Bs(c.map(p=>p.shape),1);const h=c[0].shape[0]===1,d=By(l,a,t[0].dtype,h),f=Bs(u.map(p=>p.shape),o),m=e.makeTensorInfo(f,t[0].dtype,d);return c.forEach(p=>e.disposeIntermediateTensorInfo(p)),m}const IO={kernelName:Bc,backendName:"cpu",kernelFunc:ni};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rv(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:i,pad:a,dataFormat:u,dilations:c,dimRoundingMode:l}=s;xt([r,o],"conv2d");const h=or(u),d=Ke(r.shape,o.shape,i,c,a,l,!1,h),f=d.filterHeight,m=d.filterWidth,p=d.dilationHeight,x=d.dilationWidth,g=d.padInfo.left,b=d.padInfo.top,w=d.dataFormat==="channelsLast",y=new je(d.outShape,r.dtype),v=vt(r.shape),C=vt(o.shape),D=v[0],I=w?v[1]:v[2],$=w?v[2]:1,S=w?1:v[1],E=y.strides[0],N=w?y.strides[1]:y.strides[2],R=w?y.strides[2]:1,L=w?1:y.strides[1],O=e.data.get(r.dataId).values,_=e.data.get(o.dataId).values,j=y.values;for(let G=0;G<d.batchSize;++G){const q=G*D,J=G*E;for(let nt=0;nt<d.outHeight;++nt){const at=J+nt*N,st=nt*d.strideHeight-b;for(let ct=0;ct<f;++ct){const ut=st+ct*p;if(ut<0||ut>=d.inHeight)continue;const gt=ct*C[0],wt=q+ut*I;for(let It=0;It<d.outWidth;++It){const yt=at+It*R,Nt=It*d.strideWidth-g;for(let Ft=0;Ft<m;++Ft){const Ut=Nt+Ft*x;if(Ut<0||Ut>=d.inWidth)continue;const Zt=gt+Ft*C[1],ue=wt+Ut*$;let Kt=Zt;for(let Gt=0;Gt<d.inChannels;++Gt){const se=O[ue+Gt*S];for(let te=0;te<d.outChannels;++te)j[yt+te*L]+=se*_[Kt+te];Kt+=d.outChannels}}}}}}return e.makeTensorInfo(y.shape,y.dtype,j)}const $O={kernelName:Lc,backendName:"cpu",kernelFunc:Rv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:i,pad:a,dataFormat:u,dimRoundingMode:c,filterShape:l}=s;xt([r,o],"conv2dBackpropFilter");const h=or(u),d=Ke(r.shape,l,i,1,a,c,!1,h),{strideHeight:f,strideWidth:m,filterHeight:p,filterWidth:x}=d,g=d.dataFormat==="channelsLast",b=new je(d.filterShape,"float32"),w=d.padInfo.left,y=d.padInfo.top,v=e.data.get(r.dataId).values,C=e.data.get(o.dataId).values,D=new je(r.shape,r.dtype,v),I=new je(o.shape,o.dtype,C);for(let $=0;$<p;++$){const S=Math.max(0,Math.ceil((y-$)/f)),E=Math.min(d.outHeight,(d.inHeight+y-$)/f);for(let N=0;N<x;++N){const R=Math.max(0,Math.ceil((w-N)/m)),L=Math.min(d.outWidth,(d.inWidth+w-N)/m);for(let O=0;O<d.inChannels;++O)for(let _=0;_<d.outChannels;++_){let j=0;for(let G=0;G<d.batchSize;++G)for(let q=S;q<E;++q){const J=$+q*f-y;for(let nt=R;nt<L;++nt){const at=N+nt*m-w;g?j+=D.get(G,J,at,O)*I.get(G,q,nt,_):j+=D.get(G,O,J,at)*I.get(G,_,q,nt)}}b.set(j,$,N,O,_)}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}const SO={kernelName:jd,backendName:"cpu",kernelFunc:kO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EO(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{inputShape:i,strides:a,pad:u,dataFormat:c,dimRoundingMode:l}=s;xt([r,o],"conv2dBackpropInput");const h=vt(o.shape),d=vt(r.shape);let f=or(c);const m=Ke(i,o.shape,a,1,u,l,!1,f),p=new je(m.inShape,"float32"),x=p.values,g=e.data.get(r.dataId).values,b=e.data.get(o.dataId).values,[w,y,v]=h,{batchSize:C,filterHeight:D,filterWidth:I,inChannels:$,inHeight:S,inWidth:E,outChannels:N,outHeight:R,outWidth:L,strideHeight:O,strideWidth:_}=m;f=m.dataFormat;const j=D-1-m.padInfo.top,G=I-1-m.padInfo.left,q=f==="channelsLast",J=p.strides[0],nt=q?p.strides[1]:p.strides[2],at=q?p.strides[2]:1,st=q?1:p.strides[1],ct=d[0],ut=q?d[1]:d[2],gt=q?d[2]:1,wt=q?1:d[1];for(let It=0;It<C;++It)for(let yt=0;yt<$;++yt)for(let Nt=0;Nt<S;++Nt){const Ft=Nt-j,Ut=Math.max(0,Math.ceil(Ft/O)),Zt=Math.min(R,(D+Ft)/O);for(let ue=0;ue<E;++ue){const Kt=ue-G,Gt=Math.max(0,Math.ceil(Kt/_)),se=Math.min(L,(I+Kt)/_);let te=0;for(let Ae=Ut;Ae<Zt;++Ae){const $s=Ae*O-Ft;for(let rn=Gt;rn<se;++rn){const A=rn*_-Kt,P=ct*It+ut*Ae+gt*rn,H=w*(D-1-$s)+y*(I-1-A)+v*yt;for(let Y=0;Y<N;++Y){const Q=g[P+wt*Y],Z=b[H+Y];te+=Q*Z}}}const as=J*It+nt*Nt+at*ue+st*yt;x[as]=te}}return e.makeTensorInfo(p.shape,p.dtype,p.values)}const NO={kernelName:Pc,backendName:"cpu",kernelFunc:EO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:i,pad:a,dilations:u}=s;xt([r,o],"conv3d");const c=Nr(r.shape,o.shape,i,u,a),{filterDepth:l,filterHeight:h,filterWidth:d,dilationDepth:f,dilationHeight:m,dilationWidth:p,padInfo:x}=c,g=x.front,b=x.left,w=x.top,y=new je(c.outShape,r.dtype),v=e.data.get(r.dataId).values,C=e.data.get(o.dataId).values,D=y.values,I=vt(r.shape),$=vt(o.shape);for(let S=0;S<c.batchSize;++S){const E=S*I[0],N=S*y.strides[0];for(let R=0;R<c.outDepth;++R){const L=N+R*y.strides[1],O=R*c.strideDepth-g;for(let _=0;_<l;++_){const j=O+_*f;if(j<0||j>=c.inDepth)continue;const G=_*$[0],q=E+j*I[1];for(let J=0;J<c.outHeight;++J){const nt=L+J*y.strides[2],at=J*c.strideHeight-w;for(let st=0;st<h;++st){const ct=at+st*m;if(ct<0||ct>=c.inHeight)continue;const ut=G+st*$[1],gt=q+ct*I[2];for(let wt=0;wt<c.outWidth;++wt){const It=nt+wt*c.outChannels,yt=wt*c.strideWidth-b;for(let Nt=0;Nt<d;++Nt){const Ft=yt+Nt*p;if(Ft<0||Ft>=c.inWidth)continue;const Ut=ut+Nt*$[2],Zt=gt+Ft*c.inChannels;let ue=Ut;for(let Kt=0;Kt<c.inChannels;++Kt){const Gt=v[Zt+Kt];for(let se=0;se<c.outChannels;++se)D[It+se]+=Gt*C[ue+se];ue+=c.outChannels}}}}}}}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}const TO={kernelName:zc,backendName:"cpu",kernelFunc:AO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:i,pad:a,filterShape:u}=s;xt([r,o],"conv3dBackpropFilterV2");const c=vt(r.shape),l=vt(o.shape),h=Nr(r.shape,u,i,1,a),d=h.strideDepth,f=h.strideHeight,m=h.strideWidth,p=h.filterDepth,x=h.filterHeight,g=h.filterWidth,b=new je(h.filterShape,"float32"),w=b.values,[y,v,C,D]=b.strides,I=e.data.get(o.dataId).values,[$,S,E,N]=l,R=e.data.get(r.dataId).values,[L,O,_,j]=c,G=h.padInfo.front,q=h.padInfo.left,J=h.padInfo.top;for(let nt=0;nt<p;++nt){const at=Math.max(0,Math.ceil((G-nt)/d)),st=Math.min(h.outDepth,(h.inDepth+G-nt)/d),ct=nt*y;for(let ut=0;ut<x;++ut){const gt=Math.max(0,Math.ceil((J-ut)/f)),wt=Math.min(h.outHeight,(h.inHeight+J-ut)/f),It=ut*v+ct;for(let yt=0;yt<g;++yt){const Nt=Math.max(0,Math.ceil((q-yt)/m)),Ft=Math.min(h.outWidth,(h.inWidth+q-yt)/m),Ut=yt*C+It;for(let Zt=0;Zt<h.inChannels;++Zt){const ue=Zt*D+Ut;for(let Kt=0;Kt<h.outChannels;++Kt){let Gt=0;for(let se=0;se<h.batchSize;++se){const te=se*L,as=se*$;for(let Ae=at;Ae<st;++Ae){const rn=(nt+Ae*d-G)*O+te,A=Ae*S+as;for(let P=gt;P<wt;++P){const Y=(ut+P*f-J)*_+rn,Q=P*E+A;for(let Z=Nt;Z<Ft;++Z){const it=(yt+Z*m-q)*j+Y,ft=Z*N+Q;Gt+=R[it+Zt]*I[ft+Kt]}}}}w[ue+Kt]=Gt}}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}const RO={kernelName:Kd,backendName:"cpu",kernelFunc:FO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _O(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{pad:i,strides:a,inputShape:u}=s;xt([r],"conv3dBackpropInputV2");const c=vt(r.shape),l=vt(o.shape),h=Nr(u,o.shape,a,1,i),d=new je(h.inShape,"float32"),f=d.values,[m,p,x,g]=d.strides,b=e.data.get(r.dataId).values,[w,y,v,C]=c,D=e.data.get(o.dataId).values,[I,$,S,E]=l,{batchSize:N,filterDepth:R,filterHeight:L,filterWidth:O,inChannels:_,inDepth:j,inHeight:G,inWidth:q,outChannels:J,outDepth:nt,outHeight:at,outWidth:st,strideDepth:ct,strideHeight:ut,strideWidth:gt}=h,wt=R-1-h.padInfo.front,It=L-1-h.padInfo.top,yt=O-1-h.padInfo.left;for(let Nt=0;Nt<N;++Nt)for(let Ft=0;Ft<_;++Ft)for(let Ut=0;Ut<j;++Ut){const Zt=Ut-wt,ue=Math.max(0,Math.ceil(Zt/ct)),Kt=Math.min(nt,(R+Zt)/ct);for(let Gt=0;Gt<G;++Gt){const se=Gt-It,te=Math.max(0,Math.ceil(se/ut)),as=Math.min(at,(L+se)/ut);for(let Ae=0;Ae<q;++Ae){const $s=Ae-yt,rn=Math.max(0,Math.ceil($s/gt)),A=Math.min(st,(O+$s)/gt);let P=0;for(let H=ue;H<Kt;++H){const Y=H*ct-Zt;for(let Q=te;Q<as;++Q){const Z=Q*ut-se;for(let dt=rn;dt<A;++dt){const it=dt*gt-$s,ft=w*Nt+y*H+v*Q+C*dt,ot=I*(R-1-Y)+$*(L-1-Z)+S*(O-1-it)+E*Ft;for(let Wt=0;Wt<J;++Wt){const ee=b[ft+Wt],ye=D[ot+Wt];P+=ee*ye}}}}f[m*Nt+p*Ut+x*Gt+g*Ae+Ft]=P}}}return e.makeTensorInfo(d.shape,d.dtype,d.values)}const OO={kernelName:Xd,backendName:"cpu",kernelFunc:_O};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MO=Yt(fa,n=>Math.cos(n)),BO={kernelName:fa,backendName:"cpu",kernelFunc:MO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LO=Yt(pa,n=>Math.cosh(n)),PO={kernelName:pa,backendName:"cpu",kernelFunc:LO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zO(n){const{inputs:t,backend:e,attrs:s}=n,{image:r,boxes:o,boxInd:i}=t,{cropSize:a,method:u,extrapolationValue:c}=s,[l,h,d,f]=r.shape,m=o.shape[0],[p,x]=a,g=Ot([m,p,x,f],"float32"),b=e.data.get(o.dataId).values,w=e.data.get(i.dataId).values,y=e.data.get(r.dataId).values,v=vt(r.shape),C=vt(g.shape);for(let D=0;D<m;D++){const I=D*4,$=b[I],S=b[I+1],E=b[I+2],N=b[I+3],R=w[D];if(R>=l)continue;const L=p>1?(E-$)*(h-1)/(p-1):0,O=x>1?(N-S)*(d-1)/(x-1):0;for(let _=0;_<p;_++){const j=p>1?$*(h-1)+_*L:.5*($+E)*(h-1);if(j<0||j>h-1){for(let G=0;G<x;G++)for(let q=0;q<f;q++){const J=q+G*C[2]+_*C[1]+D*C[0];g.values[J]=c}continue}if(u==="bilinear"){const G=Math.floor(j),q=Math.ceil(j),J=j-G;for(let nt=0;nt<x;nt++){const at=x>1?S*(d-1)+nt*O:.5*(S+N)*(d-1);if(at<0||at>d-1){for(let gt=0;gt<f;gt++){const wt=gt+nt*C[2]+_*C[1]+D*C[0];g.values[wt]=c}continue}const st=Math.floor(at),ct=Math.ceil(at),ut=at-st;for(let gt=0;gt<f;gt++){let wt=gt+st*v[2]+G*v[1]+R*v[0];const It=y[wt];wt=gt+ct*v[2]+G*v[1]+R*v[0];const yt=y[wt];wt=gt+st*v[2]+q*v[1]+R*v[0];const Nt=y[wt];wt=gt+ct*v[2]+q*v[1]+R*v[0];const Ft=y[wt],Ut=It+(yt-It)*ut,Zt=Nt+(Ft-Nt)*ut;wt=gt+nt*C[2]+_*C[1]+D*C[0],g.values[wt]=Ut+(Zt-Ut)*J}}}else for(let G=0;G<x;++G){const q=x>1?S*(d-1)+G*O:.5*(S+N)*(d-1);if(q<0||q>d-1){for(let at=0;at<f;at++){const st=at+G*C[2]+_*C[1]+D*C[0];g.values[st]=c}continue}const J=Math.round(q),nt=Math.round(j);for(let at=0;at<f;at++){const st=at+J*v[2]+nt*v[1]+R*v[0],ct=at+G*C[2]+_*C[1]+D*C[0];g.values[ct]=y[st]}}}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}const VO={kernelName:Zd,backendName:"cpu",kernelFunc:zO};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:i,reverse:a}=s;xt(r,"cumprod");const u=ge([o],r.shape.length);let c=r;u!=null&&(c=vn({inputs:{x:r},backend:e,attrs:{perm:u}}));const l=$e(1,r.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const h=Fn(c.dtype,"int32"),d=Md(X(c.shape),h),f=e.data.get(c.dataId).values,m=c.shape[c.shape.length-1],p=a?(g,b)=>g+m-b-1:(g,b)=>g+b;for(let g=0;g<f.length;g+=m)for(let b=0;b<m;b++){const w=p(g,b);if(b===0)d[w]=i?1:f[w];else{const y=p(g,b-1);d[w]=i?f[y]*d[y]:f[w]*d[y]}}const x=e.makeTensorInfo(c.shape,h,d);if(u!=null){const g=Ar(u),b=vn({inputs:{x},backend:e,attrs:{perm:g}});return e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(c),b}return x}const UO={kernelName:Yd,backendName:"cpu",kernelFunc:WO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:i,reverse:a}=s;xt(r,"cumsum");const u=ge([o],r.shape.length);let c=r;u!=null&&(c=vn({inputs:{x:r},backend:e,attrs:{perm:u}}));const l=$e(1,r.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const h=Fn(c.dtype,"int32"),d=en(X(c.shape),h),f=e.data.get(c.dataId).values,m=c.shape[c.shape.length-1],p=a?(g,b)=>g+m-b-1:(g,b)=>g+b;for(let g=0;g<f.length;g+=m)for(let b=0;b<m;b++){const w=p(g,b);if(b===0)d[w]=i?0:f[w];else{const y=p(g,b-1);d[w]=i?f[y]+d[y]:f[w]+d[y]}}const x=e.makeTensorInfo(c.shape,h,d);if(u!=null){const g=Ar(u),b=vn({inputs:{x},backend:e,attrs:{perm:g}});return e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(c),b}return x}const HO={kernelName:Vc,backendName:"cpu",kernelFunc:GO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:i,binaryOutput:a}=s;if(r.shape.length===1){const u=e.data.get(r.dataId).values,c=e.data.get(o.dataId).values,l=lm(u,c,o.dtype,o.shape,i);return e.makeTensorInfo([i],o.dtype,l)}else if(r.shape.length===2){const u=e.bufferSync(r),c=e.bufferSync(o),l=_y(u,c,i,a);return e.makeTensorInfo(l.shape,o.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const jO={kernelName:Jd,backendName:"cpu",kernelFunc:qO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockSize:o,dataFormat:i}=s;k(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const a=r.shape[0],u=r.shape[1],c=r.shape[2],l=r.shape[3],h=u*o,d=c*o,f=l/(o*o),m=e.data.get(r.dataId).values,p=new Float32Array(a*h*d*f);let x=0;for(let g=0;g<a;++g)for(let b=0;b<h;++b){const w=Math.floor(b/o),y=b%o;for(let v=0;v<d;++v){const C=Math.floor(v/o),D=v%o,I=(y*o+D)*f;for(let $=0;$<f;++$){const E=$+I+l*(C+c*(w+u*g));p[x++]=m[E]}}}return e.makeTensorInfo([a,h,d,f],r.dtype,p)}const XO={kernelName:Qd,backendName:"cpu",kernelFunc:KO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _v(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:i,pad:a,dilations:u,dimRoundingMode:c}=s;xt([r,o],"depthwiseConv2DNative");const l=vt(r.shape),h=vt(o.shape);let d=u;d==null&&(d=[1,1]),k(nn(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const f=Ke(r.shape,o.shape,i,d,a,c,!0),{filterHeight:m,filterWidth:p,dilationHeight:x,dilationWidth:g,padInfo:b}=f,w=b.left,y=b.top,v=f.outChannels/f.inChannels,C=new je(f.outShape,r.dtype),D=e.data.get(r.dataId).values,I=e.data.get(o.dataId).values,$=C.values;for(let S=0;S<f.batchSize;++S){const E=S*l[0],N=S*C.strides[0];for(let R=0;R<f.outHeight;++R){const L=N+R*C.strides[1],O=R*f.strideHeight-y;for(let _=0;_<m;++_){const j=O+_*x;if(j<0||j>=f.inHeight)continue;const G=_*h[0],q=E+j*l[1];for(let J=0;J<f.outWidth;++J){const nt=L+J*C.strides[2],at=J*f.strideWidth-w;for(let st=0;st<p;++st){const ct=at+st*g;if(ct<0||ct>=f.inWidth)continue;const ut=G+st*h[1],gt=q+ct*f.inChannels;let wt=nt,It=ut;for(let yt=0;yt<f.inChannels;++yt){const Nt=D[gt+yt];for(let Ft=0;Ft<v;++Ft)$[wt+Ft]+=Nt*I[It+Ft];wt+=v,It+=v}}}}}}return e.makeTensorInfo(C.shape,C.dtype,C.values)}const YO={kernelName:Wc,backendName:"cpu",kernelFunc:_v};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:i,dilations:a,pad:u,dimRoundingMode:c,filterShape:l}=s;xt([r,o],"depthwiseConv2dNativeBackpropFilter");const h=Ke(r.shape,l,i,a,u,c,!0),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:p}=h,x=new je(h.filterShape,"float32"),g=h.padInfo.left,b=h.padInfo.top,w=h.outChannels/h.inChannels,y=e.data.get(r.dataId).values,v=new je(r.shape,r.dtype,y),C=e.data.get(o.dataId).values,D=new je(o.shape,o.dtype,C);for(let I=0;I<m;++I){const $=Math.max(0,Math.ceil((b-I)/d)),S=Math.min(h.outHeight,(h.inHeight+b-I)/d);for(let E=0;E<p;++E){const N=Math.max(0,Math.ceil((g-E)/f)),R=Math.min(h.outWidth,(h.inWidth+g-E)/f);for(let L=0;L<h.outChannels;++L){const O=Math.trunc(L/w),_=L%w;let j=0;for(let G=0;G<h.batchSize;++G)for(let q=$;q<S;++q){const J=I+q*d-b;for(let nt=N;nt<R;++nt){const at=E+nt*f-g;j+=v.get(G,J,at,O)*D.get(G,q,nt,L)}}x.set(j,I,E,O,_)}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}const JO={kernelName:tf,backendName:"cpu",kernelFunc:ZO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QO(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{strides:i,dilations:a,pad:u,dimRoundingMode:c,inputShape:l}=s;xt([r,o],"depthwiseConv2DNativeBackpropInput");const h=vt(r.shape),d=vt(o.shape),f=Ke(l,o.shape,i,a,u,c,!0),m=new je(f.inShape,"float32"),p=m.values,[x,g,b]=m.strides,w=e.data.get(r.dataId).values,[y,v,C]=h,D=e.data.get(o.dataId).values,[I,$,S]=d,{batchSize:E,filterHeight:N,filterWidth:R,inChannels:L,inHeight:O,inWidth:_,outChannels:j,outHeight:G,outWidth:q,strideHeight:J,strideWidth:nt}=f,at=N-1-f.padInfo.top,st=R-1-f.padInfo.left,ct=j/L;for(let ut=0;ut<E;++ut)for(let gt=0;gt<L;++gt)for(let wt=0;wt<O;++wt){const It=wt-at,yt=Math.max(0,Math.ceil(It/J)),Nt=Math.min(G,(N+It)/J);for(let Ft=0;Ft<_;++Ft){const Ut=Ft-st,Zt=Math.max(0,Math.ceil(Ut/nt)),ue=Math.min(q,(R+Ut)/nt);let Kt=0;for(let Gt=yt;Gt<Nt;++Gt){const se=Gt*J-It;for(let te=Zt;te<ue;++te){const as=te*nt-Ut,Ae=y*ut+v*Gt+C*te,$s=I*(N-1-se)+$*(R-1-as)+S*gt;for(let rn=0;rn<ct;++rn){const A=gt*ct+rn,P=w[Ae+A],H=D[$s+rn];Kt+=P*H}}}p[x*ut+g*wt+b*Ft+gt]=Kt}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}const tM={kernelName:ef,backendName:"cpu",kernelFunc:QO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eM(n){const{inputs:t,backend:e}=n,{x:s}=t,r=X(s.shape),o=e.data.get(s.dataId).values,i=Ot([r,r],s.dtype),a=i.values;for(let c=0;c<o.length;c++)a[c*r+c]=o[c];const u=[...s.shape,...s.shape];return e.makeTensorInfo(u,i.dtype,i.values)}const nM={kernelName:r1,backendName:"cpu",kernelFunc:eM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sM={kernelName:Uc,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r}=n,{strides:o,pad:i,dilations:a}=e,u=t,c=u.data.get(s.dataId).values,l=s.shape.length,h=u.data.get(r.dataId).values,d=r.shape.length,{batchSize:f,inHeight:m,inWidth:p,inChannels:x,outHeight:g,outWidth:b,padInfo:w,strideHeight:y,strideWidth:v,filterHeight:C,filterWidth:D,dilationHeight:I,dilationWidth:$,outShape:S}=Ja(s.shape,r.shape,o,i,"NHWC",a),E=X(S),N=S.length,R=Ce(s.dtype,E);for(let O=0;O<f;++O)for(let _=0;_<g;++_){const j=_*y-w.top;for(let G=0;G<b;++G){const q=G*v-w.left;for(let J=0;J<x;++J){let nt=Number.MIN_SAFE_INTEGER;for(let st=0;st<C;++st){const ct=j+st*I;if(ct>=0&&ct<m)for(let ut=0;ut<D;++ut){const gt=q+ut*$;if(gt>=0&&gt<p){const wt=Os([O,ct,gt,J],l,vt(s.shape)),It=Os([st,ut,J],d,vt(r.shape)),yt=c[wt]+h[It];yt>nt&&(nt=yt)}}}const at=Os([O,_,G,J],N,vt(S));R[at]=nt}}}return{dataId:u.write(mo(R,s.dtype),S,s.dtype),shape:S,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rM={kernelName:Gh,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r,dy:o}=n,{strides:i,pad:a,dilations:u}=e,c=t,l=gs(s.shape,c.data.get(s.dataId).values),h=gs(r.shape,c.data.get(r.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:p,outHeight:x,outWidth:g,padInfo:b,strideHeight:w,strideWidth:y,filterHeight:v,filterWidth:C,dilationHeight:D,dilationWidth:I,outShape:$}=Ja(s.shape,r.shape,i,a,"NHWC",u);k(o.rank===$.length,()=>`Error in ${Gh}, dy must have the same rank as output ${$.length}, but got ${o.rank}`);const S=gs($,c.data.get(o.dataId).values),E=t1(r.shape,r.dtype);for(let R=0;R<d;++R)for(let L=0;L<x;++L){const O=L*w-b.top;for(let _=0;_<g;++_){const j=_*y-b.left;for(let G=0;G<p;++G){let q=Number.MIN_SAFE_INTEGER,J=0,nt=0;for(let at=0;at<v;++at){const st=O+at*D;if(st>=0&&st<f)for(let ct=0;ct<C;++ct){const ut=j+ct*I;if(ut>=0&&ut<m){const gt=l[R][st][ut][G]+h[at][ct][G];gt>q&&(q=gt,J=at,nt=ct)}}}E[J][nt][G]+=S[R][L][_][G]}}}return{dataId:c.write(mo(E,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oM={kernelName:Uh,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r,dy:o}=n,{strides:i,pad:a,dilations:u}=e,c=t,l=gs(s.shape,c.data.get(s.dataId).values),h=gs(r.shape,c.data.get(r.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:p,outHeight:x,outWidth:g,padInfo:b,strideHeight:w,strideWidth:y,filterHeight:v,filterWidth:C,dilationHeight:D,dilationWidth:I,outShape:$}=Ja(s.shape,r.shape,i,a,"NHWC",u);k(o.rank===$.length,()=>`Error in ${Uh}, dy must have the same rank as output ${$.length}, but got ${o.rank}`);const S=gs($,c.data.get(o.dataId).values),E=t1(s.shape,s.dtype);for(let R=0;R<d;++R)for(let L=0;L<x;++L){const O=L*w-b.top;for(let _=0;_<g;++_){const j=_*y-b.left;for(let G=0;G<p;++G){let q=Number.MIN_SAFE_INTEGER,J=O<0?0:O,nt=j<0?0:j;for(let at=0;at<v;++at){const st=O+at*D;if(st>=0&&st<f)for(let ct=0;ct<C;++ct){const ut=j+ct*I;if(ut>=0&&ut<m){const gt=l[R][st][ut][G]+h[at][ct][G];gt>q&&(q=gt,J=st,nt=ut)}}}E[R][J][nt][G]+=S[R][L][_][G]}}}return{dataId:c.write(mo(E,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iM(n){const{inputs:t,backend:e,attrs:s}=n,{image:r}=t,{canvas:o,options:i}=s,{contextOptions:a,imageOptions:u}=i||{},c=(u==null?void 0:u.alpha)||1,l=(a==null?void 0:a.contextType)||"2d";if(l!=="2d")throw new Error(`Context type ${a.contextType} is not supported by the CPU backend.`);const h=o.getContext(l,(a==null?void 0:a.contextAttributes)||{});if(h==null)throw new Error(`Could not get the context with ${l} type.`);const[d,f]=r.shape.slice(0,2),m=r.shape.length===2?1:r.shape[2],p=e.data.get(r.dataId).values,x=r.dtype==="float32"?255:1,g=new Uint8ClampedArray(f*d*4);for(let w=0;w<d*f;++w){const y=[0,0,0,255*c];for(let C=0;C<m;C++){const D=p[w*m+C];if(r.dtype==="float32"){if(D<0||D>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${D}.`)}else if(r.dtype==="int32"&&(D<0||D>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${D}.`);m===1?(y[0]=D*x,y[1]=D*x,y[2]=D*x):y[C]=D*x}const v=w*4;g[v+0]=Math.round(y[0]),g[v+1]=Math.round(y[1]),g[v+2]=Math.round(y[2]),g[v+3]=Math.round(y[3])}o.width=f,o.height=d;const b=new ImageData(g,f,d);return h.putImageData(b,0,0),r}const aM={kernelName:w2,backendName:"cpu",kernelFunc:iM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pu(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s;xt(r,"sum");let a;r.dtype==="bool"?a=Dr({inputs:{x:r},backend:e,attrs:{dtype:"int32"}}):a=qs({inputs:{x:r},backend:e});const u=a.shape.length,c=Mt(o,a.shape),l=ge(c,u);let h=c,d=a;l!=null&&(d=vn({inputs:{x:a},backend:e,attrs:{perm:l}}),h=$e(h.length,u)),Xe("sum",h,d.shape.length);const[f,m]=Ge(d.shape,h),p=Fn(d.dtype,"int32");let x=lc(e,f,p);const g=X(m),b=e.data.get(x.dataId).values,w=e.data.get(d.dataId).values;for(let y=0;y<b.length;++y){const v=y*g;let C=0;for(let D=0;D<g;++D)C+=w[v+D];b[y]=C}if(i){const y=Ne(x.shape,c),v=x;x=ae({inputs:{x},backend:e,attrs:{shape:y}}),e.disposeIntermediateTensorInfo(v)}return e.disposeIntermediateTensorInfo(a),l!=null&&e.disposeIntermediateTensorInfo(d),x}const uM={kernelName:Cl,backendName:"cpu",kernelFunc:pu};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cM(n){const{inputs:t,backend:e,attrs:s}=n,{equation:r}=s,o=t,{allDims:i,summedDims:a,idDims:u}=Rp(r,o.length);Op(i.length,u,o);const{path:c,steps:l}=Mp(a,u),h=l.length;let d=null,f=i.length;const m=[];for(let p=0;p<h;++p){for(const x of l[p]){const{permutationIndices:g,expandDims:b}=_p(f,u[x]);let w;Bp(g)?w=o[x]:(w=vn({inputs:{x:o[x]},backend:e,attrs:{perm:g}}),m.push(w));const y=w.shape.slice();for(let v=0;v<b.length;++v)y.splice(b[v],0,1);jt(w.shape,y)||(w=ae({inputs:{x:w},backend:e,attrs:{shape:y}}),m.push(w)),d===null?d=w:(d=th({inputs:{a:w,b:d},backend:e}),m.push(d))}p<h-1&&(c[p]>=0&&(d=pu({inputs:{x:d},backend:e,attrs:{axis:c[p]-(i.length-f),keepDims:!1}}),m.push(d)),f--)}for(const p of m)p!==d&&e.disposeIntermediateTensorInfo(p);return d}const lM={kernelName:nf,backendName:"cpu",kernelFunc:cM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hM(n){const{inputs:t,backend:e}=n,{dy:s,y:r}=t;xt([s,r],"eluGrad");const o=new Float32Array(X(r.shape)),i=e.data.get(r.dataId).values,a=e.data.get(s.dataId).values;for(let u=0;u<i.length;++u){const c=i[u];c>=0?o[u]=a[u]:o[u]=a[u]*(c+1)}return e.makeTensorInfo(r.shape,"float32",o)}const dM={kernelName:sf,backendName:"cpu",kernelFunc:hM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fM=kp,pM=Sp,mM=Ep,gM=Np,xM=Ap,bM=Tp,wM=Yt(xa,n=>{const t=Math.sign(n),e=Math.abs(n),s=1/(1+fM*e);return t*(1-((((bM*s+xM)*s+gM)*s+mM)*s+pM)*s*Math.exp(-e*e))}),yM={kernelName:xa,backendName:"cpu",kernelFunc:wM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fc(n){const{inputs:t,backend:e,attrs:s}=n,{input:r}=t,{dim:o}=s,i=r.shape.length,a=r.shape.slice();let u=o;return o<0&&(k(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+o+1),a.splice(u,0,1),ae({inputs:{x:r},backend:e,attrs:{shape:a}})}const vM={kernelName:Hc,backendName:"cpu",kernelFunc:fc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CM=Se((n,t)=>n/t),gm=Le(ma,CM),xd={kernelName:ma,backendName:"cpu",kernelFunc:gm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ov(n,t,e){const s=n.shape,r=s[0],o=s[1],i=e.data.get(n.dataId),a=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,c=[r,o],l=X(c),h=tn("float32",l),d=tn("float32",l);for(let x=0;x<r;x++){const g=co({inputs:{x:a},backend:e,attrs:{begin:[x,0],size:[1,o]}}),b=co({inputs:{x:u},backend:e,attrs:{begin:[x,0],size:[1,o]}}),w=Nn({inputs:{real:g,imag:b},backend:e}),{real:y,imag:v}=DM(w,t,e),C=er(y,v);for(let D=0;D<o;D++){const I=Fp(C,D);h[x*o+D]=I.real,d[x*o+D]=I.imag}e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(w)}const f=e.makeTensorInfo(c,"float32",h),m=e.makeTensorInfo(c,"float32",d),p=Nn({inputs:{real:f,imag:m},backend:e});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),p}function DM(n,t,e){const s=X(n.shape),r=e.data.get(n.dataId),o=e.data.get(r.complexTensorInfos.real.dataId).values,i=e.data.get(r.complexTensorInfos.imag.dataId).values;if(IM(s)){const a=bd(o,i,s,t,e),u=[n.shape[0],n.shape[1]];if(t){const c=e.makeTensorInfo(u,"float32",a.real),l=e.makeTensorInfo(u,"float32",a.imag),h=e.makeTensorInfo([],"float32",Sr(s,"float32")),d=qs({inputs:{x:h},backend:e}),f=xd.kernelFunc({inputs:{a:c,b:h},backend:e}),m=xd.kernelFunc({inputs:{a:l,b:d},backend:e}),p=e.data.get(f.dataId).values,x=e.data.get(m.dataId).values;return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),{real:p,imag:x}}return a}else{const a=er(o,i),u=$M(a,s,t);return Zx(u)}}function IM(n){return(n&n-1)===0}function bd(n,t,e,s,r){if(e===1)return{real:n,imag:t};const o=er(n,t),i=e/2,a=Jx(o),u=a.real,c=a.imag,l=[u.length],h=r.makeTensorInfo(l,"float32",u),d=r.makeTensorInfo(l,"float32",c),f=Nn({inputs:{real:h,imag:d},backend:r}),m=Qx(o),p=m.real,x=m.imag,g=[p.length],b=r.makeTensorInfo(g,"float32",p),w=r.makeTensorInfo(g,"float32",x),y=Nn({inputs:{real:b,imag:w},backend:r}),v=bd(u,c,i,s,r),C=v.real,D=v.imag,I=[C.length],$=r.makeTensorInfo(I,"float32",C),S=r.makeTensorInfo(I,"float32",D),E=Nn({inputs:{real:$,imag:S},backend:r}),N=bd(p,x,i,s,r),R=N.real,L=N.imag,O=[R.length],_=r.makeTensorInfo(O,"float32",R),j=r.makeTensorInfo(O,"float32",L),G=Nn({inputs:{real:_,imag:j},backend:r}),q=eb(e,s),J=[q.real.length],nt=r.makeTensorInfo(J,"float32",q.real),at=r.makeTensorInfo(J,"float32",q.imag),st=Nn({inputs:{real:nt,imag:at},backend:r}),ct=th({inputs:{a:st,b:G},backend:r}),ut=ti({inputs:{a:E,b:ct},backend:r}),gt=pm({inputs:{a:E,b:ct},backend:r}),wt=uo({inputs:{input:ut},backend:r}),It=uo({inputs:{input:gt},backend:r}),yt=ei({inputs:{input:ut},backend:r}),Nt=ei({inputs:{input:gt},backend:r}),Ft=ni({inputs:[wt,It],backend:r,attrs:{axis:0}}),Ut=ni({inputs:[yt,Nt],backend:r,attrs:{axis:0}}),Zt=r.data.get(Ft.dataId).values,ue=r.data.get(Ut.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(nt),r.disposeIntermediateTensorInfo(at),r.disposeIntermediateTensorInfo(st),r.disposeIntermediateTensorInfo(ct),r.disposeIntermediateTensorInfo(ut),r.disposeIntermediateTensorInfo(gt),r.disposeIntermediateTensorInfo(wt),r.disposeIntermediateTensorInfo(yt),r.disposeIntermediateTensorInfo(It),r.disposeIntermediateTensorInfo(Nt),r.disposeIntermediateTensorInfo(Ft),r.disposeIntermediateTensorInfo(Ut),{real:Zt,imag:ue}}function $M(n,t,e){const s=new Float32Array(t*2);for(let r=0;r<t;r++){let o=0,i=0;for(let a=0;a<t;a++){const u=nb(r*a,t,e),c=Fp(n,a);o+=c.real*u.real-c.imag*u.imag,i+=c.real*u.imag+c.imag*u.real}e&&(o/=t,i/=t),tb(s,o,i,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kM(n){const{inputs:t,backend:e}=n,{input:s}=t,r=X(s.shape),o=s.shape[s.shape.length-1],i=r/o,a=ae({inputs:{x:s},backend:e,attrs:{shape:[i,o]}}),u=Ov(a,!1,e),c=ae({inputs:{x:u},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(u),c}const SM={kernelName:rf,backendName:"cpu",kernelFunc:kM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xm(n){const{backend:t,attrs:e}=n,{shape:s,value:r,dtype:o}=e,i=o||ui(r),a=Ce(i,X(s));return NM(a,r,i),t.makeTensorInfo(s,i,a)}const EM={kernelName:of,backendName:"cpu",kernelFunc:xm};function NM(n,t,e){n.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AM={kernelName:af,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,r=e,o=tn(s.dtype,X(s.shape)),[i,a,u,c]=s.shape,l=r.data.get(s.dataId).values;for(let d=0;d<i;d++){const f=d*u*a*c;for(let m=0;m<a;m++){const p=m*(u*c);for(let x=0;x<u;x++){const g=x*c;for(let b=0;b<c;b++){const w=Math.round(u-x-1),y=f+p+g+b;let v=l[y];if(w>=0&&w<u){const C=w*c,D=f+p+C+b;v=l[D]}o[y]=v}}}}return{dataId:r.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=t,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:m}=s;let p=Rv({inputs:{x:r,filter:o},backend:e,attrs:{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d}});if(i){const x=p;if(l==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){const g=ae({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});p=ti({inputs:{a:p,b:g},backend:e}),e.disposeIntermediateTensorInfo(g)}else p=ti({inputs:{a:p,b:i},backend:e});e.disposeIntermediateTensorInfo(x)}if(f){const x=p;if(l==="NCHW"&&f==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const g=ae({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});p=dc(e,p,f,g,m),e.disposeIntermediateTensorInfo(g)}else p=dc(e,p,f,a,m);e.disposeIntermediateTensorInfo(x)}return p}const FM={kernelName:Gu,backendName:"cpu",kernelFunc:TM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=t,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:m}=s;let p=_v({inputs:{x:r,filter:o},backend:e,attrs:{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d}});if(i){const x=p;p=ti({inputs:{a:p,b:i},backend:e}),e.disposeIntermediateTensorInfo(x)}if(f){const x=p;p=dc(e,p,f,a,m),e.disposeIntermediateTensorInfo(x)}return p}const _M={kernelName:D1,backendName:"cpu",kernelFunc:RM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OM(n){const{inputs:t,backend:e}=n,{params:s,indices:r}=t,o=X(s.shape),i=r.shape,a=i[i.length-1],[u,c,l,h]=pp(s,r);if(c===0)return e.makeTensorInfo(u,s.dtype,[]);const d=e.data.get(r.dataId).values,f=e.bufferSync(s),m=Hy(d,f,s.dtype,c,a,l,h,s.shape,o);return e.makeTensorInfo(u,s.dtype,m.values)}const MM={kernelName:o1,backendName:"cpu",kernelFunc:OM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,indices:o}=t,{axis:i,batchDims:a}=s;xt([r,o],"gatherV2");const u=Mt(i,r.shape)[0],c=e.data.get(o.dataId).values,l=r.shape[u];for(let y=0;y<c.length;++y){const v=c[y];k(v<=l-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${l-1}]`)}let h=a;a==null&&(h=0);const d=X(o.shape),f=Pp(r,o,u,h),m=ae({inputs:{x:r},backend:e,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),p=ae({inputs:{x:o},backend:e,attrs:{shape:[f.batchSize,d/f.batchSize]}}),x=[f.batchSize,f.outerSize,d/f.batchSize,f.sliceSize],g=e.bufferSync(p),b=e.bufferSync(m),w=qy(b,g,x);return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(p),e.makeTensorInfo(f.outputShape,w.dtype,w.values)}const LM={kernelName:jc,backendName:"cpu",kernelFunc:BM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PM(n){const{inputs:t,backend:e}=n,{input:s}=t,r=X(s.shape),o=s.shape[s.shape.length-1],i=r/o,a=ae({inputs:{x:s},backend:e,attrs:{shape:[i,o]}}),u=Ov(a,!0,e),c=ae({inputs:{x:u},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(u),c}const zM={kernelName:uf,backendName:"cpu",kernelFunc:PM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VM=Yt(Ia,n=>Number.isFinite(n)?1:0,"bool"),WM={kernelName:Ia,backendName:"cpu",kernelFunc:VM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UM=Yt($a,n=>Math.abs(n)===1/0?1:0,"bool"),GM={kernelName:$a,backendName:"cpu",kernelFunc:UM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HM=Yt(ka,n=>Number.isNaN(n)?1:0,"bool"),qM={kernelName:ka,backendName:"cpu",kernelFunc:HM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jM(n){const{backend:t,attrs:e}=n,{start:s,stop:r,num:o}=e,i=Zy(s,r,o);return t.makeTensorInfo([i.length],"float32",i)}const KM={kernelName:i1,backendName:"cpu",kernelFunc:jM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XM=Yt(Ea,n=>Math.log1p(n)),YM={kernelName:Ea,backendName:"cpu",kernelFunc:XM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZM=Se((n,t)=>n&&t),JM=Le(Jc,ZM,null,"bool"),QM={kernelName:Jc,backendName:"cpu",kernelFunc:JM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tB=Yt(Qc,n=>n?0:1,"bool"),eB={kernelName:Qc,backendName:"cpu",kernelFunc:tB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nB=Se((n,t)=>n||t),sB=Le(tl,nB,null,"bool"),rB={kernelName:tl,backendName:"cpu",kernelFunc:sB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{depthRadius:o,bias:i,alpha:a,beta:u}=s;xt(r,"LRN");const c=r.shape[3],l=c-1,h=e.data.get(r.dataId).values,d=X(r.shape),f=new Float32Array(d);function m(p){const x=p%c;let g=p-x+Math.max(0,x-o);const b=p-x+Math.min(x+o,l);let w=0;for(;g<=b;g++){const y=h[g];w+=y*y}return w}for(let p=0;p<d;p++){const x=m(p),g=h[p]*Math.pow(i+a*x,-u);f[p]=g}return e.makeTensorInfo(r.shape,r.dtype,f)}const iB={kernelName:el,backendName:"cpu",kernelFunc:oB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,y:o,dy:i}=t,{depthRadius:a,bias:u,alpha:c,beta:l}=s;xt(i,"LRNGrad");const h=X(i.shape),d=i.shape[3],f=e.data.get(i.dataId).values,m=e.data.get(r.dataId).values,p=e.data.get(o.dataId).values,x=new Float32Array(h),g=h;for(let b=0;b<g;b++){const w=b%d,y=b-w+Math.max(0,w-a),v=b-w+Math.min(d,w+a+1);let C=0;for(let D=y;D<v;D++)C+=Math.pow(m[D],2);C=c*C+u;for(let D=y;D<v;D++){let I=-2*c*l*m[D]*p[b]/C;b===D&&(I+=Math.pow(C,-l)),I*=f[b],x[D]+=I}}return e.makeTensorInfo(i.shape,r.dtype,x)}const uB={kernelName:lf,backendName:"cpu",kernelFunc:aB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mv(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reductionIndices:o,keepDims:i}=s,a=e;let u=r.shape;const c=u.length,l=Mt(o,u);let h=l;const d=ge(h,c);let f=a.data.get(r.dataId).values;if(d!=null){const y=new Array(c);for(let v=0;v<y.length;v++)y[v]=u[d[v]];f=dm(f,u,r.dtype,d,y),h=$e(h.length,c),u=y}xt(r,"max"),Xe("max",h,c);const[m,p]=Ge(u,h),x=X(p),g=Qy(f,x,m,r.dtype),b=a.write(g,m,r.dtype);let w=m;return i&&(w=Ne(m,l)),{dataId:b,shape:w,dtype:r.dtype}}const cB={kernelName:nl,backendName:"cpu",kernelFunc:Mv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;xt(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:u}=s,c=1;k(nn(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const l=rs(r.shape,o,i,c,a,u);let h;if(l.filterWidth===1&&l.filterHeight===1&&jt(l.inShape,l.outShape))h=qs({inputs:{x:r},backend:e});else{const d=e.data.get(r.dataId).values,f=vt(r.shape),m=mm(d,r.shape,r.dtype,f,l,"max");h=e.makeTensorInfo(l.outShape,r.dtype,m.values)}return h}const hB={kernelName:sl,backendName:"cpu",kernelFunc:lB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:i,pad:a,dimRoundingMode:u,dataFormat:c}=s;xt(r,"maxPool3d");const l=rr(r.shape,o,i,1,a,u,c),h=e.data.get(r.dataId).values,d=Fv(h,r.shape,r.dtype,vt(r.shape),l,"max");return e.makeTensorInfo(d.shape,"float32",d.values)}const fB={kernelName:rl,backendName:"cpu",kernelFunc:dB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pB(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,{filterSize:i,strides:a,pad:u,dimRoundingMode:c}=s;xt([r,o],"maxPool3DGrad");const l=rr(o.shape,i,a,1,u,c),h=e.bufferSync(o),d=nO(h,l),f=l.strideDepth,m=l.strideHeight,p=l.strideWidth,x=l.dilationDepth,g=l.dilationHeight,b=l.dilationWidth,w=l.effectiveFilterDepth,y=l.effectiveFilterHeight,v=l.effectiveFilterWidth,C=w-1-l.padInfo.front,D=v-1-l.padInfo.left,I=y-1-l.padInfo.top,$=Ot(o.shape,"float32"),S=e.bufferSync(r);for(let E=0;E<l.batchSize;++E)for(let N=0;N<l.inChannels;++N)for(let R=0;R<l.inDepth;++R)for(let L=0;L<l.inHeight;++L)for(let O=0;O<l.inWidth;++O){const _=R-C,j=L-I,G=O-D;let q=0;for(let J=0;J<w;J+=x){const nt=(_+J)/f;if(!(nt<0||nt>=l.outDepth||Math.floor(nt)!==nt))for(let at=0;at<y;at+=g){const st=(j+at)/m;if(!(st<0||st>=l.outHeight||Math.floor(st)!==st))for(let ct=0;ct<v;ct+=b){const ut=(G+ct)/p;if(ut<0||ut>=l.outWidth||Math.floor(ut)!==ut)continue;const gt=w*y*v-1-d.get(E,nt,st,ut,N),wt=J*y*v+at*v+ct,It=gt===wt?1:0;if(It===0)continue;const yt=S.get(E,nt,st,ut,N);q+=yt*It}}}$.set(q,E,R,L,O,N)}return e.makeTensorInfo($.shape,$.dtype,$.values)}const mB={kernelName:df,backendName:"cpu",kernelFunc:pB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gB(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o,output:i}=t,a=o;xt([o,i],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:h}=s,d=rs(a.shape,u,c,1,l,h),f=e.data.get(a.dataId).values,m=Ot(d.outShape,a.dtype,Tv(f,a.shape,a.dtype,d).values),p=d.strideHeight,x=d.strideWidth,g=d.dilationHeight,b=d.dilationWidth,w=d.effectiveFilterHeight,y=d.effectiveFilterWidth,v=y-1-d.padInfo.left,C=w-1-d.padInfo.top,D=Ot(a.shape,"float32"),I=e.data.get(r.dataId).values,$=Ot(r.shape,"float32",I);for(let S=0;S<d.batchSize;++S)for(let E=0;E<d.inChannels;++E)for(let N=0;N<d.inHeight;++N)for(let R=0;R<d.inWidth;++R){const L=N-C,O=R-v;let _=0;for(let j=0;j<w;j+=g){const G=(L+j)/p;if(!(G<0||G>=d.outHeight||Math.floor(G)!==G))for(let q=0;q<y;q+=b){const J=(O+q)/x;if(J<0||J>=d.outWidth||Math.floor(J)!==J)continue;const nt=w*y-1-m.get(S,G,J,E),at=j*y+q,st=nt===at?1:0;if(st===0)continue;const ct=$.get(S,G,J,E);_+=ct*st}}D.set(_,S,N,R,E)}return e.makeTensorInfo(D.shape,D.dtype,D.values)}const xB={kernelName:hf,backendName:"cpu",kernelFunc:gB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bB(n,t,e,s,r){const o=vt(t),i=mm(n,t,e,o,r,"max"),a=Tv(n,t,e,r,!0,s);return[i.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wB={kernelName:a1,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=t,u=e;xt(s,"MaxPoolWithArgmax");const c=u.data.get(s.dataId).values,l=rs(s.shape,r,o,[1,1],i),[h,d]=bB(c,s.shape,s.dtype,a,l),f=u.write(h,l.outShape,s.dtype),m=u.write(d,l.outShape,s.dtype);return[{dataId:f,shape:l.outShape,dtype:s.dtype},{dataId:m,shape:l.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s,a=Mt(o,r.shape),c=Ge(r.shape,a)[1],l=X(c),h=[],d=e.makeTensorInfo([],"float32",new Float32Array([l]));h.push(d);const f=Dr({inputs:{x:r},backend:e,attrs:{dtype:"float32"}});h.push(f);const m=gm({inputs:{a:f,b:d},backend:e});h.push(m);const p=pu({inputs:{x:m},backend:e,attrs:{axis:o,keepDims:i}});return h.forEach(x=>e.disposeIntermediateTensorInfo(x)),p}const vB={kernelName:ol,backendName:"cpu",kernelFunc:yB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s;xt(r,"min");const a=Mt(o,r.shape);let u=a;const c=ge(u,r.shape.length);let l=r;c!=null&&(l=vn({inputs:{x:r},backend:e,attrs:{perm:c}}),u=$e(u.length,r.shape.length)),Xe("min",u,l.shape.length);const[h,d]=Ge(l.shape,u),f=X(d),m=en(X(h),l.dtype),p=e.data.get(l.dataId).values;for(let g=0;g<m.length;++g){const b=g*f;let w=p[b];for(let y=0;y<f;++y){const v=p[b+y];(Number.isNaN(v)||v<w)&&(w=v)}m[g]=w}c!=null&&e.disposeIntermediateTensorInfo(l);const x=e.makeTensorInfo(h,l.dtype,m);if(i){const g=Ne(h,a),b=ae({inputs:{x},backend:e,attrs:{shape:g}});return e.disposeIntermediateTensorInfo(x),b}return x}const DB={kernelName:il,backendName:"cpu",kernelFunc:CB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:o,mode:i}=s;xt(r,"mirrorPad");const a=o.map((w,y)=>w[0]+r.shape[y]+w[1]),u=o.map(w=>w[0]),c=o.map((w,y)=>w[0]+r.shape[y]),l=i==="reflect"?0:1,h=e.data.get(r.dataId).values,d=r.shape.length,f=vt(r.shape),m=X(a),p=a.length,x=vt(a),g=tn(r.dtype,m);for(let w=0;w<m;w++){let y=ci(w,p,x);for(let C=0;C<p;C++)y[C]<u[C]?y[C]=u[C]*2-y[C]-l:y[C]>=c[C]&&(y[C]=(c[C]-1)*2-y[C]+l);y=y.map((C,D)=>C-u[D]);const v=Os(y,d,f);g[w]=h[v]}return{dataId:e.write(g,a,r.dtype),shape:a,dtype:r.dtype}}const $B={kernelName:al,backendName:"cpu",kernelFunc:IB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kB=Se((n,t)=>{const e=n%t;return n<0&&t<0||n>=0&&t>=0?e:(e+t)%t}),SB=Le(Ta,kB),EB={kernelName:Ta,backendName:"cpu",kernelFunc:SB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bv(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{dim:o}=s,i=r.shape.length;let a=o;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);const u=Mt([a],r.shape),c=Mv({inputs:{x:r},backend:e,attrs:{reductionIndices:u,keepDims:!1}}),l=Ne(c.shape,u),h=ae({inputs:{x:c},backend:e,attrs:{shape:l}}),d=pm({inputs:{a:r,b:h},backend:e}),f=Vy({inputs:{x:d},backend:e}),m=pu({inputs:{x:f},backend:e,attrs:{axis:u,keepDims:!1}}),p=ae({inputs:{x:m},backend:e,attrs:{shape:l}}),x=gm({inputs:{a:f,b:p},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(p),x}const NB={kernelName:$l,backendName:"cpu",kernelFunc:Bv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AB(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{numSamples:o,seed:i,normalized:a}=s;xt(r,"multinomial");const u=a?r:Bv({inputs:{logits:r},backend:e,attrs:{dim:-1}}),c=u.shape[0],l=u.shape[1],h=e.data.get(u.dataId).values,d=[c,o],f=en(X(d),"int32");for(let m=0;m<c;++m){const p=m*l,x=new Float32Array(l-1);x[0]=h[p];for(let w=1;w<x.length;++w)x[w]=x[w-1]+h[p+w];const g=Ll.alea(i.toString()),b=m*o;for(let w=0;w<o;++w){const y=g();f[b+w]=x.length;for(let v=0;v<x.length;v++)if(y<x[v]){f[b+w]=v;break}}}return a||e.disposeIntermediateTensorInfo(u),e.makeTensorInfo(d,"int32",f)}const TB={kernelName:u1,backendName:"cpu",kernelFunc:AB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FB=up;function RB(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u}=s;xt(r,"NonMaxSuppression");const c=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values,{selectedIndices:h}=FB(c,l,i,a,u);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}const _B={kernelName:ff,backendName:"cpu",kernelFunc:RB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OB=cp;function MB(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:c}=s;xt(r,"NonMaxSuppressionPadded");const l=e.data.get(r.dataId).values,h=e.data.get(o.dataId).values,{selectedIndices:d,validOutputs:f}=OB(l,h,i,a,u,c);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}const BB={kernelName:pf,backendName:"cpu",kernelFunc:MB};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LB=lp;function PB(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,softNmsSigma:c}=s;xt(r,"NonMaxSuppressionWithScore");const l=e.data.get(r.dataId).values,h=e.data.get(o.dataId).values,d=i,f=a,m=u,p=c,{selectedIndices:x,selectedScores:g}=LB(l,h,d,f,m,p);return[e.makeTensorInfo([x.length],"int32",new Int32Array(x)),e.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const zB={kernelName:mf,backendName:"cpu",kernelFunc:PB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VB(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r}=t,{dtype:o,depth:i,onValue:a,offValue:u}=s;xt(r,"oneHot");const c=X(r.shape),l=new Float32Array(c*i);l.fill(u);const h=e.data.get(r.dataId).values;for(let d=0;d<c;++d)h[d]>=0&&h[d]<i&&(l[d*i+h[d]]=a);return e.makeTensorInfo([...r.shape,i],o,l)}const WB={kernelName:hl,backendName:"cpu",kernelFunc:VB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pc(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=uo({inputs:{input:s},backend:e}),o=pc({inputs:{x:r},backend:e}),i=ei({inputs:{input:s},backend:e}),a=pc({inputs:{x:i},backend:e}),u=Nn({inputs:{real:o,imag:a},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),u}else return xm({backend:e,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const UB={kernelName:El,backendName:"cpu",kernelFunc:pc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lv(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=uo({inputs:{input:s},backend:e}),o=Lv({inputs:{x:r},backend:e}),i=ei({inputs:{input:s},backend:e}),a=pc({inputs:{x:i},backend:e}),u=Nn({inputs:{real:o,imag:a},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),u}else return xm({backend:e,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const GB={kernelName:ll,backendName:"cpu",kernelFunc:Lv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pv(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s;if(t.length===1)return fc({inputs:{input:t[0]},backend:e,attrs:{dim:r}});const o=t[0].shape,i=t[0].dtype;t.forEach(l=>{Od(o,l.shape,"All tensors passed to stack must have matching shapes"),k(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],u=t.map(l=>{const h=fc({inputs:{input:l},backend:e,attrs:{dim:r}});return a.push(h),h}),c=ni({inputs:u,backend:e,attrs:{axis:r}});return a.forEach(l=>e.disposeIntermediateTensorInfo(l)),c}const HB={kernelName:dl,backendName:"cpu",kernelFunc:Pv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:o,constantValue:i}=s;xt(r,"pad");const a=o.map((b,w)=>b[0]+r.shape[w]+b[1]),u=o.map(b=>b[0]),c=e.data.get(r.dataId).values,l=X(r.shape),h=r.shape.length,d=vt(r.shape),f=X(a),m=a.length,p=vt(a),x=tn(r.dtype,f);i!==0&&x.fill(i);for(let b=0;b<l;b++){const y=ci(b,h,d).map((C,D)=>C+u[D]),v=Os(y,m,p);x[v]=c[b]}return{dataId:e.write(x,a,r.dtype),shape:a,dtype:r.dtype}}const zv={kernelName:fl,backendName:"cpu",kernelFunc:qB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jB=Se((n,t)=>Math.pow(n,t)),KB=Le(Ra,jB),XB={kernelName:Ra,backendName:"cpu",kernelFunc:KB};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YB(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=t,a=r.map(x=>e.data.get(x.dataId).values),u=r.map(x=>x.shape),c=e.data.get(o.dataId).values,l=e.data.get(i.dataId).values,[h,d,f]=ov(a,u,c,o.shape,o.dtype,l,i.shape),m=h.map(x=>e.makeTensorInfo([x.length],"int32",x)),p=e.makeTensorInfo(f,o.dtype,d);return m.concat([p])}const ZB={kernelName:c1,backendName:"cpu",kernelFunc:YB};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JB(n){const{inputs:t,backend:e}=n,{starts:s,limits:r,deltas:o}=t,i=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,[c,l]=iv(i,s.shape,s.dtype,a,r.shape,u,o.shape),h=e.makeTensorInfo([c.length],"int32",c),d=e.makeTensorInfo([l.length],s.dtype,l);return[h,d]}const QB={kernelName:l1,backendName:"cpu",kernelFunc:JB};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tL(n){const{inputs:t,backend:e,attrs:s}=n,{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=t,{rowPartitionTypes:u}=s,c=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values,h=e.data.get(i.dataId).values,d=a.map(x=>e.data.get(x.dataId).values),f=a.map(x=>x.shape),[m,p]=av(c,r.shape,l,o.shape,o.dtype,h,i.shape,d,f,u);return e.makeTensorInfo(m,o.dtype,p)}const eL={kernelName:h1,backendName:"cpu",kernelFunc:tL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nL(n){const{backend:t,attrs:e}=n,{start:s,stop:r,dtype:o,step:i}=e,a=uv(s,r,i,o);return t.makeTensorInfo([a.length],o,a)}const sL={kernelName:gf,backendName:"cpu",kernelFunc:nL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rL=Yt(_a,n=>1/n),oL={kernelName:_a,backendName:"cpu",kernelFunc:rL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iL(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:i,size:a}=s;xt(r,"resizeBilinear");const u=vt(r.shape),[c,l]=a,[h,d,f,m]=r.shape,p=e.data.get(r.dataId).values,x=new Float32Array(X([h,c,l,m])),g=[o&&c>1?d-1:d,o&&l>1?f-1:f],b=[o&&c>1?c-1:c,o&&l>1?l-1:l];let w=0;const y=g[0]/b[0],v=g[1]/b[1];for(let C=0;C<h;C++)for(let D=0;D<c;D++){let I;i?I=y*(D+.5)-.5:I=y*D;const $=Math.max(0,Math.floor(I)),S=I-$,E=Math.min(d-1,Math.ceil(I)),N=C*u[0]+$*u[1],R=C*u[0]+E*u[1];for(let L=0;L<l;L++){let O;i?O=v*(L+.5)-.5:O=v*L;const _=Math.max(0,Math.floor(O)),j=O-_,G=Math.min(f-1,Math.ceil(O)),q=N+_*u[2],J=R+_*u[2],nt=N+G*u[2],at=R+G*u[2];for(let st=0;st<m;st++){const ct=p[q+st],ut=p[J+st],gt=p[nt+st],wt=p[at+st],It=ct+(gt-ct)*j,yt=ut+(wt-ut)*j,Nt=It+(yt-It)*S;x[w++]=Nt}}}return e.makeTensorInfo([h,c,l,m],"float32",x)}const aL={kernelName:bl,backendName:"cpu",kernelFunc:iL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uL(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:i}=s;xt([o,r],"resizeBilinearGrad");const a=vt(r.shape),[u,c,l,h]=r.shape,[,d,f]=o.shape,m=new Float32Array(u*c*l*h),p=[i&&d>1?c-1:c,i&&f>1?l-1:l],x=[i&&d>1?d-1:d,i&&f>1?f-1:f],g=p[0]/x[0],b=p[1]/x[1],w=e.data.get(o.dataId).values;let y=0;for(let v=0;v<u;v++){const C=v*a[0];for(let D=0;D<d;D++){const I=D*g,$=Math.floor(I),S=Math.min(Math.ceil(I),c-1),E=C+$*a[1],N=C+S*a[1],R=I-$,L=1-R;for(let O=0;O<f;O++){const _=O*b,j=Math.floor(_),G=Math.min(Math.ceil(_),l-1),q=_-j,J=1-q,nt=E+j*a[2],at=E+G*a[2],st=N+j*a[2],ct=N+G*a[2],ut=L*J,gt=L*q,wt=R*J,It=R*q;for(let yt=0;yt<h;yt++){const Nt=w[y++];m[nt+yt]+=Nt*ut,m[at+yt]+=Nt*gt,m[st+yt]+=Nt*wt,m[ct+yt]+=Nt*It}}}}return e.makeTensorInfo([u,l,c,h],"float32",m)}const cL={kernelName:wf,backendName:"cpu",kernelFunc:uL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lL(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:i,size:a}=s;xt(r,"resizeNearestNeighbor");const u=vt(r.shape),[c,l]=a,[h,d,f,m]=r.shape,p=e.data.get(r.dataId).values,x=new Float32Array(h*c*l*m),g=[o&&c>1?d-1:d,o&&l>1?f-1:f],b=[o&&c>1?c-1:c,o&&l>1?l-1:l],w=g[0]/b[0],y=g[1]/b[1];let v=0;for(let C=0;C<h;C++){const D=C*u[0];for(let I=0;I<c;I++){const $=i?w*(I+.5):w*I;let S=Math.min(d-1,o?Math.round($):Math.floor($));i&&(S=Math.max(0,S));const E=D+S*u[1];for(let N=0;N<l;N++){const R=i?y*(N+.5):y*N;let L=Math.min(f-1,o?Math.round(R):Math.floor(R));i&&(L=Math.max(0,L));const O=E+L*u[2];for(let _=0;_<m;_++){const j=p[O+_];x[v++]=j}}}}return e.makeTensorInfo([h,c,l,m],r.dtype,x)}const hL={kernelName:xl,backendName:"cpu",kernelFunc:lL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dL(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:i}=s;xt([o,r],"resizeNearestNeighborGrad");const a=vt(r.shape),u=vt(o.shape),[c,l,h,d]=r.shape,[,f,m]=o.shape,p=new Float32Array(c*l*h*d),x=e.data.get(o.dataId).values,g=[i&&f>1?l-1:l,i&&m>1?h-1:h],b=[i&&f>1?f-1:f,i&&m>1?m-1:m],w=g[0]/b[0],y=g[1]/b[1],v=1/w,C=1/y,D=Math.ceil(v)*2+2,I=Math.ceil(C)*2+2;for(let $=0;$<c;$++){const S=$*a[0];for(let E=0;E<l;E++){const N=S+E*a[1],R=Math.floor(E*v),L=Math.floor(R-D/2);for(let O=0;O<h;O++){const _=N+O*a[2],j=Math.floor(O*C),G=Math.floor(j-I/2);for(let q=0;q<d;q++){let J=0;for(let nt=0;nt<D;nt++){const at=nt+L;if(at<0||at>=f)continue;const st=S+at*u[1],ct=at*w,ut=Math.min(l-1,i?Math.round(ct):Math.floor(ct));if(E===ut)for(let gt=0;gt<I;gt++){const wt=gt+G;if(wt<0||wt>=m)continue;const It=st+wt*u[2],yt=wt*y,Nt=Math.min(h-1,i?Math.round(yt):Math.floor(yt));O===Nt&&(J+=x[It+q])}}p[_+q]=J}}}}return e.makeTensorInfo(r.shape,r.dtype,p)}const fL={kernelName:bf,backendName:"cpu",kernelFunc:dL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dims:o}=s;xt(r,"reverse");const i=r.shape.length,a=Mt(o,r.shape);if(i===0)return qs({inputs:{x:r},backend:e});const u=new je(r.shape,r.dtype),c=e.bufferSync(r);for(let l=0;l<u.size;l++){const h=u.indexToLoc(l),d=h.slice();a.forEach(f=>d[f]=r.shape[f]-1-d[f]),u.set(c.get(...d),...h)}return e.makeTensorInfo(u.shape,u.dtype,u.values)}const mL={kernelName:wl,backendName:"cpu",kernelFunc:pL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gL={kernelName:kf,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=t,a=e,u=tn(s.dtype,X(s.shape)),[c,l,h,d]=s.shape,[f,m]=Dp(i,l,h),p=255,x=Math.sin(r),g=Math.cos(r),b=a.data.get(s.dataId).values;for(let y=0;y<c;y++){const v=y*h*l*d;for(let C=0;C<l;C++){const D=C*(h*d);for(let I=0;I<h;I++){const $=I*d;for(let S=0;S<d;S++){const E=[c,C,I,S],N=E[2],R=E[1];let L=(N-f)*g-(R-m)*x,O=(N-f)*x+(R-m)*g;L=Math.round(L+f),O=Math.round(O+m);let _=o;if(typeof o!="number"&&(S===3?_=p:_=o[S]),L>=0&&L<h&&O>=0&&O<l){const G=O*(h*d),q=L*d,J=v+G+q+S;_=b[J]}const j=v+D+$+S;u[j]=_}}}}return{dataId:a.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xL=Yt(Ba,n=>{const t=Math.floor(n);return n-t<.5?Math.floor(n):n-t>.5?Math.ceil(n):t%2===0?t:t+1}),bL={kernelName:Ba,backendName:"cpu",kernelFunc:xL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wL(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r,updates:o}=t,{shape:i}=s,{sliceRank:a,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=wo(o,r,i),d=!0,f=e.bufferSync(r),m=e.bufferSync(o),p=jr(f,m,i,h,c,u,a,l,0,d);return e.makeTensorInfo(i,p.dtype,p.values)}const yL={kernelName:d1,backendName:"cpu",kernelFunc:wL};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vL(n,t){let e=0,s=n.length,r=0;for(;e<s;)r=Math.floor((e+s)/2),n[r]<t?e=r+1:s=r;return s}function CL(n,t){let e=0,s=n.length,r=0;for(;e<s;)r=Math.floor((e+s)/2),n[r]<=t?e=r+1:s=r;return s}function DL(n,t,e,s,r,o){const i=Ce("int32",e*r);for(let a=0;a<e;++a){const u=n.slice(a*s,(a+1)*s),c=a*r;for(let l=0;l<r;++l)i[c+l]=o==="left"?vL(u,t[l+c]):CL(u,t[l+c])}return i}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IL(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:r,values:o}=t,{side:i}=s,a=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,c=DL(a,u,r.shape[0],r.shape[1],o.shape[1],i);return e.makeTensorInfo(o.shape,"int32",c)}const $L={kernelName:p1,backendName:"cpu",kernelFunc:IL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kL(n){const{inputs:t,backend:e}=n,{condition:s,t:r,e:o}=t;xt([s,r,o],"select");const i=s.shape.length,a=e.data.get(s.dataId).values,u=e.data.get(r.dataId).values,c=e.data.get(o.dataId).values,l=Fn(r.dtype,o.dtype),h=en(X(r.shape),l);let d=0;const f=i===0||i>1||r.shape.length===1?1:X(r.shape.slice(1));for(let m=0;m<a.length;m++)for(let p=0;p<f;p++)a[m]===1?h[d++]=u[m]:h[d++]=c[m];return e.makeTensorInfo(r.shape,l,h)}const SL={kernelName:yl,backendName:"cpu",kernelFunc:kL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EL=Vl,NL=Wl,AL=Yt(Pa,n=>n>=0?NL*n:EL*(Math.exp(n)-1)),TL={kernelName:Pa,backendName:"cpu",kernelFunc:AL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FL=Yt(Wa,n=>n<0?-1:n>0?1:0),RL={kernelName:Wa,backendName:"cpu",kernelFunc:FL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _L=Yt(za,n=>Math.sin(n)),OL={kernelName:za,backendName:"cpu",kernelFunc:_L};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ML=Yt(Va,n=>Math.sinh(n)),BL={kernelName:Va,backendName:"cpu",kernelFunc:ML};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LL=11920928955078125e-23,Xg=Math.log(LL)+2,PL=Yt(Ga,n=>{const t=n>-Xg,e=n<Xg,s=Math.exp(n);let r;return e?r=s:t?r=n:r=Math.log(1+s),r}),zL={kernelName:Ga,backendName:"cpu",kernelFunc:PL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,paddings:i}=s;xt([r],"spaceToBatchND");const a=X(o),u=[[0,0]];u.push(...i);for(let C=1+o.length;C<r.shape.length;++C)u.push([0,0]);const c=zv.kernelFunc({inputs:{x:r},backend:e,attrs:{paddings:u,constantValue:0}}),l=su(c.shape,o,a,!1),h=ru(l.length,o.length,!1),d=ou(c.shape,o,a,!1),p=ae({inputs:{x:c},backend:e,attrs:{shape:l}}),b=vn({inputs:{x:p},backend:e,attrs:{perm:h}}),v=ae({inputs:{x:b},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(b),v}const WL={kernelName:Dl,backendName:"cpu",kernelFunc:VL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UL(n){const{inputs:t,backend:e}=n,{indices:s,values:r,denseShape:o,defaultValue:i}=t;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=e.data.get(s.dataId).values,u=e.data.get(r.dataId).values,c=e.data.get(o.dataId).values,l=e.data.get(i.dataId).values[0],[h,d,f,m,p]=dv(a,s.shape,s.dtype,u,r.dtype,c,l);return[e.makeTensorInfo(d,s.dtype,h),e.makeTensorInfo([d[0]],r.dtype,f),e.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(x=>Number(x)))),e.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}const GL={kernelName:m1,backendName:"cpu",kernelFunc:UL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HL(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:r,newShape:o}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(e.data.get(r.dataId).values),a=e.data.get(s.dataId).values,u=Array.from(e.data.get(o.dataId).values),[c,l,h]=fv(a,s.shape,s.dtype,i,u);return[e.makeTensorInfo(l,s.dtype,c),e.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}const qL={kernelName:g1,backendName:"cpu",kernelFunc:HL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jL(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:o}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const i=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,[c,l]=fm(i,s.shape,s.dtype,a,u,!0);return e.makeTensorInfo(l,s.dtype,c)}const KL={kernelName:x1,backendName:"cpu",kernelFunc:jL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XL(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:o}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const i=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,[c,l]=fm(i,s.shape,s.dtype,a,u);return e.makeTensorInfo(l,s.dtype,c)}const YL={kernelName:b1,backendName:"cpu",kernelFunc:XL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZL(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=t,{outputShape:a}=s,{sliceRank:u,numUpdates:c,sliceSize:l,strides:h,outputSize:d}=wo(o,r,a),f=!1,m=e.bufferSync(r);let p;switch(o.dtype){case"bool":{const x=e.bufferSync(o),g=!!e.data.get(i.dataId).values[0];p=jr(m,x,a,d,l,c,u,h,g,f);break}case"float32":{const x=e.bufferSync(o),g=e.data.get(i.dataId).values[0];p=jr(m,x,a,d,l,c,u,h,g,f);break}case"int32":{const x=e.bufferSync(o),g=e.data.get(i.dataId).values[0];p=jr(m,x,a,d,l,c,u,h,g,f);break}case"string":{const x=e.bufferSync(o),g=br(e.data.get(i.dataId).values[0]);p=jr(m,x,a,d,l,c,u,h,g,f);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return e.makeTensorInfo(a,p.dtype,p.values)}const JL={kernelName:w1,backendName:"cpu",kernelFunc:ZL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{numOrSizeSplits:o,axis:i}=s,a=Mt(i,r.shape)[0],u=Lp(r,o,a),c=new Array(r.shape.length).fill(0),l=r.shape.slice();return u.map(h=>{const d=[...l];d[a]=h;const f=co({inputs:{x:r},backend:e,attrs:{begin:c,size:d}});return c[a]+=h,f})}const tP={kernelName:Il,backendName:"cpu",kernelFunc:QL};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eP={kernelName:yf,backendName:"cpu",kernelFunc:({inputs:n,backend:t})=>{const{x:e}=n,s=t;xt(e,"square");const r=s.data.get(e.dataId).values,o=new Float32Array(r.length);for(let a=0;a<r.length;++a){const u=r[a];o[a]=u*u}return{dataId:s.write(o,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nP=Yt(Za,(n,t)=>{const e=t;return isNaN(n)?NaN:n>0?1:e.alpha}),sP={kernelName:Za,backendName:"cpu",kernelFunc:nP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,end:i,strides:a,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:h,shrinkAxisMask:d}=s;xt(r,"stridedSlice");const{finalShapeSparse:f,finalShape:m,isIdentity:p,sliceDim0:x,isSimpleSlice:g,begin:b,end:w,strides:y}=wp(r.shape,o,i,a,u,c,l,h,d);let v;if(p)v=ae({inputs:{x:r},backend:e,attrs:{shape:m}});else if(x||g){k(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const C=gp(b,w,y),D=co({inputs:{x:r},backend:e,attrs:{begin:b,size:C}});v=ae({inputs:{x:D},backend:e,attrs:{shape:m}}),e.disposeIntermediateTensorInfo(D)}else{const C=e.bufferSync(r),D=gv(f,C,y,b);v=e.makeTensorInfo(m,D.dtype,D.values)}return v}const oP={kernelName:Cf,backendName:"cpu",kernelFunc:rP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iP(n){const{inputs:t,backend:e,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:u,preserveShortSequences:c}=s,{data:l,dataSplits:h}=t,d=e.data.get(l.dataId).values,f=e.data.get(h.dataId).values,[m,p]=xv(d,f,r,o,i,a,u,c);return[e.makeTensorInfo([m.length],"string",m),e.makeTensorInfo(h.shape,"int32",p)]}const aP={kernelName:y1,backendName:"cpu",kernelFunc:iP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uP(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:i}=t;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=e.data.get(o.dataId).values,u=e.data.get(i.dataId).values[0],[c,l,h]=bv(a,u,r),d=l.length;return[e.makeTensorInfo([d,2],"int32",c),e.makeTensorInfo([d],"string",l),e.makeTensorInfo([2],"int32",new Int32Array(h))]}const cP={kernelName:v1,backendName:"cpu",kernelFunc:uP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lP(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:r}=s,{input:o}=t;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=e.data.get(o.dataId).values,a=wv(i,r);return e.makeTensorInfo(o.shape,"int32",a)}const hP={kernelName:C1,backendName:"cpu",kernelFunc:lP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dP=Yt(Ka,n=>Math.tan(n)),fP={kernelName:Ka,backendName:"cpu",kernelFunc:dP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pP=Yt(Xa,n=>Math.tanh(n)),mP={kernelName:Xa,backendName:"cpu",kernelFunc:pP};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gP(n){const{inputs:t,backend:e}=n,{tensor:s,indices:r,updates:o}=t,{sliceRank:i,numUpdates:a,sliceSize:u,strides:c,outputSize:l}=wo(o,r,s.shape),h=!1,d=e.bufferSync(r),f=e.bufferSync(o),m=e.bufferSync(s),p=jr(d,f,s.shape,l,u,a,i,c,m,h);return e.makeTensorInfo(s.shape,p.dtype,p.values)}const xP={kernelName:f1,backendName:"cpu",kernelFunc:gP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reps:o}=s;xt(r,"tile");const i=vv(e.bufferSync(r),o);return e.makeTensorInfo(i.shape,i.dtype,i.values)}const wP={kernelName:Ya,backendName:"cpu",kernelFunc:bP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{k:o,sorted:i}=s;xt(r,"topk");const a=e.data.get(r.dataId).values,[u,c]=Dv(a,r.shape,r.dtype,o,i);return[e.makeTensorInfo(u.shape,u.dtype,u.values),e.makeTensorInfo(c.shape,c.dtype,c.values)]}const vP={kernelName:Df,backendName:"cpu",kernelFunc:yP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CP(n){const{inputs:t,attrs:e,backend:s}=n,{image:r,transforms:o}=t,{interpolation:i,fillMode:a,fillValue:u,outputShape:c}=e,[l,h,d,f]=r.shape,[m,p]=c??[h,d],x=[l,m,p,f],g=vt(r.shape),b=g[0],w=g[1],y=g[2],v=vt(x),C=v[0],D=v[1],I=v[2],$=tn(r.dtype,X(x));$.fill(u);const S=s.data.get(r.dataId).values,E=s.data.get(o.dataId).values;for(let R=0;R<l;++R){const L=o.shape[0]===1?E:E.subarray(R*8,R*8+8);for(let O=0;O<m;++O)for(let _=0;_<p;++_)for(let j=0;j<f;++j){let G;const q=L[6]*_+L[7]*O+1;if(q===0)continue;const J=(L[0]*_+L[1]*O+L[2])/q,nt=(L[3]*_+L[4]*O+L[5])/q,at=Yg(J,d,a),st=Yg(nt,h,a);switch(i){case"nearest":G=EP(S,h,d,b,w,y,R,st,at,j,u);break;case"bilinear":G=NP(S,h,d,b,w,y,R,st,at,j,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const ct=R*C+O*D+_*I+j;$[ct]=G}return s.makeTensorInfo(x,r.dtype,$)}return{dataId:s.write($,x,r.dtype),shape:r.shape,dtype:r.dtype}}const DP={kernelName:If,backendName:"cpu",kernelFunc:CP};function Yg(n,t,e){switch(e){case"reflect":return IP(n,t);case"wrap":return $P(n,t);case"nearest":return SP(n,t);case"constant":default:return kP(n)}}function IP(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=2*t;e<s&&(e=s*Math.trunc(-e/s)+e),e=e<-t?e+s:-e-1}else if(e>t-1)if(t<=1)e=0;else{const s=2*t;e-=s*Math.trunc(e/s),e>=t&&(e=s-e-1)}return Zr(0,e,t-1)}function $P(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=t-1;e+=t*(Math.trunc(-e/s)+1)}else if(e>t-1)if(t<=1)e=0;else{const s=t-1;e-=t*Math.trunc(e/s)}return Zr(0,e,t-1)}function kP(n,t){return n}function SP(n,t){return Zr(0,n,t-1)}function Bi(n,t,e,s,r,o,i,a,u,c,l){const h=i*s+a*r+u*o+c;return 0<=a&&a<t&&0<=u&&u<e?n[h]:l}function EP(n,t,e,s,r,o,i,a,u,c,l){const h=Math.round(a),d=Math.round(u);return Bi(n,t,e,s,r,o,i,h,d,c,l)}function NP(n,t,e,s,r,o,i,a,u,c,l){const h=Math.floor(a),d=Math.floor(u),f=h+1,m=d+1,p=(m-u)*Bi(n,t,e,s,r,o,i,h,d,c,l)+(u-d)*Bi(n,t,e,s,r,o,i,h,m,c,l),x=(m-u)*Bi(n,t,e,s,r,o,i,f,d,c,l)+(u-d)*Bi(n,t,e,s,r,o,i,f,m,c,l);return(f-a)*p+(a-h)*x}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AP(n){const{inputs:t,attrs:e,backend:s}=n,{axis:r}=e,{x:o}=t;xt(o,"unique");const i=s.data.get(o.dataId).values,{outputValues:a,outputShape:u,indices:c}=Iv(i,r,o.shape,o.dtype);return[s.makeTensorInfo(u,o.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}const TP={kernelName:$f,backendName:"cpu",kernelFunc:AP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FP(n){const{inputs:t,backend:e,attrs:s}=n,{value:r}=t;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r.shape.length,a=r.shape[o],u=new Array(i-1);let c=0;for(let f=0;f<i;f++)f!==o&&(u[c++]=r.shape[f]);const l=new Array(i).fill(0),h=r.shape.slice();h[o]=1;const d=new Array(a);for(let f=0;f<d.length;f++){l[o]=f;const m=co({inputs:{x:r},backend:e,attrs:{begin:l,size:h}});d[f]=ae({inputs:{x:m},backend:e,attrs:{shape:u}}),e.disposeIntermediateTensorInfo(m)}return d}const RP={kernelName:kl,backendName:"cpu",kernelFunc:FP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _P(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,segmentIds:o}=t,{numSegments:i}=s;xt(r,"unsortedSegmentSum");const a=r.shape.length,u=o.shape.length,c=[],l=[],h=a-u;let d=o;for(let m=0;m<h;++m){const p=fc({inputs:{input:d},backend:e,attrs:{dim:m+1}});d=p,l.push(p)}for(let m=0;m<i;++m){const p=Sr(m,"int32"),x=e.makeTensorInfo([],"int32",p),g=Py({inputs:{a:x,b:d},backend:e}),b=Dr({inputs:{x:g},backend:e,attrs:{dtype:"float32"}}),w=th({inputs:{a:b,b:r},backend:e}),y=pu({inputs:{x:w},backend:e,attrs:{axis:0,keepDims:!1}});c.push(y),l.push(x),l.push(g),l.push(b),l.push(w),l.push(y)}const f=Pv({inputs:c,backend:e,attrs:{axis:0}});return l.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}const OP={kernelName:Sl,backendName:"cpu",kernelFunc:_P};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MP=[A3,l_,F3,_3,g_,M3,L3,z3,W3,G3,q3,K3,Y3,Q3,eO,rO,iO,uO,lO,E3,dO,pO,gO,b_,bO,p_,y_,yO,h_,CO,IO,$O,SO,NO,TO,RO,OO,BO,PO,VO,UO,HO,jO,XO,YO,JO,tM,nM,sM,rM,oM,aM,lM,v3,dM,v_,yM,C_,vM,I_,SM,EM,AM,k_,E_,FM,_M,MM,LM,A_,F_,d_,zM,DO,WM,GM,qM,C3,__,M_,KM,L_,YM,QM,eB,rB,iB,uB,cB,z_,hB,fB,mB,xB,wB,vB,DB,W_,$B,EB,TB,G_,q_,_B,BB,zB,K_,WB,GB,HB,zv,XB,I3,Z_,ZB,QB,eL,sL,f_,xd,oL,$3,k3,S3,aL,cL,hL,fL,mL,gL,bL,o3,yL,$L,SL,TL,a3,RL,OL,BL,u3,NB,zL,WL,GL,qL,KL,YL,JL,tP,h3,eP,f3,m3,sP,oP,aP,cP,hP,w3,uM,fP,mP,xP,wP,vP,DP,X_,TP,RP,OP,UB];for(const n of MP)I1(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gr={},Nu={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function BP(n,t){Gr[n]=t}function Cs(n,t){if(!(n in Gr)||t!=null){const s=PP(n,t);if(s!==null)Gr[n]=s;else return console.log("Could not get context for WebGL version",n),null}const e=Gr[n];return e==null||e.isContextLost()?(delete Gr[n],Cs(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Gr[n])}function LP(n){if(!U().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function PP(n,t){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=t??LP(n);return e.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Gr[n]},!1),U().getBool("SOFTWARE_WEBGL_ENABLED")&&(Nu.failIfMajorPerformanceCaveat=!1),n===1?e.getContext("webgl",Nu)||e.getContext("experimental-webgl",Nu):e.getContext("webgl2",Nu)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Yi;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Yi||(Yi={}));var zn;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(zn||(zn={}));var qe;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(qe||(qe={}));function mu(n,t){return[t,n]}function zP(n,t){return n*t}function Au(n){const t=X(n),e=Math.ceil(t/4);return Ph(e)}function gi(n,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(n/2))]}function VP(n,t){const[e,s]=gi(n,t);return e*s*4}function bm(n,t){const e=n;let s,r,o,i,a,u,c,l,h,d;return U().getNumber("WEBGL_VERSION")===2?(s=e.R32F,r=e.R16F,o=e.RGBA16F,i=e.RGBA32F,a=e.RED,c=4,l=1,h=e.HALF_FLOAT,d=e.FLOAT,u=e.RGBA8):(s=n.RGBA,r=n.RGBA,o=n.RGBA,i=e.RGBA,a=n.RGBA,c=4,l=4,h=t!=null?t.HALF_FLOAT_OES:null,d=n.FLOAT,u=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pt(n,t){const e=t();return U().getBool("DEBUG")&&WP(n),e}function WP(n){const t=n.getError();if(t!==n.NO_ERROR)throw new Error("WebGL Error: "+qP(n,t))}const UP=596e-10,GP=65504;function HP(n){return!!(U().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||UP<Math.abs(n)&&Math.abs(n)<GP)}function qP(n,t){switch(t){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Tu(n,t){return ir(n,()=>n.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function jP(n,t){const e=ir(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(pt(n,()=>n.shaderSource(e,t)),pt(n,()=>n.compileShader(e)),n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function KP(n,t){const e=ir(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(pt(n,()=>n.shaderSource(e,t)),pt(n,()=>n.compileShader(e)),U().get("ENGINE_COMPILE_ONLY"))return e;if(n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw Vv(t,n.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}const XP=/ERROR: [0-9]+:([0-9]+):/g;function Vv(n,t){const e=XP.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(n);return}const s=+e[1],r=n.split(`
`),o=r.length.toString().length+2,i=r.map((h,d)=>Lo((d+1).toString(),o)+h);let a=0;for(let h=0;h<i.length;h++)a=Math.max(i[h].length,a);const u=i.slice(0,s-1),c=i.slice(s-1,s),l=i.slice(s);console.log(u.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${Lo(c[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function YP(n){return ir(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function ZP(n,t){if(pt(n,()=>n.linkProgram(t)),!U().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(t,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Eh(n,t){if(pt(n,()=>n.validateProgram(t)),n.getProgramParameter(t,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function JP(n,t){const e=ir(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return pt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),pt(n,()=>n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function QP(n,t){const e=ir(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return pt(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e)),pt(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function t4(n){return ir(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function e4(n,t){const e=U().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||t<=0){const s=`[${n}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>e||t>e){const s=`[${n}x${t}]`,r=`[${e}x${e}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function n4(n){return ir(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Zg(n,t,e,s,r,o,i){const a=n.getAttribLocation(t,e);return a===-1?!1:(pt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),pt(n,()=>n.vertexAttribPointer(a,r,n.FLOAT,!1,o,i)),pt(n,()=>n.enableVertexAttribArray(a)),!0)}function s4(n,t,e){u4(n,e),pt(n,()=>n.activeTexture(n.TEXTURE0+e)),pt(n,()=>n.bindTexture(n.TEXTURE_2D,t))}function r4(n,t,e){return ir(n,()=>n.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function o4(n,t,e){return n.getUniformLocation(t,e)}function i4(n,t,e,s){pt(n,()=>s4(n,t,s)),pt(n,()=>n.uniform1i(e,s))}function Nh(n,t,e){pt(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),pt(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0))}function Jg(n,t){pt(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),pt(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Fu(n){const t=n.checkFramebufferStatus(n.FRAMEBUFFER);if(t!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+a4(n,t))}function a4(n,t){switch(t){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function ir(n,t,e){const s=pt(n,()=>t());if(s==null)throw new Error(e);return s}function u4(n,t){const e=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+n.TEXTURE0;if(s<n.TEXTURE0||s>e){const r=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${r}.`)}}function si(n,t=2){return X(n.slice(0,n.length-t))}function ri(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Ru(n){let t=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(t=[si(n),...ri(n)]),t}function c4(n,t=!1){let e=U().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=U().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&U().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=e/2),t&&(e=e*2,s=s*2,n=n.map((a,u)=>u>=n.length-2?_d(n[u]):n[u]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=kr(n).newShape);let r=X(n),o=null;n.length<=1&&r<=e?o=[1,r]:n.length===2&&n[0]<=e&&n[1]<=e?o=n:n.length===3&&n[0]*n[1]<=e&&n[2]<=e?o=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=e&&n[1]*n[2]<=e?o=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=e&&n[3]<=e?o=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=e&&n[1]*n[2]*n[3]<=e&&(o=[n[0],n[1]*n[2]*n[3]]);const i=o!=null&&Math.max(...o)>s&&Math.min(...o)<=(t?2:1)&&Math.min(...o)>0;if(o==null||i)if(t){const a=si(n);let u=2,c=2;n.length&&([u,c]=ri(n)),r=a*(u/2)*(c/2),o=Ph(r).map(l=>l*2)}else o=Ph(r);return o}function _u(n){return n%2===0}function mc(n,t){if(n=n.slice(-2),t=t.slice(-2),jt(n,t)||!n.length||!t.length||n[0]===0||n[1]===0||t[0]===0||t[1]===0)return!0;if(n.length!==t.length){const e=n[n.length-1],s=t[t.length-1];if(e===s||_u(e)&&_u(s)&&(n[0]===1||t[0]===1))return!0}return n[1]===t[1]&&_u(n[0])&&_u(t[0])}let Ah,Th;function l4(n){if(Ah==null){const t=Cs(n);Ah=t.getParameter(t.MAX_TEXTURE_SIZE)}return Ah}function h4(n){if(Th==null){const t=Cs(n);Th=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Th)}function d4(n){if(n===0)return 0;let t;const e=Cs(n);return es(e,"EXT_disjoint_timer_query_webgl2")&&n===2?t=2:es(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function es(n,t){return n.getExtension(t)!=null}function Qg(n){try{if(Cs(n)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function f4(n){if(n===0)return!1;const t=Cs(n);if(n===1){if(!es(t,"OES_texture_float"))return!1}else if(!es(t,"EXT_color_buffer_float"))return!1;return wd(t)}function p4(n){if(n===0)return!1;const t=Cs(n);if(n===1){if(!es(t,"OES_texture_float")||!es(t,"WEBGL_color_buffer_float"))return!1}else{if(es(t,"EXT_color_buffer_float"))return wd(t);const s="EXT_color_buffer_half_float";if(es(t,s)){const r=t.getExtension(s);return m4(t,r)}return!1}return wd(t)}function wd(n){const t=bm(n),e=n.createTexture();n.bindTexture(n.TEXTURE_2D,e);const s=1,r=1;n.texImage2D(n.TEXTURE_2D,0,t.internalFormatFloat,s,r,0,t.textureFormatFloat,t.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(e),n.deleteFramebuffer(o),i}function m4(n,t){const e=bm(n,t),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s);const r=1,o=1;n.texImage2D(n.TEXTURE_2D,0,e.internalFormatHalfFloat,r,o,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(i),a}function g4(n){return n!==2?!1:Cs(n).fenceSync!=null}function gu(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&k(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bt=U();bt.registerFlag("HAS_WEBGL",()=>bt.getNumber("WEBGL_VERSION")>0);bt.registerFlag("WEBGL_VERSION",()=>Qg(2)?2:Qg(1)?1:0);bt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);bt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>bt.get("WEBGL_VERSION")===2);bt.registerFlag("WEBGL_CPU_FORWARD",()=>!0);bt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);bt.registerFlag("WEBGL_PACK",()=>bt.getBool("HAS_WEBGL"));bt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_PACK_CLIP",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_PACK_REDUCE",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_LAZILY_UNPACK",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_CONV_IM2COL",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>l4(bt.getNumber("WEBGL_VERSION")));bt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>h4(bt.getNumber("WEBGL_VERSION")));bt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=bt.getNumber("WEBGL_VERSION");return n===0?0:d4(n)});bt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>bt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!V1());bt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>f4(bt.getNumber("WEBGL_VERSION")));bt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>bt.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:bt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));bt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>p4(bt.getNumber("WEBGL_VERSION")));bt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>g4(bt.getNumber("WEBGL_VERSION")));bt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>bt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);bt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});bt.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>V1()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});bt.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);bt.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);bt.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);bt.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);bt.registerFlag("WEBGL_EXP_CONV",()=>!1);bt.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>bt.getBool("IS_TEST"));bt.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);bt.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);bt.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);bt.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pn(){let n,t,e,s,r,o,i,a,u,c;return U().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",t="in",e="out",s="in",r="texture",o="outputColor",i="out vec4 outputColor;",a=U().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",t="attribute",e="varying",s="varying",r="texture2D",o="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:t,varyingVs:e,varyingFs:s,texture2D:r,output:o,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:u,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Co(n,t,e="index"){const s=vt(t);return s.map((r,o)=>{const i=`int ${n[o]} = ${e} / ${r}`,a=o===s.length-1?`int ${n[o+1]} = ${e} - ${n[o]} * ${r}`:`index -= ${n[o]} * ${r}`;return`${i}; ${a};`}).join("")}function eh(n,t,e="index"){const s=vt(t);return s.map((r,o)=>{const i=`int ${n[o]} = ${e} / outShapeStrides[${o}]`,a=o===s.length-1?`int ${n[o+1]} = ${e} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`;return`${i}; ${a};`}).join("")}function x4(n,t){const e=n.length,s=n.map(o=>`${t}[${o}]`),r=new Array(e-1);r[e-2]=s[e-1];for(let o=e-3;o>=0;--o)r[o]=`(${r[o+1]} * ${s[o+1]})`;return r}function b4(n,t,e="index"){const s=n.map((o,i)=>i),r=x4(s,t);return r.map((o,i)=>{const a=`int ${n[i]} = ${e} / ${r[i]}`,u=i===r.length-1?`int ${n[i+1]} = ${e} - ${n[i]} * ${r[i]}`:`index -= ${n[i]} * ${r[i]}`;return`${a}; ${u};`}).join("")}function wm(n){const t=vt(n).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function ym(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const Wv=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:Uv}=rA;function w4(n,t,e){const s=[];if(n.forEach(f=>{const m=X(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?s.push(`uniform float ${f.name}${m>1?`[${m}]`:""};`):(s.push(`uniform sampler2D ${f.name};`),s.push(`uniform int offset${f.name};`)),e.enableShapeUniforms){const{uniformShape:p}=vm(e.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(p.length){case 1:s.push(`uniform int ${f.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${f.name}Shape;`);break}s.push(`uniform ivec2 ${f.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(f=>{s.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});const r=s.join(`
`),o=n.map(f=>y4(f,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),i=t.texShape,a=pn(),u=D4(a);let c,l,h=k4(a);return t.isPacked?(c=v4(t.logicalShape,i,e.enableShapeUniforms),l=$4(a)):(c=C4(t.logicalShape,i,e.enableShapeUniforms),l=I4(a)),e.packedInputs&&(h+=A4),[h,u,l,r,c,o,e.userCode].join(`
`)}function xi(n,t=!1){const e=n.shapeInfo.logicalShape;switch(e.length){case 0:return W4(n,t);case 1:return G4(n,t);case 2:return q4(n,t);case 3:return K4(n,t);case 4:return Y4(n,t);case 5:return Z4(n);case 6:return J4(n);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function Gv(n,t){switch(n.shapeInfo.logicalShape.length){case 0:return V4(n);case 1:return U4(n,t);case 2:return H4(n,t);case 3:return j4(n,t);default:return X4(n,t)}}function y4(n,t,e=!1,s){let r="";e?r+=Gv(n,s):r+=xi(n,s);const o=n.shapeInfo.logicalShape,i=t.logicalShape;return o.length<=i.length&&(e?r+=Q4(n,t):r+=tz(n,t)),r}function v4(n,t,e){switch(n.length){case 0:return Hv();case 1:return T4(n,t,e);case 2:return P4(n,t,e);case 3:return R4(n,t,e);default:return O4(n,t,e)}}function C4(n,t,e){switch(n.length){case 0:return Hv();case 1:return F4(n,t,e);case 2:return z4(n,t,e);case 3:return _4(n,t,e);case 4:return M4(n,t,e);case 5:return B4(n,t);case 6:return L4(n,t);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function D4(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function I4(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function $4(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function k4(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${S4}
    ${E4}
    ${N4}
  `}const S4=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,E4=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,N4=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,A4=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function Hv(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function T4(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function F4(n,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function R4(n,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(n[2]/2),o=r*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function _4(n,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${eh(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Co(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function O4(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(n[n.length-1]/2),o=r*Math.ceil(n[n.length-2]/2);let i=o,a="",u="b, r, c";for(let c=2;c<n.length-1;c++)i*=n[n.length-c-1],a=`
      int b${c} = index / ${i};
      index -= b${c} * ${i};
    `+a,u=`b${c}, `+u;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${a}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${n.length}(${u});
    }
  `}function M4(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${eh(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Co(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function B4(n,t){const e=Co(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function L4(n,t){const e=Co(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function P4(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(jt(n,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(n[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function z4(n,t,e){return jt(n,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:n[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Do(n){return`offset${n}`}function V4(n){const t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),s=pn();return`
    vec4 ${e}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function W4(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${e};}`;const[r,o]=n.shapeInfo.texShape;if(r===1&&o===1)return`
      float ${s}() {
        return sampleTexture(${e}, halfCR);
      }
    `;const i=Do(e);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${i});
      return sampleTexture(${e}, uv);
    }
  `;const[a,u]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${a}, ${u}, ${i});
      return sampleTexture(${e}, uv);
    }
  `}function U4(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=n.shapeInfo.texShape,o=pn();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${e}, uv);
    }
  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${o.texture2D}(${e}, uv);
    }
  `}function G4(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${bi(n)}
      }
    `;const r=n.shapeInfo.texShape,o=r[0],i=r[1];if(i===1&&o===1)return`
      float ${s}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;const a=Do(e);return i===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${o}.0);
        return sampleTexture(${e}, uv);
      }
    `:o===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${a});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${o}, ${i}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function H4(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,i=o[0],a=o[1],u=pn();if(o!=null&&jt(e,o))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${u.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${u.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `;const c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=Math.ceil(e[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${c[0]}, ${c[1]}, row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `}function q4(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape;if(o!=null&&jt(e,o)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const d=o[0],f=o[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:i,keptDims:a}=kr(e),u=i;if(u.length<e.length){const d=wi(n,u),f=["row","col"];return`
      ${xi(d,t)}
      float ${r}(int row, int col) {
        return ${r}(${yi(f,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${bi(n)}
      }
    `;const c=o[0],l=o[1],h=Do(s);return l===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${h};
    vec2 uv = uvFromFlat(${c}, ${l}, index);
    return sampleTexture(${s}, uv);
  }
`}function j4(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(e[0]===1){const d=e.slice(1),f=[1,2],m=wi(n,d),p=["b","row","col"];return`
        ${Gv(m,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${yi(p,f)});
        }
      `}const a=pn();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const u=i[0],c=i[1],l=Math.ceil(e[2]/2),h=l*Math.ceil(e[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${c}, ${h}, ${l}, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}function K4(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=e[1]*e[2],i=e[2],{newShape:a,keptDims:u}=kr(e),c=a;if(c.length<e.length){const p=wi(n,c),x=["row","col","depth"];return`
        ${xi(p,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${yi(x,u)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${i}, 1)));
        ${bi(n)}
      }
    `;const l=n.shapeInfo.texShape,h=l[0],d=l[1],f=n.shapeInfo.flatOffset;if(d===o&&f==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===i&&f==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const m=Do(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${m};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${i} + depth + ${m};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function X4(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=pn();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${e}, uv);
    }
  `;const o=n.shapeInfo.logicalShape,i=o.length,a=n.shapeInfo.texShape,u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=u[0],l=u[1],h=Math.ceil(o[i-1]/2);let d=h*Math.ceil(o[i-2]/2),f="int b, int row, int col",m=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let p=2;p<i-1;p++)f=`int b${p}, `+f,d*=o[i-p-1],m=`b${p} * ${d} + `+m;return`
    vec4 ${s}(${f}) {
      int index = ${m};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${c});
      return ${r.texture2D}(${e}, uv);
    }
  `}function Y4(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=e[3],i=e[2]*o,a=e[1]*i,{newShape:u,keptDims:c}=kr(e);if(u.length<e.length){const b=wi(n,u),w=["row","col","depth","depth2"];return`
      ${xi(b,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${yi(w,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${o}, 1)));
        ${bi(n)}
      }
    `;const l=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],f=h[1],m=`int stride2 = ${s}Shape[3];`,p=`int stride1 = ${s}Shape[2] * stride2;`,x=`int stride0 = ${s}Shape[1] * stride1;`;if(f===a&&l==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${m}
        ${p}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(f===o&&l==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;const g=Do(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${m}
      ${p}
      ${x}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${g});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${d}, ${f}, index + ${g});
      return sampleTexture(${s}, uv);
    }
  `}function Z4(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t[4],o=t[3]*r,i=t[2]*o,a=t[1]*i,{newShape:u,keptDims:c}=kr(t);if(u.length<t.length){const p=wi(n,u),x=["row","col","depth","depth2","depth3"];return`
      ${xi(p)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${yi(x,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${o}, ${r})) +
          depth3;
        ${bi(n)}
      }
    `;const l=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],f=h[1];if(f===a&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===r&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;const m=Do(e);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${o} +
          depth2 * ${r} + depth3 + ${m};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function J4(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:r,keptDims:o}=kr(t);if(r.length<t.length){const x=wi(n,r),g=["row","col","depth","depth2","depth3","depth4"];return`
      ${xi(x)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${yi(g,o)});
      }
    `}const i=t[5],a=t[4]*i,u=t[3]*a,c=t[2]*u,l=t[1]*c;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${c}, ${u}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${bi(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,f=d[0],m=d[1];if(m===l&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${u}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(m===i&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;const p=Do(e);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${c} + depth * ${u} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${p};
      vec2 uv = uvFromFlat(${f}, ${m}, index);
      return sampleTexture(${e}, uv);
    }
  `}function bi(n){const t=n.name,e=X(n.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function Q4(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),r="get"+s+"AtOutCoords",o=n.shapeInfo.logicalShape.length,i=t.logicalShape.length,a=Uv(n.shapeInfo.logicalShape,t.logicalShape),u=Qt(i),c=i-o;let l;const h=["x","y","z","w","u","v"];o===0?l="":i<2&&a.length>=1?l="coords = 0;":l=a.map(b=>`coords.${h[b+c]} = 0;`).join(`
`);let d="";i<2&&o>0?d="coords":d=n.shapeInfo.logicalShape.map((b,w)=>`coords.${h[w+c]}`).join(", ");let f="return outputValue;";const p=X(n.shapeInfo.logicalShape)===1,g=X(t.logicalShape)===1;if(o===1&&!p&&!g)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(p&&!g)i===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(a.length){const b=o-2,w=o-1;a.indexOf(b)>-1&&a.indexOf(w)>-1?f="return vec4(outputValue.x);":a.indexOf(b)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(w)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${u} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${s}(${d});
      ${f}
    }
  `}function tz(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),r="get"+s+"AtOutCoords",o=t.texShape,i=n.shapeInfo.texShape,a=n.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!n.shapeInfo.isUniform&&a===u&&n.shapeInfo.flatOffset==null&&jt(i,o))return`
      float ${r}() {
        return sampleTexture(${e}, resultUV);
      }
    `;const c=Qt(u),l=Uv(n.shapeInfo.logicalShape,t.logicalShape),h=u-a;let d;const f=["x","y","z","w","u","v"];a===0?d="":u<2&&l.length>=1?d="coords = 0;":d=l.map(p=>`coords.${f[p+h]} = 0;`).join(`
`);let m="";return u<2&&a>0?m="coords":m=n.shapeInfo.logicalShape.map((p,x)=>`coords.${f[x+h]}`).join(", "),`
    float ${r}() {
      ${c} coords = getOutputCoords();
      ${d}
      return get${s}(${m});
    }
  `}function Qt(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function vm(n,t,e){const{newShape:s,keptDims:r}=kr(t),o=t.length,i=n&&o===3&&t[0]===1,a=i?t.slice(1):s,u=!n&&o>1&&!jt(t,e)&&s.length<o||i;return{useSqueezeShape:u,uniformShape:u?a:t,keptDims:r}}function wi(n,t){const e=JSON.parse(JSON.stringify(n));return e.shapeInfo.logicalShape=t,e}function yi(n,t){return t.map(e=>n[e]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ez(n,t,e,s){const r=e.map((l,h)=>{const d={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:l.isUniform?!1:l.texData.isPacked,flatOffset:null};return l.texData!=null&&l.texData.slice!=null&&l.texData.slice.flatOffset>0&&(d.flatOffset=l.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:d}}),o=r.map(l=>l.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=w4(r,i,t),u=KP(n.gl,a),c=n.createProgram(u);return U().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:a,webGLProgram:c,inShapeInfos:o,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(c),Object.assign({program:t,fragmentShader:u,source:a,webGLProgram:c,inShapeInfos:o,outShapeInfo:i},qv(n,t,c)))}function qv(n,t,e){const s=[],r=[];let o,i,a,u=null,c=null;c=n.getUniformLocation(e,"NAN",!1),U().getNumber("WEBGL_VERSION")===1&&(u=n.getUniformLocation(e,"INFINITY",!1));const l=!1;for(const h of t.variableNames){const d={name:h,uniform:n.getUniformLocation(e,h,l),offset:n.getUniformLocation(e,`offset${h}`,l)};t.enableShapeUniforms&&(d.shape=n.getUniformLocation(e,`${h}Shape`,l),d.texShape=n.getUniformLocation(e,`${h}TexShape`,l)),s.push(d)}if(t.enableShapeUniforms&&(o=n.getUniformLocation(e,"outShape",l),a=n.getUniformLocation(e,"outShapeStrides",l),i=n.getUniformLocation(e,"outTexShape",l)),t.customUniforms)for(const h of t.customUniforms)r.push(n.getUniformLocation(e,h.name,l));return{variablesLocations:s,customUniformLocations:r,infLoc:u,nanLoc:c,outShapeLocation:o,outShapeStridesLocation:a,outTexShapeLocation:i}}function t0(n,t){if(n.length!==t.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${t.length} inputs`);n.forEach((e,s)=>{const r=e.logicalShape,o=t[s],i=o.shape;if(!jt(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(e.isUniform&&o.isUniform)return;const a=e.texShape,u=o.isUniform?null:o.texData.texShape;if(!jt(a,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${u} must match`)})}function nz(n,t,e,s,r){t.program.enableShapeUniforms||(t0(t.inShapeInfos,e),t0([t.outShapeInfo],[s]));const o=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,i[0],i[1]):n.setOutputMatrixTexture(o.texture,i[0],i[1]),n.setProgram(t.webGLProgram),n.bindVertexArray(t.webGLProgram.vao),U().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&n.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&n.gl.uniform1f(t.nanLoc,NaN);for(let u=0;u<e.length;++u){const c=e[u],{uniform:l,offset:h,shape:d,texShape:f}=t.variablesLocations[u];if(d){const{uniformShape:m}=vm(t.program.packedInputs,c.shape,c.texData.texShape);switch(m.length){case 1:n.gl.uniform1iv(d,new Int32Array(m));break;case 2:n.gl.uniform2iv(d,new Int32Array(m));break;case 3:n.gl.uniform3iv(d,new Int32Array(m));break;case 4:n.gl.uniform4iv(d,new Int32Array(m));break}}if(f&&n.gl.uniform2i(f,c.texData.texShape[0],c.texData.texShape[1]),l!=null){if(c.isUniform){if(X(c.shape)<2)n.gl.uniform1f(l,c.uniformValues[0]);else{let m=c.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),n.gl.uniform1fv(l,m)}continue}c.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,c.texData.slice.flatOffset),n.setInputMatrixTexture(c.texData.texture.texture,l,u)}}const a=t.outShapeLocation;if(a)switch(s.shape.length){case 1:n.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(a,new Int32Array(s.shape));break}if(t.outShapeStridesLocation){const u=vt(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:n.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:n.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u));break}}if(t.outTexShapeLocation&&n.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r)for(let u=0;u<t.program.customUniforms.length;++u){const c=t.program.customUniforms[u],l=t.customUniformLocations[u],h=r[u];if(c.type==="float")n.gl.uniform1fv(l,h);else if(c.type==="vec2")n.gl.uniform2fv(l,h);else if(c.type==="vec3")n.gl.uniform3fv(l,h);else if(c.type==="vec4")n.gl.uniform4fv(l,h);else if(c.type==="int")n.gl.uniform1iv(l,h);else if(c.type==="ivec2")n.gl.uniform2iv(l,h);else if(c.type==="ivec3")n.gl.uniform3iv(l,h);else if(c.type==="ivec4")n.gl.uniform4iv(l,h);else throw Error(`uniform type ${c.type} is not supported yet.`)}n.executeProgram()}function sz(n,t,e){let s="";t.concat(e).forEach(i=>{const a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!i.isUniform){const u=i.texData.texShape,{useSqueezeShape:c,uniformShape:l,keptDims:h}=vm(n.packedInputs,i.shape,u);let d="",f="",m="";if(l.length===1&&n.packedInputs){const v=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];d=`${v[0]>1}_${v[1]>1}`}else if(l.length===2&&!n.packedInputs)f=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!n.packedInputs){const v=vt(l);m=`${v[0]===u[1]}_${v[v.length-1]===u[1]}`}const p=i.shape.length,x=l.length===2&&jt(i.shape,u),g=X(i.shape)===1,b=Xo(i.shape,e.shape),w=!n.packedInputs&&p===e.shape.length&&jt(u,e.texData.texShape),y=n.packedInputs||l.length>2?"":`${u[0]>1}_${u[1]>1}`;s+=`${p}_${w}_${c?h:""}_${l.length}_${g}_${b}_${x}_${d}_${f}_${m}_${y}_${a}`}else{const u=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${u}_${a}`}});const r=n.userCode;let o=n.constructor.name;return o+="_"+s+"_"+r+`${U().getNumber("WEBGL_VERSION")}`,o}function sn(n){return U().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rz{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Yi.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=pn();this.outputShape=t,this.enableShapeUniforms=sn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?eh(["r","c","d"],t):Co(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oz{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Yi.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=pn();this.outputShape=t,this.enableShapeUniforms=sn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?eh(["r","c","d"],t):Co(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iz{constructor(t){this.variableNames=["A"],this.outTexUsage=zn.DOWNLOAD;const e=pn();this.outputShape=t,this.userCode=`
      ${Wv}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class az{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=zn.DOWNLOAD;const e=pn();this.outputShape=t,this.userCode=`
      ${Wv}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uz={R:0,G:1,B:2,A:3};class e0{constructor(t,e=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=pn();this.outputShape=t,this.enableShapeUniforms=sn(this.outputShape.length);let o="result";e&&(o="floor(result * 255. + 0.5)");let i="";for(let a=0;a<s.length;a++){const u=s[a];i+=`
          if(offset == ${a}) {
            result = values[${uz[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?ym():wm(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${i}
        }
        ${r.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cz{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=pn();this.outputShape=t,this.enableShapeUniforms=sn(this.outputShape.length);let r="",o="result";e&&(o="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){const u=i*2+a;r+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?ym():wm(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lz(n){const t=pn(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return jP(n,e)}function hz(n){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return JP(n,t)}function dz(n){const t=new Uint16Array([0,1,2,2,1,3]);return QP(n,t)}function xu(n,t,e,s,r,o){e4(t,e);const i=t4(n),a=n.TEXTURE_2D;return pt(n,()=>n.bindTexture(a,i)),pt(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),pt(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),pt(n,()=>n.texParameteri(a,n.TEXTURE_MIN_FILTER,n.NEAREST)),pt(n,()=>n.texParameteri(a,n.TEXTURE_MAG_FILTER,n.NEAREST)),U().getNumber("WEBGL_VERSION")===1?pt(n,()=>n.texImage2D(a,0,s,t,e,0,r,o,null)):pt(n,()=>n.texStorage2D(a,1,s,t,e)),pt(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:i,texShape:[e,t]}}function jv(n){return n.internalFormatFloat}function fz(n,t,e,s){const[r,o]=mu(t,e);return xu(n,r,o,jv(s),s.textureFormatFloat,n.FLOAT)}function Kv(n){return n.internalFormatHalfFloat}function pz(n,t,e,s){const[r,o]=mu(t,e);return xu(n,r,o,Kv(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function Xv(n){return n.downloadTextureFormat}function mz(n,t,e,s){const[r,o]=mu(t,e);return xu(n,r,o,Xv(s),n.RGBA,n.UNSIGNED_BYTE)}function Yv(n){return n.internalFormatPackedFloat}function gz(n,t,e,s){const[r,o]=gi(t,e);return xu(n,r,o,Yv(s),n.RGBA,n.FLOAT)}function Zv(n){return n.internalFormatPackedHalfFloat}function xz(n,t,e,s){const[r,o]=gi(t,e);return xu(n,r,o,Zv(s),n.RGBA,s.textureTypeHalfFloat)}function bz(n,t,e){return pt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),Zg(n,t,"clipSpacePos",e,3,20,0)&&Zg(n,t,"uv",e,2,20,12)}function wz(n,t,e,s,r,o){pt(n,()=>n.bindTexture(n.TEXTURE_2D,t));let i,a,u;r instanceof Uint8Array?(i=new Uint8Array(e*s*4),a=n.UNSIGNED_BYTE,u=n.RGBA):(i=new Float32Array(e*s*4),a=n.FLOAT,u=o.internalFormatPackedFloat),i.set(r),U().getNumber("WEBGL_VERSION")===2?pt(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e,s,n.RGBA,a,i)):pt(n,()=>n.texImage2D(n.TEXTURE_2D,0,u,e,s,0,n.RGBA,a,i)),pt(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function yz(n,t,e){pt(n,()=>n.bindTexture(n.TEXTURE_2D,t)),e.data instanceof Uint8Array?U().getNumber("WEBGL_VERSION")===2?pt(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e.width,e.height,n.RGBA,n.UNSIGNED_BYTE,e.data)):pt(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,e.width,e.height,0,n.RGBA,n.UNSIGNED_BYTE,e.data)):U().getNumber("WEBGL_VERSION")===2?pt(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,e)):pt(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e)),pt(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function vz(n,t,e,s){const r=n.createBuffer();pt(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const a=4*4*t*e;return pt(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)),pt(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,0)),pt(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function Cz(n,t,e){const s=n,r=new Float32Array(e);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function Dz(n,t,e,s){const[r,o]=mu(t,e),i=4,a=new Uint8Array(zP(t*e,i));return pt(n,()=>n.readPixels(0,0,r,o,s.downloadTextureFormat,n.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function Iz(n,t,e,s,r,o,i,a){const u=n,c=new Float32Array(VP(o,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function $z(n,t,e){const s=new Float32Array(t*e*4);return pt(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fh{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const e=U().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,BP(e,t)):this.gl=Cs(e),t=this.gl,U().getNumber("WEBGL_VERSION")===2){const o=t;this.createVertexArray=()=>pt(o,()=>o.createVertexArray()),this.bindVertexArray=i=>pt(o,()=>o.bindVertexArray(i)),this.deleteVertexArray=i=>pt(o,()=>o.deleteVertexArray(i)),this.getVertexArray=()=>pt(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(t!=null){const o=t.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>pt(t,()=>o.createVertexArrayOES()),this.bindVertexArray=i=>pt(t,()=>o.bindVertexArrayOES(i)),this.deleteVertexArray=i=>pt(t,()=>o.deleteVertexArrayOES(i)),this.getVertexArray=()=>pt(t,()=>t.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),U().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=Tu(this.gl,o),es(this.gl,i))this.textureHalfFloatExtension=Tu(this.gl,i);else if(U().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),es(this.gl,r))this.colorBufferHalfFloatExtension=Tu(this.gl,r);else if(U().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",es(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(es(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=hz(this.gl),this.indexBuffer=dz(this.gl),this.framebuffer=n4(this.gl),this.textureConfig=bm(this.gl,this.textureHalfFloatExtension)}get debug(){return U().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;pt(t,()=>t.finish()),pt(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),pt(t,()=>t.deleteFramebuffer(this.framebuffer)),pt(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),pt(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),pt(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),fz(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),pz(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),mz(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),yz(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,s,r){this.throwIfDisposed(),wz(this.gl,t,e,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),xz(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),gz(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Jg(this.gl,this.framebuffer),this.outputTexture=null),pt(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,s){return this.downloadMatrixDriver(t,()=>Dz(this.gl,e,s,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,s,r,o,i){return Iz(this.gl,t,e,s,r,o,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return Cz(this.gl,t,e)}createBufferFromTexture(t,e,s){this.bindTextureToFrameBuffer(t);const r=vz(this.gl,e,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,s;if(U().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),s=()=>{const i=r.clientWaitSync(o,0,0);return i===r.ALREADY_SIGNALED||i===r.CONDITION_SATISFIED},e=o}else U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(e,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:e,isFencePassed:s}}downloadMatrixFromPackedTexture(t,e,s){return this.downloadMatrixDriver(t,()=>$z(this.gl,e,s))}createProgram(t){this.throwIfDisposed();const e=this.gl;this.vertexShader==null&&(this.vertexShader=lz(e));const s=YP(e);pt(e,()=>e.attachShader(s,this.vertexShader)),pt(e,()=>e.attachShader(s,t)),ZP(e,s);const r=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&Eh(e,r),r}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);const e=this.gl;pt(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),bz(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&(pt(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&Eh(this.gl,this.program),pt(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,s=!0){return this.throwIfDisposed(),s?r4(this.gl,t,e):o4(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),pt(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,s){this.throwIfDisposed(),this.throwIfNoProgram(),i4(this.gl,t,e,s)}setOutputMatrixTexture(t,e,s){this.setOutputMatrixTextureDriver(t,s,e)}setOutputPackedMatrixTexture(t,e,s){this.throwIfDisposed();const[r,o]=gi(e,s);this.setOutputMatrixTextureDriver(t,r,o)}setOutputMatrixWriteRegion(t,e,s,r){this.setOutputMatrixWriteRegionDriver(s,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Eh(this.gl,this.program),Fu(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}pt(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),pt(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Tu(this.gl,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,o),o}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const e=this.gl,s=this.getQueryTimerExtensionWebGL2();e.endQuery(s.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await zm(()=>this.disposed||this.isQueryAvailable(t,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){const s=this.gl;return s.getQueryParameter(t,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(t,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(t,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(t,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=kz(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:s}=this.itemsToPoll[e];s()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in U().platform&&(s=U().platform.setTimeoutCustom.bind(U().platform)),zm(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Nh(this.gl,t,this.framebuffer),this.debug&&Fu(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Nh(this.gl,this.outputTexture,this.framebuffer),this.debug&&Fu(this.gl)):Jg(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const s=e();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(t,e,s){this.throwIfDisposed();const r=this.gl;Nh(r,t,this.framebuffer),this.debug&&Fu(r),this.outputTexture=t,pt(r,()=>r.viewport(0,0,e,s)),pt(r,()=>r.scissor(0,0,e,s))}setOutputMatrixWriteRegionDriver(t,e,s,r){this.throwIfDisposed(),pt(this.gl,()=>this.gl.scissor(t,e,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function kz(n){let t=0;for(;t<n.length&&n[t]();++t);return t-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Sz,bincountImpl:Jv,bincountReduceImpl:Ez,bitwiseAndImpl:Nz,castImpl:Az,ceilImpl:Tz,concatImpl:Fz,equalImpl:Rz,expImpl:_z,expm1Impl:Oz,floorImpl:Mz,gatherNdImpl:Bz,gatherV2Impl:Lz,greaterImpl:Pz,greaterEqualImpl:zz,lessImpl:Vz,lessEqualImpl:Wz,linSpaceImpl:Uz,logImpl:Gz,maxImpl:Hz,maximumImpl:qz,minimumImpl:jz,multiplyImpl:Kz,negImpl:Xz,notEqualImpl:Yz,prodImpl:Zz,raggedGatherImpl:Jz,raggedRangeImpl:Qz,raggedTensorToTensorImpl:tV,rangeImpl:eV,rsqrtImpl:nV,scatterImpl:sV,sigmoidImpl:rV,simpleAbsImpl:Qv,sliceImpl:oV,sparseFillEmptyRowsImpl:iV,sparseReshapeImpl:aV,sparseSegmentReductionImpl:tC,sqrtImpl:uV,staticRegexReplaceImpl:cV,stridedSliceImpl:lV,stringNGramsImpl:hV,stringSplitImpl:dV,stringToHashBucketFastImpl:fV,subImpl:pV,tileImpl:mV,topKImpl:gV,transposeImpl:Cm,uniqueImpl:xV}=y3;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eC(n,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${n}.${e}`)}function cn(n,t){return t===1?[n]:eC(n,t)}function bV(n,t){if(n===1)return"rc";let e="";for(let s=0;s<n;s++)e+=t[s],s<n-1&&(e+=",");return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wV{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=sn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const e=cn("rc",this.rank),s=Qt(this.rank),r=this.getOutOfBoundsCondition(e),o=this.getSetup(e),i=this.getOutput(e);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(t){const e=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let o=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)o=`${t[t.length-1-i]},`+o;e.push(o)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let s=this.rank-2;s<this.rank;s++)e+=`${t[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";const e=t.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(t){const e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nC{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=sn(this.outputShape.length);let s="";for(let r=0;r<4;r++){let o="thisRC = rc;";r%2===1&&(o+="thisRC.z += 1;"),r>1&&(o+="thisRC.y += 1;"),s+=`
        ${o}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${yV(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?ym():wm(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${s}

        setOutput(result);
      }
    `}}function yV(n,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?b4(["r","c","d"],"inputShape"):Co(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vV{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,s){const r=s0(e,s),o=r0(t,r,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const i=n0(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const u=this.freeTextures[o].pop();return this.usedTextures[o].push(u),u}let a;return r===qe.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===qe.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===qe.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===qe.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===qe.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[o].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(t,e,s,r){if(this.freeTextures==null)return;const o=s0(s,r),i=r0(e,o,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=n0(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),u=U().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const c=this.usedTextures[i],l=c&&c.indexOf(t);if(l==null||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[l]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function CV(n,t){const e=n;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===n.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function n0(n,t,e,s,r){const o=DV(t,s);let i;if(r){const[u,c]=gi(n[0],n[1]);i=u*c}else{const[u,c]=mu(n[0],n[1]);i=u*c}const a=CV(e,o);return i*a}function DV(n,t){switch(n){case qe.PACKED_2X2_FLOAT32:return Yv(t);case qe.PACKED_2X2_FLOAT16:return Zv(t);case qe.UNPACKED_FLOAT32:return jv(t);case qe.UNPACKED_FLOAT16:return Kv(t);case qe.PACKED_4X1_UNSIGNED_BYTE:return Xv(t);default:throw new Error(`Unknown physical texture type ${n}`)}}function IV(n){return U().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?qe.PACKED_2X2_FLOAT32:qe.UNPACKED_FLOAT32:n?qe.PACKED_2X2_FLOAT16:qe.UNPACKED_FLOAT16}function s0(n,t){if(n===zn.UPLOAD)return qe.PACKED_2X2_FLOAT32;if(n===zn.RENDER||n==null)return IV(t);if(n===zn.DOWNLOAD||n===zn.PIXELS)return qe.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function r0(n,t,e){return`${n[0]}_${n[1]}_${t}_${e}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rs{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=sn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const is="if (isnan(x)) return x;",$V="return x;",o0="return abs(x);",kV="return (x >= 0.0) ? x : (exp(x) - 1.0);",SV=is+`
  return (x < 0.0) ? 0.0 : x;
`,EV=is+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,ar="return x;",NV="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AV="return x;",TV=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,FV=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,RV=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,_V="return 1.0 / (1.0 + exp(-1.0 * x));";class hr{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=sn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OV{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=sn(this.outputShape.length);const e=t.length,s=cn("rc",e),r=Qt(e),o=bV(e,s),i=s.slice(-2),a=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MV=Ex,BV=1e-7,LV=1e-4,Ou={};function PV(n){return n in Ou||(Ou[n]={}),Ou[n]}const zV=U().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),VV=600;function WV(){return U().global.screen==null?1024:U().global.screen.height*U().global.screen.width*window.devicePixelRatio*VV/1024/1024}class nh extends Rd{nextDataId(){return nh.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!U().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof Fh)e=t;else{const s=Cs(U().getNumber("WEBGL_VERSION"),t);e=new Fh(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Cs(U().getNumber("WEBGL_VERSION"));e=new Fh(s),this.binaryCache=PV(U().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new vV(this.gpgpu),this.numMBBeforeWarning=WV(),this.texData=new X0(this,ks())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,s,r,o,i){const a=this.makeTensorInfo(e,s),u=this.texData.get(a.dataId);u.isPacked=!1,u.texture={texture:t,texShape:[r,o]},u.texShape=[r,o];const c=Ru(e),l=new e0(c,!1,i),h=this.runWebGLProgram(l,[a],s,[[r,o]]);return h.shape=e,u.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(t,e,s){if((U().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||U().getBool("DEBUG"))&&this.checkNumericalProblems(t),s==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:e,dtype:s,values:t,usage:zn.UPLOAD,refCount:1}),r}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--}}move(t,e,s,r,o){if(U().getBool("DEBUG")&&this.checkNumericalProblems(e),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:s,dtype:r,values:e,usage:zn.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:s,dtype:r,complexTensorInfos:o,slice:i,shape:a,isPacked:u}=e;if(i!=null){let d;u?d=new hr(a,ar):d=new Rs(a,ar);const f=this.runWebGLProgram(d,[{dataId:t,shape:a,dtype:r}],r),m=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(s!=null)return this.convertAndCacheOnCPU(t);if(r==="string")return s;const c=this.activeTimers!=null;let l;c&&(l=gn());let h;if(r==="complex64"){const d=this.readSync(o.real.dataId),f=this.readSync(o.imag.dataId);h=er(d,f)}else h=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=gn()-l),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const m=this.pendingRead.get(t);return new Promise(p=>m.push(p))}const e=this.texData.get(t),{values:s,shape:r,slice:o,dtype:i,complexTensorInfos:a,isPacked:u}=e;if(o!=null){let m;u?m=new hr(r,ar):m=new Rs(r,ar);const p=this.runWebGLProgram(m,[{dataId:t,shape:r,dtype:i}],i),x=this.read(p.dataId);return this.disposeIntermediateTensorInfo(p),x}if(s!=null)return this.convertAndCacheOnCPU(t);if(U().getBool("DEBUG")&&!U().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&U().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,l;if(i!=="complex64"&&U().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const m=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(m.texture.texture,...Au(r))}this.pendingRead.set(t,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(i==="complex64"){const m=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),p=m[0],x=m[1];h=er(p,x)}else if(c==null)h=this.getValuesFromTexture(t);else{const m=X(r);h=this.gpgpu.downloadFloat32MatrixFromBuffer(c,m)}if(l!=null&&this.disposeIntermediateTensorInfo(l),c!=null){const m=this.gpgpu.gl;pt(m,()=>m.deleteBuffer(c))}const d=this.convertAndCacheOnCPU(t,h),f=this.pendingRead.get(t);return this.pendingRead.delete(t),f.forEach(m=>m(d)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&ks().removeDataId(t,this),this.pendingDeletes--),d}readToGPU(t,e={}){const s=this.texData.get(t),{values:r,shape:o,slice:i,dtype:a,isPacked:u,texture:c}=s;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let f;u?f=new hr(o,ar):f=new Rs(o,ar);const m=this.runWebGLProgram(f,[{dataId:t,shape:o,dtype:a}],a),p=this.readToGPU(m,e);return this.disposeIntermediateTensorInfo(m),p}if(c==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(t,e.customTexShape),h=ks().makeTensorFromTensorInfo(l),d=this.texData.get(l.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(r=>br(r));return Ot(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ot(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){const s=t[e];if(!HP(s))throw U().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:e,dtype:s,isPacked:r}=this.texData.get(t),o=X(e);if(U().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(t),f=this.texData.get(d.dataId),m=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...Au(e)).subarray(0,o);return this.disposeIntermediateTensorInfo(d),m}const i=U().getBool("WEBGL_PACK")&&r===!0,a=i?Ru(e):e,u=i?new az(a):new iz(a),c=this.runWebGLProgram(u,[{shape:a,dtype:s,dataId:t}],"float32"),l=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,t();const o=Jr(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),i=Jr(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=e,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(o);a.kernelMs=i2(u),a.getExtraProfileInfo=()=>u.map((c,l)=>({name:i[l],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:gn(),endMs:null}}endTimer(t){return U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=gn(),t)}async getQueryTime(t){if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:s}=this.texData.get(t);return s!=null&&(this.disposeData(s.real.dataId,e),this.disposeData(s.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:s,texShape:r,usage:o,isPacked:i,slice:a}=this.texData.get(t),u=a&&a.origDataId||t,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),e!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(e,r,o,i)));const l=this.texData.get(t);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=zV){return U().getBool("WEBGL_CPU_FORWARD")&&t.every(s=>this.texData.get(s.dataId).texture==null&&X(s.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){Pn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return MV(t.shape,e)}packedUnaryOp(t,e,s){const r=new hr(t.shape,e),o=this.compileAndRun(r,[t],s);return ks().makeTensorFromTensorInfo(o)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const r=Qv(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,r)}if(U().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,o0,t.dtype);const e=new Rs(t.shape,o0),s=this.compileAndRun(e,[t]);return ks().makeTensorFromTensorInfo(s)}makeTensorInfo(t,e,s){let r;if(e==="string"&&s!=null&&s.length>0&&na(s[0])){const o=s.map(i=>pr(i));r=this.write(o,t,e)}else r=this.write(s,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,s){return ks().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,s),this)}unpackTensor(t){const e=new OV(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new wV(t.shape),s=!0;return this.runWebGLProgram(e,[t],t.dtype,null,s)}packedReshape(t,e){const s=[si(t.shape),...ri(t.shape)],r={dtype:t.dtype,shape:s,dataId:t.dataId},o=[si(e),...ri(e)],i=new nC(o,s),a=!0,u=[s],c=this.runWebGLProgram(i,[r],t.dtype,u,a);return{dataId:c.dataId,shape:e,dtype:c.dtype}}decode(t,e){const s=this.texData.get(t),{isPacked:r,shape:o,dtype:i}=s;if(e!=null){const d=X(o),f=e[0]*e[1]*4;k(d<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=Ru(o);let u;r?u=new oz(a):u=new rz(a);const c=!0,l=[e??Au(a)],h=this.runWebGLProgram(u,[{shape:a,dtype:i,dataId:t}],i,l,c,e);return{dtype:i,shape:o,dataId:h.dataId}}runWebGLProgram(t,e,s,r,o=!1,i){const a=this.makeTensorInfo(t.outputShape,s),u=this.texData.get(a.dataId);if(t.packedOutput&&(u.isPacked=!0),t.outPackingScheme===Yi.DENSE){const g=i??Au(t.outputShape);u.texShape=g.map(b=>b*2)}if(t.outTexUsage!=null&&(u.usage=t.outTexUsage),X(a.shape)===0)return u.values=tn(a.dtype,0),a;const c=[],l=e.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(g.dataId);if(b.texture==null){if(!t.packedInputs&&X(g.shape)<=U().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:b.values};t.packedInputs&&(b.isPacked=!0,b.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!b.isPacked!=!!t.packedInputs)g=b.isPacked?this.unpackTensor(g):this.packTensor(g),c.push(g),b=this.texData.get(g.dataId);else if(b.isPacked&&!mc(b.shape,g.shape)){const w=g,y=g.shape;g.shape=b.shape,g=this.packedReshape(g,y),c.push(g),b=this.texData.get(g.dataId),w.shape=y}return{shape:g.shape,texData:b,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:u,isUniform:!1},d=sz(t,l,h),f=this.getAndSaveBinary(d,()=>ez(this.gpgpu,t,l,h)),m=this.activeTimers!=null;let p;m&&(p=this.startTimer()),U().get("ENGINE_COMPILE_ONLY")||nz(this.gpgpu,f,l,h,r),c.forEach(g=>this.disposeIntermediateTensorInfo(g)),m&&(p=this.endTimer(p),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(p)}));const x=U().getNumber("WEBGL_FLUSH_THRESHOLD");if(x>0){const g=gn();g-this.lastGlFlushTime>x&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!U().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&o===!1){const g=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),g}return a}compileAndRun(t,e,s,r,o=!1){return s=s||e[0].dtype,this.runWebGLProgram(t,e,s,r,o)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(U().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=W(()=>{if(!U().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=U().getBool("DEBUG");U().set("DEBUG",!1);const e=this.abs(qt(1e-8)).dataSync()[0];if(U().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?BV:LV}uploadToGPU(t){const e=this.texData.get(t),{shape:s,dtype:r,values:o,texture:i,usage:a,isPacked:u}=e;if(i!=null)return;const c=this.activeTimers!=null;let l;c&&(l=gn());let h=e.texShape;if(h==null&&(h=c4(s,u),e.texShape=h),o!=null){const d=Ru(s);let f,m=h[1],p=h[0];const x=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(u||!x)&&([m,p]=gi(h[0],h[1])),u?f=new cz(d,x):f=new e0(d,x);const g=x?[p,m]:h,b=this.makeTensorInfo(g,r),w=this.texData.get(b.dataId);x?w.usage=zn.PIXELS:w.usage=zn.UPLOAD,w.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),m,p,o);const y=[[p,m]],v=!0,C=this.runWebGLProgram(f,[b],r,y,v),D=this.texData.get(C.dataId);e.texShape=D.texShape,e.isPacked=D.isPacked,e.usage=D.usage,U().get("ENGINE_COMPILE_ONLY")?this.disposeData(C.dataId):(e.texture=D.texture,e.values=null,this.texData.delete(C.dataId)),this.disposeIntermediateTensorInfo(b),c&&(this.uploadWaitMs+=gn()-l)}else{const d=this.acquireTexture(h,a,r,u);e.texture=d}}convertAndCacheOnCPU(t,e){const s=this.texData.get(t),{dtype:r}=s;return e!=null&&(s.values=UV(e,r)),s.values}acquireTexture(t,e,s,r){if(this.numBytesInGPU+=this.computeBytes(t,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*Wu(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}else{for(const[,e]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(e),r(!0)}catch(o){throw o}});t.push(s)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await yp(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Vv(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);const{variablesLocations:e,customUniformLocations:s,infLoc:r,nanLoc:o,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:u}=qv(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=e,t.customUniformLocations=s,t.infLoc=r,t.nanLoc=o,t.outShapeLocation=i,t.outShapeStridesLocation=a,t.outTexShapeLocation=u}}createTensorFromGPUData(t,e,s){t.channels=t.channels||"RGBA";const{texture:r,height:o,width:i,channels:a}=t,u=ks().backend;if(!u.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=u.writeTexture(r,e,s,o,i,a);return ks().makeTensorFromDataId(c,e,s,u)}}nh.nextDataId=0;function UV(n,t){if(t==="float32"||t==="complex64")return n;if(t==="int32"||t==="bool"){const e=t==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<e.length;++s)e[s]=Math.round(n[s]);return e}else throw new Error(`Unknown dtype ${t}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W1()&&H1("webgl",()=>new nh,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dm=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class lo{constructor(t,e,s){this.variableNames=["A","B"],this.outputShape=Tt(e,s),this.enableShapeUniforms=sn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Io=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class vi{constructor(t,e,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Tt(e,s);const o=this.outputShape.length;this.enableShapeUniforms=sn(o);let i="";if(r)if(o===0||X(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${Qt(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const u=cn("coords",o);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _n(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const GV={kernelName:Da,backendName:"webgl",kernelFunc:_n};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mr(n){const{inputs:t,backend:e}=n,{real:s,imag:r}=t,o=e.makeTensorInfo(s.shape,"complex64"),i=e.texData.get(o.dataId),a=_n({inputs:{x:s},backend:e}),u=_n({inputs:{x:r},backend:e});return i.complexTensorInfos={real:a,imag:u},o}const HV={kernelName:qd,backendName:"webgl",kernelFunc:Mr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sC="return (a < 0.) ? b * a : a;",rC=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function qV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{alpha:o}=s,i=e.makeTensorInfo([],"float32",Sr(o,"float32")),a=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new vi(rC,r.shape,i.shape):new lo(sC,r.shape,i.shape),u=e.runWebGLProgram(a,[r,i],"float32");return e.disposeIntermediateTensorInfo(i),u}const jV={kernelName:Xc,backendName:"webgl",kernelFunc:qV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oC="return (a < 0.) ? b * a : a;",iC=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function KV(n){const{inputs:t,backend:e}=n,{x:s,alpha:r}=t,o=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new vi(iC,s.shape,r.shape):new lo(oC,s.shape,r.shape);return e.runWebGLProgram(o,[s,r],"float32")}const XV={kernelName:pl,backendName:"webgl",kernelFunc:KV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ci="if (isnan(x)) return x;";function zt({opSnippet:n,packedOpSnippet:t,cpuKernelImpl:e,dtype:s}){return({inputs:r,backend:o})=>{const{x:i}=r,a=o,u=s||i.dtype;if(a.shouldExecuteOnCPU([i])&&e!=null){const h=a.texData.get(i.dataId),d=e(h.values,u);return a.makeTensorInfo(i.shape,u,d)}const c=U().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let l;return c?l=new hr(i.shape,t):l=new Rs(i.shape,n),a.runWebGLProgram(l,[i],u)}}function Ye({opSnippet:n,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:o}){return({inputs:i,backend:a})=>{const{a:u,b:c}=i,l=a;if(s&&u.dtype==="complex64"){const m=l.texData.get(u.dataId),p=l.texData.get(c.dataId),[x,g]=[[m.complexTensorInfos.real,p.complexTensorInfos.real],[m.complexTensorInfos.imag,p.complexTensorInfos.imag]].map(w=>{const[y,v]=w,C={dataId:y.dataId,dtype:y.dtype,shape:u.shape},D={dataId:v.dataId,dtype:v.dtype,shape:c.shape},I=new lo(n,u.shape,c.shape);return l.runWebGLProgram(I,[C,D],Fn(y.dtype,v.dtype))}),b=Mr({inputs:{real:x,imag:g},backend:l});return l.disposeIntermediateTensorInfo(x),l.disposeIntermediateTensorInfo(g),b}const h=o||Fn(u.dtype,c.dtype);if((u.dtype==="string"||c.dtype==="string"||l.shouldExecuteOnCPU([u,c]))&&r!=null){const m=l.texData.get(u.dataId).values,p=l.texData.get(c.dataId).values,x=u.dtype==="string"?nr(m):m,g=u.dtype==="string"?nr(p):p,[b,w]=r(u.shape,c.shape,x,g,h),y=l.makeTensorInfo(w,h),v=l.texData.get(y.dataId);return v.values=b,y}const d=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let f;return d?f=new vi(t,u.shape,c.shape,e):f=new lo(n,u.shape,c.shape),l.runWebGLProgram(f,[u,c],h)}}function Zi(n,t=!1){if(n==="linear")return t?AV:$V;if(n==="relu")return t?FV:SV;if(n==="elu")return t?TV:kV;if(n==="relu6")return t?RV:EV;if(n==="prelu")return t?iC:oC;if(n==="leakyrelu")return t?rC:sC;if(n==="sigmoid")return t?_V:NV;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aC{constructor(t,e,s,r=!1,o=!1,i=!1,a=null,u=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=sn(this.outputShape.length);const l=r?t[1]:t[2],h=Math.ceil(l/2),d=r?"i * 2, rc.y":"rc.y, i * 2",f=o?"rc.z, i * 2":"i * 2, rc.z",m=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let x="",g="";a&&(u?x=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:c?x=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:x=`vec4 activation(vec4 x) {
          ${a}
        }`,g="result = activation(result);");const b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let w="rc.x",y="rc.x";t[0]<e[0]?w=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(y=`imod(rc.x, ${e[0]})`),this.userCode=`
      ${x}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${w};
        int batchB = ${y};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${m[0]} * ${p[0]});
          result += (${m[1]} * ${p[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${g}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i0={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class a0{constructor(t,e,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Tt(e,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u0="return a * b;";function Im(n){const{inputs:t,backend:e}=n,{a:s,b:r}=t,o=Fn(s.dtype,r.dtype);if(s.dtype==="complex64"){const a=e.texData.get(s.dataId),u=e.texData.get(r.dataId),c=new a0(i0.REAL,s.shape,r.shape),l=new a0(i0.IMAG,s.shape,r.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:r.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:r.shape}],d=e.runWebGLProgram(c,h,"float32"),f=e.runWebGLProgram(l,h,"float32"),m=Mr({inputs:{real:d,imag:f},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),m}if(e.shouldExecuteOnCPU([s,r])){const a=e.texData.get(s.dataId),u=e.texData.get(r.dataId),[c,l]=Kz(s.shape,r.shape,a.values,u.values,o),h=e.makeTensorInfo(l,o),d=e.texData.get(h.dataId);return d.values=c,h}let i;return U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new vi(u0,s.shape,r.shape):i=new lo(u0,s.shape,r.shape),e.runWebGLProgram(i,[s,r],o)}const YV={kernelName:Fa,backendName:"webgl",kernelFunc:Im};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZV(n,t,e){const s=[si(n.shape),...ri(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},o=[si(t),...ri(t)],i=new nC(o,s),a=!0,u=[s],c=e.runWebGLProgram(i,[r],n.dtype,u,a);return{dataId:c.dataId,shape:t,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{shape:o}=s,i=e,a=X(r.shape),u=Z0(o,a),c=X(u);k(a===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const l=i.texData.get(r.dataId);return l.isPacked&&!mc(r.shape,u)&&!(l.texture!==null&&mc(l.shape,u))?ZV(r,u,i):(i.incRef(r.dataId),{dataId:r.dataId,shape:u,dtype:r.dtype})}const JV={kernelName:gl,backendName:"webgl",kernelFunc:lt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c0{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=t;this.outputShape=[r,i];const a=Math.floor(s/4)*4,u=s%4;let c="sumValue += dot(values, ones);";if(e!=null){const h=1/e;c=`sumValue += dot(values * ${Ho(h)?h.toPrecision(2):h}, ones);`}let l="";o%s>0&&(l=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${a};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QV{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=t;this.outputShape=[r,i];let a="0.0",u="";e==="prod"?a="1.0":e==="min"?(a="1.0 / 1e-20",u="min"):e==="max"&&(a="-1.0 / 1e-20",u="max");let c=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?c="sumValue":e==="prod"?c="prodValue":e==="all"?c="allValue":e==="any"&&(c="anyValue");const l=Math.floor(s/4)*4,h=s%4;let d=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";e==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):e==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let m="";o%s>0&&(m=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${m}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${l};
        if (${h===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tW(n){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const e=t.length?t[t.length-1].outSize:n[1],s=zl(e);t.push({inSize:e,windowSize:s,outSize:Math.ceil(e/s)})}return t}function $o(n,t,e,s){const r=tW(n.shape);let o=n;for(let i=0;i<r.length;i++){const{inSize:a,windowSize:u,outSize:c}=r[i];let l,h;e==="mean"?l=i===0?new c0({windowSize:u,inSize:a,batchSize:n.shape[0],outSize:c},a):new c0({windowSize:u,inSize:a,batchSize:n.shape[0],outSize:c}):l=new QV({windowSize:u,inSize:a,batchSize:n.shape[0],outSize:c},e),h=o,o=s.runWebGLProgram(l,[o],t),h.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(h)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eW{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let i=0;i<s.length;i++)s[i]=t[e[i]];this.outputShape=s,this.rank=s.length;const r=Qt(this.rank),o=nW(e);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function nW(n){const t=n.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<n.length;r++)s[n[r]]=e[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sW{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(t.length);for(let l=0;l<s.length;l++)s[l]=t[e[l]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Qt(this.rank),o=eC("rc",this.rank),i=new Array(this.rank);for(let l=0;l<e.length;l++)i[e[l]]=o[l];const a=`vec2(${i.slice(-2).join()})`,u=`++${o[this.rank-1]} < ${s[this.rank-1]}`,c=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${u}) {
        result[1] = ${c};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${c};
        if(${u}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sh(n,t,e){const s=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sW(n.shape,t):new eW(n.shape,t);return e.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rW(n,t,e,s){const r=t,o=n.shape.length,i=Mt(r,n.shape);let a=i;const u=ge(a,o),c=u!=null;let l=n;c&&(l=sh(n,u,s),a=$e(a.length,o)),Xe("sum",a,o);const[h,d]=Ge(l.shape,a);let f=h;e&&(f=Ne(h,i));const m=X(d),x=X(n.shape)/m,g=lt({inputs:{x:l},attrs:{shape:[x,m]},backend:s}),b=Ef(n.dtype),w=$o(g,b,"sum",s),y=lt({inputs:{x:w},attrs:{shape:f},backend:s});return s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(w),c&&s.disposeIntermediateTensorInfo(l),y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rh(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s;return rW(r,o,i,e)}const oW={kernelName:Cl,backendName:"webgl",kernelFunc:rh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dn(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{perm:o}=s,i=e,a=r.shape.length,u=new Array(a);for(let l=0;l<u.length;l++)u[l]=r.shape[o[l]];let c;if(i.shouldExecuteOnCPU([r])){const h=i.texData.get(r.dataId).values,d=Cm(h,r.shape,r.dtype,o,u);c=i.makeTensorInfo(u,r.dtype);const f=i.texData.get(c.dataId);f.values=d}else c=sh(r,o,i);return c}const iW={kernelName:Po,backendName:"webgl",kernelFunc:dn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uC=1e3;function gc({a:n,b:t,transposeA:e,transposeB:s,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:u=null}){const c=n.shape.length,l=t.shape.length,h=e?n.shape[c-2]:n.shape[c-1],d=s?t.shape[l-1]:t.shape[l-2],f=e?n.shape[c-1]:n.shape[c-2],m=s?t.shape[l-2]:t.shape[l-1],p=n.shape.slice(0,-2),x=t.shape.slice(0,-2),g=X(p),b=X(x),y=Tt(n.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,m]);k(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${t.shape} and transposeA=${e} and transposeB=${s} must match.`);const v=e?[g,h,f]:[g,f,h],C=s?[b,m,d]:[b,d,m],D=lt({inputs:{x:n},backend:r,attrs:{shape:v}}),I=lt({inputs:{x:t},backend:r,attrs:{shape:C}}),$=[D,I],S=Math.max(g,b),E=e?D.shape[1]:D.shape[2],N=o!=null,R=i!=null,L=u==="leakyrelu",O=u!=null?Zi(u,!0):null,_=N||R||L||O!=null;let j;if((f===1||m===1)&&E>uC&&_===!1){let q=D,J=I;e&&(q=dn({inputs:{x:D},backend:r,attrs:{perm:[0,2,1]}}),$.push(q)),s&&(J=dn({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),$.push(J));const nt=m!==1,at=m===1;let st=q;nt&&(st=lt({inputs:{x:q},backend:r,attrs:{shape:[S,E,1]}}),$.push(st));const ct=m===1?2:1;let ut=J;at&&(ut=lt({inputs:{x:J},backend:r,attrs:{shape:[S,1,E]}}),$.push(ut));const gt=Im({inputs:{a:st,b:ut},backend:r});j=rh({inputs:{x:gt},backend:r,attrs:{axis:ct,keepDims:!0}}),$.push(gt)}else{const q=Fn(n.dtype,t.dtype),J=new aC(v,C,[S,f,m],e,s,N,O,R,L),nt=[D,I];if(o!=null&&nt.push(o),R&&nt.push(i),L){const at=r.makeTensorInfo([],"float32",Sr(a,"float32"));nt.push(at),$.push(at)}j=r.runWebGLProgram(J,nt,q)}const G=lt({inputs:{x:j},backend:r,attrs:{shape:y}});$.push(j);for(const q of $)r.disposeIntermediateTensorInfo(q);return G}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aW(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:a}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:h}=s;return gc({a:r,b:o,transposeA:u,transposeB:c,backend:e,bias:i,preluActivationWeights:a,leakyreluAlpha:h,activation:l})}const uW={kernelName:Uu,backendName:"webgl",kernelFunc:aW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l0="return abs(x);";function cW(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const o=e.texData.get(s.dataId),i=Qv(o.values);return e.makeTensorInfo(s.shape,s.dtype,i)}let r;return U().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new hr(s.shape,l0):r=new Rs(s.shape,l0),e.runWebGLProgram(r,[s],s.dtype)}const lW={kernelName:Nc,backendName:"webgl",kernelFunc:cW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hW=is+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,dW=zt({opSnippet:hW}),fW={kernelName:sa,backendName:"webgl",kernelFunc:dW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pW=is+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,mW=zt({opSnippet:pW}),gW={kernelName:ra,backendName:"webgl",kernelFunc:mW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h0="return a + b;",xW=Ye({opSnippet:h0,packedOpSnippet:h0,supportsComplex:!0,cpuKernelImpl:Sz}),bW={kernelName:li,backendName:"webgl",kernelFunc:xW};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wW{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yW{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zu(n){const{inputs:t,backend:e}=n,s=t;if(s.length===1)return _n({inputs:{x:s[0]},backend:e});if(s.length>U().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(s.length/2),c=zu({inputs:s.slice(0,u),backend:e}),l=zu({inputs:s.slice(u),backend:e});return zu({inputs:[c,l],backend:e})}const r=s.map(u=>u.dtype).reduce((u,c)=>Fn(u,c)),o=s.map(u=>u.shape),a=U().getBool("WEBGL_PACK")?new yW(s[0].shape,o):new wW(s[0].shape,o);return e.runWebGLProgram(a,s,r)}const vW={kernelName:Pd,backendName:"webgl",kernelFunc:zu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s,a=r.shape.length,u=Mt(o,r.shape);let c=u;const l=ge(c,a);let h=r;l!=null&&(h=dn({inputs:{x:r},backend:e,attrs:{perm:l}}),c=$e(c.length,a)),Xe("all",c,a);const[d,f]=Ge(h.shape,c),m=X(f),p=lt({inputs:{x:h},backend:e,attrs:{shape:[-1,m]}}),x=$o(p,p.dtype,"all",e);let g;if(i){const b=Ne(d,u);g=lt({inputs:{x},backend:e,attrs:{shape:b}})}else g=lt({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(x),l!=null&&e.disposeIntermediateTensorInfo(h),g}const DW={kernelName:zd,backendName:"webgl",kernelFunc:CW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s,a=r.shape.length,u=Mt(o,r.shape);let c=u;const l=ge(c,a);let h=r;l!=null&&(h=dn({inputs:{x:r},backend:e,attrs:{perm:l}}),c=$e(c.length,a)),Xe("any",c,a);const[d,f]=Ge(h.shape,c),m=X(f),p=lt({inputs:{x:h},backend:e,attrs:{shape:[-1,m]}}),x=$o(p,p.dtype,"any",e);let g;if(i){const b=Ne(d,u);g=lt({inputs:{x},backend:e,attrs:{shape:b}})}else g=lt({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(x),l!=null&&e.disposeIntermediateTensorInfo(h),g}const $W={kernelName:Vd,backendName:"webgl",kernelFunc:IW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kW{constructor(t,e,s){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:i}=t;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,i];const a=e==="max"?">":"<",u=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SW{constructor(t,e,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,k(t.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const o=t[t.length-1],i=Math.ceil(o/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,u=a.length,c=Qt(u),l=cn("coords",u);let h,d;if(i===1){d=u+1;const I=Qt(d);h=`
        ${I} sourceLocR = ${I}(${l.join()}, 0);
        ++${l[u-1]};
        ${I} sourceLocG = ${I}(${l.join()}, 0);
        ++${l[u-2]};
        ${I} sourceLocA = ${I}(${l.join()}, 0);
        --${l[u-1]};
        ${I} sourceLocB = ${I}(${l.join()}, 0);
        --${l[u-2]};`}else d=u,h=`
        ${c} sourceLocR = coords;
        ++${l[u-1]};
        ${c} sourceLocG = coords;
        ++${l[u-2]};
        ${c} sourceLocA = coords;
        --${l[u-1]};
        ${c} sourceLocB = coords;
        --${l[u-2]};`;const f=["x","y","z","w","u","v"].slice(0,d),m="."+f[d-1],p=f.map(I=>"int "+I),x=cn("sourceLocR",d-1).concat("inIdx.r"),g=cn("sourceLocG",d-1).concat("inIdx.g"),b=cn("sourceLocB",d-1).concat("inIdx.b"),w=cn("sourceLocA",d-1).concat("inIdx.a"),y=s==="max"?"greaterThan":"lessThan",v=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${w.join()})));`,C=`vec4(
            getAChannel(${x.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,D=r?"":`
      float getBestIndicesAChannel(${p.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${p.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${D}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${l[u-1]} < ${a[u-1]-1};
        bool hasNextRow = ${l[u-2]} < ${a[u-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${m}, sourceLocG${m},
          sourceLocB${m}, sourceLocA${m}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${C};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${C};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${y}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cC(n,t,e,s=null){let r=t.shape[0],o=t.shape[1];s!=null&&(r=s.shape[0],o=s.shape[1]);const i=zl(o),a={windowSize:i,inSize:o,batchSize:r,outSize:Math.ceil(o/i)},u=new kW(a,e,s==null),c=[t];s!=null&&c.push(s);const l=n.runWebGLProgram(u,c,"int32");if(l.shape[1]===1)return l;const h=cC(n,t,e,l);return n.disposeIntermediateTensorInfo(l),h}function lC(n,t,e,s=null){const r=s!=null?s.shape:t.shape,o=r[r.length-1],i=zl(o),a=new SW(r,i,e,s==null),u=s==null?[t]:[t,s],c=n.runWebGLProgram(a,u,"int32");if(c.shape.length===t.shape.length){const l=lC(n,t,e,c);return n.disposeIntermediateTensorInfo(c),l}return c}function hC(n,t,e,s){const r=[e];if(Xe("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!U().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const o=[],i=n.texData.get(t.dataId),a=i!==null&&i.isPacked;let u=t;a&&(u=n.unpackTensor(t),o.push(u));const[c,l]=Ge(u.shape,r),h=X(l),d=lt({inputs:{x:u},backend:n,attrs:{shape:[-1,h]}});o.push(d);const f=cC(n,d,s);o.push(f);const m=lt({inputs:{x:f},backend:n,attrs:{shape:c}});return o.forEach(p=>n.disposeIntermediateTensorInfo(p)),m}return lC(n,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;let i=Mt(o,r.shape);const a=ge(i,r.shape.length);let u=r;const c=[];a!=null&&(u=dn({inputs:{x:r},backend:e,attrs:{perm:a}}),c.push(u),i=$e(i.length,u.shape.length)),Xe("argMax",[i[0]],u.shape.length);const l=hC(e,u,i[0],"max");return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),l}const NW={kernelName:Ac,backendName:"webgl",kernelFunc:EW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;let i=Mt(o,r.shape);const a=ge(i,r.shape.length);let u=r;const c=[];a!=null&&(u=dn({inputs:{x:r},backend:e,attrs:{perm:a}}),c.push(u),i=$e(i.length,u.shape.length)),Xe("argMin",[i[0]],u.shape.length);const l=hC(e,u,i[0],"min");return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),l}const TW={kernelName:Tc,backendName:"webgl",kernelFunc:AW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FW=is+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,RW=zt({opSnippet:FW}),_W={kernelName:oa,backendName:"webgl",kernelFunc:RW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OW=is+"return log(x + sqrt(x * x + 1.0));",MW=zt({opSnippet:OW}),BW={kernelName:ia,backendName:"webgl",kernelFunc:MW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LW=is+`
  return atan(x);
`,PW=zt({opSnippet:LW}),zW={kernelName:aa,backendName:"webgl",kernelFunc:PW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VW=Dm+`
  return atan(a, b);
`,WW=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Io+`
  return result;
`,UW=Ye({opSnippet:VW,packedOpSnippet:WW}),GW={kernelName:ca,backendName:"webgl",kernelFunc:UW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HW=is+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,qW=zt({opSnippet:HW}),jW={kernelName:ua,backendName:"webgl",kernelFunc:qW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ji{constructor(t,e,s,r=!1,o=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,l=t.dilationWidth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,f=t.padInfo.top,m=t.padInfo.left;this.outputShape=t.outShape;const p=e==="avg",x=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let b="0.0";if(p||(b="-1.0 / 1e-20"),s){const I=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${u});
        const ivec2 pads = ivec2(${f}, ${m});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${I} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?o?x:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let y=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(y="avgValue / max(count, 1.0)");const v=Math.floor(i/4)*4,C=i%4,D=`
      if (${p}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${u});
      const ivec2 pads = ivec2(${f}, ${m});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${D}
          }

          int xC = xCCorner + ${v};
          if (${C===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${D}
          } else if (${C===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${D}
          } else if (${C===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${D}
          }
        }
        setOutput(${y});
      }
    `}}class $m{constructor(t,e,s,r=!1,o=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideDepth,u=t.strideHeight,c=t.strideWidth,l=t.dilationDepth,h=t.dilationHeight,d=t.dilationWidth,f=t.effectiveFilterDepth,m=t.effectiveFilterHeight,p=t.effectiveFilterWidth,x=t.padInfo.front,g=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const w=e==="avg";let y="0.0";if(w||(y="-1.0 / 1e-20"),s){const S=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${u}, ${c});
        const ivec3 pads = ivec3(${x}, ${g}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${m};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${p};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${S} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?o?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${m} * ${p} +
                      wR * ${p} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const v="max";let C=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(C="avgValue / max(count, 1.0)");const D=Math.floor(i/4)*4,I=i%4,$=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${u}, ${c});
      const ivec3 pads = ivec3(${x}, ${g}, ${b});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${D}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${$}
            }

            int xC = xCCorner + ${D};
            if (${I===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${$}
            } else if (${I===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${$}
            } else if (${I===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${$}
            }
          }
        }
        setOutput(${C});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;gu(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:u}=s,c=1;k(nn(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const l=rs(r.shape,o,i,c,a,u);if(l.filterWidth===1&&l.filterHeight===1&&jt(l.inShape,l.outShape))return _n({inputs:{x:r},backend:e});const h=new Ji(l,"avg",!1);return e.runWebGLProgram(h,[r],"float32")}const XW={kernelName:Fc,backendName:"webgl",kernelFunc:KW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:i,pad:a,dimRoundingMode:u,dataFormat:c}=s,l=[1,1,1],h=rr(r.shape,o,i,l,a,u,c),d=new $m(h,"avg",!1);return e.runWebGLProgram(d,[r],"float32")}const ZW={kernelName:Rc,backendName:"webgl",kernelFunc:YW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JW{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,r=t.strideHeight,o=t.strideWidth,i=t.dilationHeight,a=t.dilationWidth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth,l=u-1-t.padInfo.top,h=c-1-t.padInfo.left,d=1/(e*s);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class QW{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,r=t.filterWidth,o=t.strideDepth,i=t.strideHeight,a=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,h=t.effectiveFilterDepth,d=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=h-1-t.padInfo.front,p=d-1-t.padInfo.top,x=f-1-t.padInfo.left,g=1/(e*s*r);this.userCode=`
      const ivec3 pads = ivec3(${m}, ${p}, ${x});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tU(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,i=o,{filterSize:a,strides:u,pad:c,dimRoundingMode:l}=s,h=[1,1,1],d=rr(i.shape,a,u,h,c,l),f=new QW(d);return e.runWebGLProgram(f,[r],i.dtype)}const eU={kernelName:Ud,backendName:"webgl",kernelFunc:tU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nU(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,i=o;gu([r,o],"avgPoolGrad");const{filterSize:a,strides:u,pad:c}=s,l=rs(i.shape,a,u,1,c),h=new JW(l);return e.runWebGLProgram(h,[r],i.dtype)}const sU={kernelName:Wd,backendName:"webgl",kernelFunc:nU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rU(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o}=t,{transposeA:i,transposeB:a}=s;return gc({a:r,b:o,transposeA:i,transposeB:a,backend:e})}const oU={kernelName:_c,backendName:"webgl",kernelFunc:rU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iU{constructor(t,e,s,r,o,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Tt(t,e),Tt(t,s);let a="0.0";r!=null&&(Tt(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="1.0";o!=null&&(Tt(t,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aU{constructor(t,e,s,r,o,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Tt(t,e),Tt(t,s);let a="vec4(0.0)";r!=null&&(Tt(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="vec4(1.0)";o!=null&&(Tt(t,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uU=({inputs:n,backend:t,attrs:e})=>{const{x:s,mean:r,variance:o,offset:i,scale:a}=n;k(r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=e;u==null&&(u=.001);const c=[s,r,o];let l=null;i!=null&&(l=i.shape,c.push(i));let h=null;a!=null&&(h=a.shape,c.push(a));const d=U().getBool("WEBGL_PACK_NORMALIZATION")?new aU(s.shape,r.shape,o.shape,l,h,u):new iU(s.shape,r.shape,o.shape,l,h,u);return t.runWebGLProgram(d,c,c[0].dtype)},cU={kernelName:qc,backendName:"webgl",kernelFunc:uU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lU{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=Qt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=hU(this.rank);let r;const o=t.map((i,a)=>`sourceLoc.${yd[a]} = start[${a}] + coords.${yd[a]};`);r=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}}const yd=["x","y","z","w","u","v"];function hU(n){if(n===1)return"sourceLoc";if(n<=6)return yd.slice(0,n).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dU{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=Qt(this.rank),s=cn("coords",this.rank),r=cn("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${o})`,a=`
      result.x = ${i};
      if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${i};
        --${r[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${t[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${i};
        if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${i};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((l,h)=>`start[${h}]`).join()});`:t.map((l,h)=>`${r[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${a}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fU(n,t,e,s){const r=s.texData.get(n.dataId),o=s.makeTensorInfo(e,n.dtype),i=s.texData.get(o.dataId);Object.assign(i,r),i.refCount=1,i.shape=e,i.dtype=n.dtype;let a=bp(t,vt(n.shape));r.slice&&(a+=r.slice.flatOffset),i.slice={flatOffset:a,origDataId:r.slice&&r.slice.origDataId||n.dataId};const u=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,u+1),o}function Di(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,size:i}=s,[a,u]=Pl(r,o,i);if(mp(r,a,u),X(u)===0)return e.makeTensorInfo(u,r.dtype,[]);if(e.shouldExecuteOnCPU([r])||r.dtype==="string"){const h=e.texData.get(r.dataId),d=oV(h.values,a,u,r.shape,r.dtype);return e.makeTensorInfo(u,r.dtype,d)}const{isPacked:c}=e.texData.get(r.dataId),l=xp(r.shape,a,u);if(c||!l){const h=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new dU(u):new lU(u),d=[a];return e.runWebGLProgram(h,[r],r.dtype,d)}return e.uploadToGPU(r.dataId),fU(r,a,u,e)}const pU={kernelName:vl,backendName:"webgl",kernelFunc:Di};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mU=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,crops:i}=s;k(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((b,w)=>b*w),u=su(r.shape,o,a),c=ru(u.length,o.length),l=ou(r.shape,o,a),h=Ip(i,o.length),d=$p(l,i,o.length),f=[],m=lt({inputs:{x:r},backend:e,attrs:{shape:u}}),p=dn({inputs:{x:m},backend:e,attrs:{perm:c}}),x=lt({inputs:{x:p},backend:e,attrs:{shape:l}}),g=Di({inputs:{x},backend:e,attrs:{begin:h,size:d}});return f.push(m),f.push(p),f.push(x),f.forEach(b=>e.disposeIntermediateTensorInfo(b)),g},gU={kernelName:Oc,backendName:"webgl",kernelFunc:mU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:i}=s,a=e.readSync(r.dataId),u=e.readSync(o.dataId),c=Jv(a,u,o.dtype,o.shape,i);return e.makeTensorInfo([i],o.dtype,c)}const bU={kernelName:Gd,backendName:"webgl",kernelFunc:xU};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wU=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,yU=`
  return float(int(a.r) & int(b.r));
`;function vU(n){const{inputs:t,backend:e}=n,{a:s,b:r}=t,o=U().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=U().getNumber("WEBGL_VERSION");if(e.shouldExecuteOnCPU([s,r])||i===1){const u=e.texData.get(s.dataId).values,c=e.texData.get(r.dataId).values,[l,h]=Nz(s.shape,r.shape,u,c,s.dtype),d=e.makeTensorInfo(h,s.dtype),f=e.texData.get(d.dataId);return f.values=l,d}let a;return o?a=new vi(wU,s.shape,r.shape,!1):a=new lo(yU,s.shape,r.shape),e.runWebGLProgram(a,[s,r],s.dtype)}const CU={kernelName:Hd,backendName:"webgl",kernelFunc:vU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DU(n){const{inputs:t,backend:e}=n,{s0:s,s1:r}=t,o=e.readSync(s.dataId),i=e.readSync(r.dataId),a=Tt(Array.from(o),Array.from(i));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const IU={kernelName:s1,backendName:"webgl",kernelFunc:DU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $U="return float(a != b);",dC=Ye({opSnippet:$U,cpuKernelImpl:Yz,dtype:"bool"}),kU={kernelName:cl,backendName:"webgl",kernelFunc:dC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bu(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.texData.get(s.dataId);return _n({inputs:{x:r.complexTensorInfos.real},backend:e})}const SU={kernelName:xf,backendName:"webgl",kernelFunc:bu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EU="return float(int(x));";function NU(n,t){const e=new Rs(n.shape,EU),s=t.runWebGLProgram(e,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vd(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return _n({inputs:{x:r},backend:e});const i=Fe(r.shape),a=vd({inputs:{x:r},backend:e,attrs:{dtype:"float32"}}),u=Mr({inputs:{real:a,imag:i},backend:e});return i.dispose(),e.disposeIntermediateTensorInfo(a),u}if(r.dtype==="complex64"){const i=bu({inputs:{input:r},backend:e}),a=vd({inputs:{x:i},backend:e,attrs:{dtype:o}});return e.disposeIntermediateTensorInfo(i),a}if(!J0(r.dtype,o)){const i=_n({inputs:{x:r},backend:e});return{dataId:i.dataId,shape:i.shape,dtype:o}}if(e.shouldExecuteOnCPU([r])){const i=e.texData.get(r.dataId).values,[a,u,c]=Az(i,r.shape,r.dtype,o);return e.makeTensorInfo(a,u,c)}if(o==="int32")return NU(r,e);if(o==="bool"){const i=e.makeTensorInfo([],"bool",tn("bool",1)),u=dC({inputs:{a:r,b:i},backend:e});return e.disposeIntermediateTensorInfo(i),u}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const AU={kernelName:la,backendName:"webgl",kernelFunc:vd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d0="return ceil(x);",TU=zt({opSnippet:d0,packedOpSnippet:d0,cpuKernelImpl:Tz}),FU={kernelName:ha,backendName:"webgl",kernelFunc:TU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RU{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _U{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{clipValueMin:o,clipValueMax:i}=s;let a;U().getBool("WEBGL_PACK_CLIP")?a=new _U(r.shape):a=new RU(r.shape);const u=[[o],[i]];return e.runWebGLProgram(a,[r],r.dtype,u)}const MU={kernelName:da,backendName:"webgl",kernelFunc:OU};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BU{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f0(n,t){return{dataId:t.dataId,dtype:t.dtype,shape:n.shape}}function LU(n){const{inputs:t,backend:e}=n,{x:s}=t,r=e.texData.get(s.dataId),o=new BU(s.shape),i=[f0(s,r.complexTensorInfos.real),f0(s,r.complexTensorInfos.imag)];return e.runWebGLProgram(o,i,i[0].dtype)}const PU={kernelName:Mc,backendName:"webgl",kernelFunc:LU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zU{constructor(t){this.outputShape=[],this.outputShape=Bs(t,1),this.variableNames=t.map((i,a)=>`T${a}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let i=1;i<e.length;i++)e[i]=e[i-1]+t[i][1];const s=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<e.length;i++){const a=e[i-1];s.push(`else if (yC < ${e[i]}) setOutput(getT${i}(yR, yC-${a}));`)}const r=e.length,o=e[e.length-1];s.push(`else setOutput(getT${r}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VU{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Bs(t,e);const s=this.outputShape,r=s.length,o=Qt(r),i=cn("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((p,x)=>`T${x}`);const u=new Array(t.length-1);u[0]=t[0][e];for(let p=1;p<u.length;p++)u[p]=u[p-1]+t[p][e];const c=a[e],l=a.slice(-2),h=a.join();let d=`if (${c} < ${u[0]}) {
        return getChannel(
            getT0(${h}), vec2(${l.join()}));
        }`;for(let p=1;p<u.length;p++){const x=u[p-1];d+=`
        if (${c} < ${u[p]}  && ${c} >= ${u[p-1]}) {
          return getChannel(
            getT${p}(${Mu(a,c,x)}),
            vec2(${Mu(l,c,x)}));
        }`}const f=u.length,m=u[u.length-1];d+=`
        return getChannel(
          getT${f}(${Mu(a,c,m)}),
          vec2(${Mu(l,c,m)}));`,this.userCode=`
      float getValue(${a.map(p=>"int "+p)}) {
        ${d}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[r-1]} = ${i[r-1]} + 1;
        if (${i[r-1]} < ${s[r-1]}) {
          result.g = getValue(${i});
        }

        ${i[r-2]} = ${i[r-2]} + 1;
        if (${i[r-2]} < ${s[r-2]}) {
          result.a = getValue(${i});
        }

        ${i[r-1]} = ${i[r-1]} - 1;
        if (${i[r-2]} < ${s[r-2]} &&
            ${i[r-1]} < ${s[r-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function Mu(n,t,e){const s=n.indexOf(t);return n.map((o,i)=>i===s?`${o} - ${e}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oh(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.texData.get(s.dataId);return _n({inputs:{x:r.complexTensorInfos.imag},backend:e})}const WU={kernelName:cf,backendName:"webgl",kernelFunc:oh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Li(n,t,e){const s=n[0].dtype;if(s==="complex64"){const f=n.map(b=>bu({inputs:{input:b},backend:e})),m=n.map(b=>oh({inputs:{input:b},backend:e})),p=Li(f,t,e),x=Li(m,t,e),g=Mr({inputs:{real:p,imag:x},backend:e});return f.forEach(b=>e.disposeIntermediateTensorInfo(b)),m.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(x),g}let r=e.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const f=n.map(y=>{const C=[-1,X(y.shape.slice(t))];return lt({inputs:{x:y},backend:e,attrs:{shape:C}})}),m=f.map(y=>({vals:e.readSync(y.dataId),shape:y.shape})),p=Bs(f.map(y=>y.shape),1),x=f[0].shape[0]===1,g=Fz(m,p,s,x),b=Bs(n.map(y=>y.shape),t),w=e.makeTensorInfo(b,s,g);return f.forEach(y=>e.disposeIntermediateTensorInfo(y)),w}const o=n.filter(f=>X(f.shape)>0),i=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const f=i?new Rs(n[0].shape,ar):new hr(n[0].shape,ar);return e.runWebGLProgram(f,n,s)}const a=U().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>a){const f=[];for(let p=0;p<o.length;p+=a){const x=o.slice(p,p+a);f.push(Li(x,t,e))}const m=Li(f,t,e);for(const p of f)e.disposeIntermediateTensorInfo(p);return m}if(i){const f=new VU(o.map(m=>m.shape),t);return e.runWebGLProgram(f,o,s)}const{tensors2D:u,outShape:c}=UU(o,t,e),l=new zU(u.map(f=>f.shape)),h=e.runWebGLProgram(l,u,s);u.forEach(f=>e.disposeIntermediateTensorInfo(f));const d=lt({inputs:{x:h},attrs:{shape:c},backend:e});return e.disposeIntermediateTensorInfo(h),d}function UU(n,t,e){const s=Bs(n.map(o=>o.shape),t);return{tensors2D:n.map(o=>lt({inputs:{x:o},attrs:{shape:[-1,X(o.shape.slice(t))]},backend:e})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fC(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s,o=Mt(r,t[0].shape)[0],i=t.map(c=>c.shape);vp(i,o);const a=Bs(t.map(c=>c.shape),o);if(X(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);const u=t.filter(c=>X(c.shape)>0);return u.length===1?_n({inputs:{x:u[0]},backend:e}):Li(u,o,e)}const GU={kernelName:Bc,backendName:"webgl",kernelFunc:fC};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pC{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.padInfo.top,a=t.padInfo.left,u=t.strideHeight,c=t.strideWidth,l=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,f=t.filterWidth,m=Math.floor(t.inChannels/4)*4,p=t.inChannels%4,x=t.dataFormat==="channelsLast",g=x?1:2,b=x?2:3,w=x?3:1;let y="",v="";s&&(r?y=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?y=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:y=`
          float activation(float x) {
            ${s}
          }
        `,v="result = activation(result);");const C=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      const ivec2 strides = ivec2(${u}, ${c});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${m}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${x}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${p===1}) {

              if (${x}) {
                dotProd +=
                    getX(batch, xR, xC, ${m}) *
                    getW(wR, wC, ${m}, d2);
              } else {
                dotProd +=
                    getX(batch, ${m}, xR, xC) *
                    getW(wR, wC, ${m}, d2);
              }

            } else if (${p===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2)
              );

              if (${x}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${p===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2),
                getW(wR, wC, ${m} + 2, d2)
              );

              if (${x}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1),
                  getX(batch, xR, xC, ${m} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC),
                  getX(batch, ${m} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${C}
        ${v}
        setOutput(result);
      }
    `}}class HU{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,s=t.padInfo.top,r=t.padInfo.left,o=t.strideDepth,i=t.strideHeight,a=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,h=t.filterDepth,d=t.filterHeight,f=t.filterWidth,m=Math.floor(t.inChannels/4)*4,p=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${i}, ${a});
      const ivec3 pads = ivec3(${e}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${m}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${p===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${m}) *
                  getW(wF, wR, wC, ${m}, d2);
              } else if (${p===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${p===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1),
                  getX(batch, xF, xR, xC, ${m} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2),
                  getW(wF, wR, wC, ${m} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mC{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=sn(this.outputShape.length);const i=t.padInfo.left,a=t.strideWidth,u=t.dilationWidth,c=t.filterHeight,l=t.filterWidth,h=l;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<l;x++)d+=`
           vec4 xTexelC${x*2};
           int xTexelC${x*2}Ready;
           vec4 xTexelC${x*2+1};
           int xTexelC${x*2+1}Ready;
           vec4 xC${x};`;d+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let x=0;x<l;x++)d+=`
           xTexelC${x*2} = vec4(0.0);
           xTexelC${x*2}Ready = 0;
           xTexelC${x*2+1} = vec4(0.0);
           xTexelC${x*2+1}Ready = 0;
           xC${x} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let x=0;x<(h+1)/2;x++){const g=x*2;if(d+=`
           xC = xCCorner + ${g*u};
           `,a===1){if(g<l&&(i%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,u===1&&g>0?d+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<l)){const b=i%2===0?_d(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,u>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:d+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):b===1?d+=`
                     xC${g+1} = xTexelC${g};
                     `:d+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<l&&(i%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<l&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<l&&(d+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<l&&(d+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<l&&(d+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let f="",m="";s&&(r?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:o?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:f=`vec4 activation(vec4 x) {
           ${s}
         }`,m="result = activation(result);");const p=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${p}
         ${m}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qU{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=sn(this.outputShape.length);const{dataFormat:s}=e,r=pn(),o=s==="channelsLast",i=o?1:2,a=o?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let c="";for(let l=0;l<=1;l++)for(let h=0;h<=1;h++)c+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${l};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xc(n,t){const e=n.length;return e>=3?t?[...n.slice(0,-3),n[e-3]*n[e-2],n[e-1]]:[...n.slice(0,-3),n[e-3],n[e-2]*n[e-1]]:!t&&e===1&&n[0]>1?[n[0],1]:null}function gC({x:n,filter:t,convInfo:e,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const u=n.shape,c=s.texData.get(n.dataId),l=e.inChannels,h=u[0]*u[1]*u[2],d=e.outChannels,f=e.dataFormat==="channelsLast",m=!1,p=!1;let x;const g=[];if(o!=null){const y=xc(o.shape,f);y!=null&&(o=lt({inputs:{x:o},backend:s,attrs:{shape:y}}),g.push(o))}if(r!=null){const y=xc(r.shape,f);y!=null&&(r=lt({inputs:{x:r},backend:s,attrs:{shape:y}}),g.push(r))}if(!((h===1||d===1)&&l>uC)&&c.isPacked&&f&&c.texture!=null&&u[2]%2!==0&&jt(c.shape.slice(-3),u.slice(-3))){const y=u[0]*u[1]*(u[2]+1),v={dataId:n.dataId,shape:[1,y,e.inChannels],dtype:n.dtype},C=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,k(mc(c.shape,v.shape),()=>`packed reshape ${c.shape} to ${v.shape} isn't free`);const D=lt({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}});g.push(D);const I=gc({a:v,b:D,backend:s,transposeA:m,transposeB:p,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),$=s.texData.get(I.dataId);k($.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=C,$.shape=e.outShape,x=_n({inputs:{x:I},backend:s}),x.shape=e.outShape,g.push(I)}else{const y=e.outHeight*e.outWidth,v=lt({inputs:{x:n},backend:s,attrs:{shape:f?[e.batchSize,y,e.inChannels]:[e.batchSize,e.inChannels,y]}}),C=lt({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}}),D=gc({a:f?v:C,b:f?C:v,transposeA:!f,transposeB:p,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i});x=lt({inputs:{x:D},backend:s,attrs:{shape:e.outShape}}),g.push(v),g.push(C),g.push(D)}for(const y of g)s.disposeIntermediateTensorInfo(y);return x}function xC({x:n,filter:t,convInfo:e,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const{filterWidth:u,filterHeight:c,inChannels:l,outWidth:h,outHeight:d,dataFormat:f}=e,m=f==="channelsLast",p=u*c*l,x=d*h,g=[e.batchSize,p,x],b=!0,w=!1,y=[];if(o!=null){const G=xc(o.shape,m);G!=null&&(o=lt({inputs:{x:o},backend:s,attrs:{shape:G}}),y.push(o))}if(r!=null){const G=xc(r.shape,m);G!=null&&(r=lt({inputs:{x:r},backend:s,attrs:{shape:G}}),y.push(r))}const v=lt({inputs:{x:t},backend:s,attrs:{shape:[1,p,X(t.shape)/p]}});y.push(v);const C=new qU(g,e),D=[n.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],I=s.runWebGLProgram(C,[n],"float32",D),$=lt({inputs:{x:I},backend:s,attrs:{shape:g}});y.push(I),y.push($);const S=r!=null,E=o!=null,N=a==="leakyrelu",R=a?Zi(a,!0):null,L=new aC(m?$.shape:v.shape,m?v.shape:$.shape,m?[e.batchSize,x,e.outChannels]:[e.batchSize,e.outChannels,x],b,w,S,R,E,N),O=m?[$,v]:[v,$];if(r&&O.push(r),E&&O.push(o),N){const G=s.makeTensorInfo([],"float32",Sr(i,"float32"));O.push(G),y.push(G)}const _=s.runWebGLProgram(L,O,"float32"),j=lt({inputs:{x:_},backend:s,attrs:{shape:e.outShape}});y.push(_);for(const G of y)s.disposeIntermediateTensorInfo(G);return j}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:i,pad:a,dataFormat:u,dilations:c,dimRoundingMode:l}=s,h=or(u),d=Ke(r.shape,o.shape,i,c,a,l,!1,h);let f;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))f=gC({x:r,filter:o,convInfo:d,backend:e});else if(d.strideWidth<=2&&h==="channelsLast"&&U().getBool("WEBGL_EXP_CONV")){const p=new mC(d),x=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];f=e.runWebGLProgram(p,[r,o],"float32",x)}else if(U().getBool("WEBGL_CONV_IM2COL"))f=xC({x:r,filter:o,convInfo:d,backend:e});else{const p=new pC(d);f=e.runWebGLProgram(p,[r,o],"float32")}const m=lt({inputs:{x:f},backend:e,attrs:{shape:d.outShape}});return e.disposeIntermediateTensorInfo(f),m}const KU={kernelName:Lc,backendName:"webgl",kernelFunc:jU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XU{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,r=t.padInfo.top,o=t.padInfo.left,i=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${r};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class YU{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,r=t.strideHeight,o=t.strideWidth,i=t.dataFormat==="channelsLast",a=e-1-t.padInfo.top,u=s-1-t.padInfo.left,c=i?1:2,l=i?2:3,h=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class ZU{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,s=t.strideHeight,r=t.strideWidth,o=t.padInfo.front,i=t.padInfo.top,a=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${o};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${i};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${a};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class JU{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,r=t.filterWidth,o=t.strideDepth,i=t.strideHeight,a=t.strideWidth,u=e-1-t.padInfo.front,c=s-1-t.padInfo.top,l=r-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${c}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:i,pad:a,dataFormat:u,dimRoundingMode:c,filterShape:l}=s,h=or(u),d=Ke(r.shape,l,i,1,a,c,!1,h),f=new XU(d);return e.runWebGLProgram(f,[r,o],"float32")}const t8={kernelName:jd,backendName:"webgl",kernelFunc:QU};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class e8{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=sn(this.outputShape.length);const e=t.filterHeight,s=t.filterWidth,r=e-1-t.padInfo.top,o=s-1-t.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n8(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{inputShape:i,strides:a,pad:u,dataFormat:c,dimRoundingMode:l}=s,h=or(c),d=Ke(i,o.shape,a,1,u,l,!1,h);if(U().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){const f=[[d.strideHeight,d.strideWidth]],m=new e8(d);return e.runWebGLProgram(m,[r,o],"float32",f)}else{const f=new YU(d);return e.runWebGLProgram(f,[r,o],"float32")}}const s8={kernelName:Pc,backendName:"webgl",kernelFunc:n8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:i,pad:a,dilations:u}=s,c=Nr(r.shape,o.shape,i,u,a),l=new HU(c);return e.runWebGLProgram(l,[r,o],"float32")}const o8={kernelName:zc,backendName:"webgl",kernelFunc:r8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:i,pad:a,filterShape:u}=s,c=Nr(r.shape,u,i,1,a),l=new ZU(c);return e.runWebGLProgram(l,[r,o],"float32")}const a8={kernelName:Kd,backendName:"webgl",kernelFunc:i8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u8(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{pad:i,strides:a,inputShape:u}=s,c=Nr(u,o.shape,a,1,i),l=new JU(c);return e.runWebGLProgram(l,[r,o],"float32")}const c8={kernelName:Xd,backendName:"webgl",kernelFunc:u8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l8=Ci+`
  return cos(x);
`,h8=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Io}
  return result;
`,d8=zt({opSnippet:l8,packedOpSnippet:h8}),f8={kernelName:fa,backendName:"webgl",kernelFunc:d8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p8=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,m8=zt({opSnippet:p8}),g8={kernelName:pa,backendName:"webgl",kernelFunc:m8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x8{constructor(t,e,s,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,u,c]=t,[l]=e,[h,d]=s;this.outputShape=[l,h,d,c];const f=r==="bilinear"?1:0,[m,p]=[`${a-1}.0`,`${u-1}.0`],[x,g,b]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${m} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${m}`],[w,y,v]=d>1?[`${(u-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${p} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${p}`];this.userCode=`
      const float height_ratio = float(${x});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${y};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${m} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${p} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b8=n=>{const{inputs:t,backend:e,attrs:s}=n,{image:r,boxes:o,boxInd:i}=t,{cropSize:a,method:u,extrapolationValue:c}=s,l=new x8(r.shape,o.shape,a,u,c);return e.runWebGLProgram(l,[r,o,i],"float32")},w8={kernelName:Zd,backendName:"webgl",kernelFunc:b8};var Qi;(function(n){n.Prod="*",n.Sum="+"})(Qi||(Qi={}));class p0{constructor(t,e,s,r){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,i=this.op===Qi.Prod?"1.0":"0.0",a=s?i:`getX(${m0(o,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let c="",l="";s?(c=r?`end != ${u-1}`:"end != 0",l=r?"end + 1":"end - 1"):(c=r?`end + pow2 < ${u}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Qt(o)} coords = getOutputCoords();
        int end = ${g0(o,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${l};
          ${g0(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${m0(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function m0(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.x, ${t}.y`;if(n===3)return`${t}.x, ${t}.y, ${t}.z`;if(n===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function g0(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.y`;if(n===3)return`${t}.z`;if(n===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bC(n,t,e,s,r,o){const i=t.shape.length,a=ge([s],i);let u=t;a!=null&&(u=dn({inputs:{x:t},backend:e,attrs:{perm:a}}));const c=$e(1,i)[0];if(c!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const l=u.shape[c];let h=_n({inputs:{x:u},backend:e});for(let d=0;d<=Math.ceil(Math.log2(l))-1;d++){const f=new p0(n,u.shape,!1,o),m=[[d]],p=h;h=e.runWebGLProgram(f,[h],h.dtype,m),e.disposeIntermediateTensorInfo(p)}if(r){const d=new p0(n,u.shape,r,o),f=h;h=e.runWebGLProgram(d,[h],h.dtype),e.disposeIntermediateTensorInfo(f)}if(a!=null){const d=Ar(a),f=dn({inputs:{x:h},backend:e,attrs:{perm:d}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(u),f}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:i,reverse:a}=s;return bC(Qi.Prod,r,e,o,i,a)}const v8={kernelName:Yd,backendName:"webgl",kernelFunc:y8};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:i,reverse:a}=s;return bC(Qi.Sum,r,e,o,i,a)}const D8={kernelName:Vc,backendName:"webgl",kernelFunc:C8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:i,binaryOutput:a}=s;if(r.shape.length===1){const u=e.readSync(r.dataId),c=e.readSync(o.dataId),l=Jv(u,c,o.dtype,o.shape,i);return e.makeTensorInfo([i],o.dtype,l)}else if(r.shape.length===2){const u=e.bufferSync(r),c=e.bufferSync(o),l=Ez(u,c,i,a);return e.makeTensorInfo(l.shape,o.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const $8={kernelName:Jd,backendName:"webgl",kernelFunc:I8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k8{constructor(t,e,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockSize:o,dataFormat:i}=s,a=r.shape[0],u=i==="NHWC"?r.shape[1]:r.shape[2],c=i==="NHWC"?r.shape[2]:r.shape[3],l=i==="NHWC"?r.shape[3]:r.shape[1],h=u*o,d=c*o,f=l/(o*o),m=i==="NHWC"?[a,h,d,f]:[a,f,h,d],p=new k8(m,o,i);return e.runWebGLProgram(p,[r],r.dtype)}const E8={kernelName:Qd,backendName:"webgl",kernelFunc:S8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wC{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=sn(this.outputShape.length);const i=t.filterHeight,a=t.filterWidth,u=t.outChannels/t.inChannels;let c="",l="";s&&(r?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:c=`
          float activation(float x) {
            ${s}
          }
        `,l="result = activation(result);");const h=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yC{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=sn(this.outputShape.length);const i=t.outChannels/t.inChannels,a=t.padInfo.left,u=t.strideWidth,c=t.dilationWidth,l=t.filterHeight,h=t.filterWidth,d=h;let f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<h;g++)f+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;f+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let g=0;g<h;g++)f+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(d+1)/2;g++){const b=g*2;if(f+=`
          xC = xCCorner + ${b*c};
          `,u===1){if(b<h&&(a%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,c===1&&b>0?f+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<h)){const w=a%2===0?_d(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${w};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,c>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:f+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):w===1?f+=`
                    xC${b+1} = xTexelC${b};
                    `:f+=`
                    xCOffset = xC + ${w};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<h&&(a%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<h&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<h&&(f+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<h&&(f+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<h&&(f+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let m="",p="";s&&(r?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:m=`vec4 activation(vec4 x) {
          ${s}
        }`,p="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${m}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${x}
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:i,pad:a,dilations:u,dimRoundingMode:c}=s;let l=u;l==null&&(l=[1,1]),k(nn(i,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const h=Ke(r.shape,o.shape,i,l,a,c,!0);let d;U().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new yC(h):d=new wC(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return e.runWebGLProgram(d,[r,o],"float32",f)}const A8={kernelName:Wc,backendName:"webgl",kernelFunc:N8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T8{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,r=t.padInfo.top,o=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${r};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class F8{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,r=t.strideHeight,o=t.strideWidth,i=e-1-t.padInfo.top,a=s-1-t.padInfo.left,u=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:i,dilations:a,pad:u,dimRoundingMode:c,filterShape:l}=s,h=Ke(r.shape,l,i,a,u,c,!0),d=new T8(h);return e.runWebGLProgram(d,[r,o],"float32")}const _8={kernelName:tf,backendName:"webgl",kernelFunc:R8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O8(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{strides:i,dilations:a,pad:u,dimRoundingMode:c,inputShape:l}=s,h=Ke(l,o.shape,i,a,u,c,!0),d=new F8(h);return e.runWebGLProgram(d,[r,o],"float32")}const M8={kernelName:ef,backendName:"webgl",kernelFunc:O8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class B8{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L8(n){const{inputs:t,backend:e}=n,{x:s}=t,r=[...s.shape,...s.shape],o=X(s.shape),i=lt({inputs:{x:s},backend:e,attrs:{shape:[o]}}),a=new B8(o),u=e.runWebGLProgram(a,[i],i.dtype),c=lt({inputs:{x:u},backend:e,attrs:{shape:r}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(u),c}const P8={kernelName:r1,backendName:"webgl",kernelFunc:L8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z8{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:s,padInfo:r,strideHeight:o,strideWidth:i,filterHeight:a,filterWidth:u,dilationHeight:c,dilationWidth:l}=t,{top:h,left:d}=r;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:i,pad:a,dilations:u}=s,c=Ja(r.shape,o.shape,i,a,"NHWC",u);let l;const h=new z8(c);l=e.runWebGLProgram(h,[r,o],"float32");const d=lt({inputs:{x:l},backend:e,attrs:{shape:c.outShape}});return e.disposeIntermediateTensorInfo(l),d}const W8={kernelName:Uc,backendName:"webgl",kernelFunc:V8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U8(n){const{inputs:t,backend:e,attrs:s}=n,{equation:r}=s,o=t,{allDims:i,summedDims:a,idDims:u}=Rp(r,o.length);Op(i.length,u,o);const{path:c,steps:l}=Mp(a,u),h=l.length;let d=null,f=i.length;const m=[];for(let p=0;p<h;++p){for(const x of l[p]){const{permutationIndices:g,expandDims:b}=_p(f,u[x]);let w;Bp(g)?w=o[x]:(w=dn({inputs:{x:o[x]},backend:e,attrs:{perm:g}}),m.push(w));const y=w.shape.slice();for(let v=0;v<b.length;++v)y.splice(b[v],0,1);jt(w.shape,y)||(w=lt({inputs:{x:w},backend:e,attrs:{shape:y}}),m.push(w)),d===null?d=w:(d=Im({inputs:{a:w,b:d},backend:e}),m.push(d))}p<h-1&&(c[p]>=0&&(d=rh({inputs:{x:d},backend:e,attrs:{axis:c[p]-(i.length-f),keepDims:!1}}),m.push(d)),f--)}for(const p of m)p!==d&&e.disposeIntermediateTensorInfo(p);return d}const G8={kernelName:nf,backendName:"webgl",kernelFunc:U8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H8="return (x >= 0.0) ? x : (exp(x) - 1.0);",q8=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,j8=zt({opSnippet:H8,packedOpSnippet:q8}),K8={kernelName:ga,backendName:"webgl",kernelFunc:j8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X8="return (b >= 0.0) ? a : a * (b + 1.0);",Y8=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Z8=n=>{const{inputs:t,backend:e}=n,{dy:s,y:r}=t,o=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new vi(Y8,s.shape,r.shape):new lo(X8,s.shape,r.shape);return e.runWebGLProgram(o,[s,r],s.dtype)},J8={kernelName:sf,backendName:"webgl",kernelFunc:Z8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q8=`
  return vec4(equal(a, b));
`,t6="return float(a == b);",e6=Ye({opSnippet:t6,packedOpSnippet:Q8,dtype:"bool",cpuKernelImpl:Rz}),n6={kernelName:Gc,backendName:"webgl",kernelFunc:e6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s6=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${kp};
  float a1 = ${Sp};
  float a2 = ${Ep};
  float a3 = ${Np};
  float a4 = ${Ap};
  float a5 = ${Tp};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,r6=zt({opSnippet:s6}),o6={kernelName:xa,backendName:"webgl",kernelFunc:r6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i6=Ci+`
  return exp(x);
`,a6=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,vC=zt({opSnippet:i6,packedOpSnippet:a6,cpuKernelImpl:_z,dtype:"float32"}),u6={kernelName:ba,backendName:"webgl",kernelFunc:vC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cd(n){const{inputs:t,attrs:e,backend:s}=n,{dim:r}=e,{input:o}=t,i=o.shape.length,a=o.shape.slice();let u=r;return r<0&&(k(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+r+1),a.splice(u,0,1),lt({inputs:{x:o},backend:s,attrs:{shape:a}})}const c6={kernelName:Hc,backendName:"webgl",kernelFunc:Cd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x0="return exp(x) - 1.0;",l6=zt({opSnippet:x0,packedOpSnippet:x0,cpuKernelImpl:Oz}),h6={kernelName:wa,backendName:"webgl",kernelFunc:l6};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class b0{constructor(t,e,s){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${r}.0`:"1.0";let a;if(t==="real")a="return real * expR - imag * expI;";else if(t==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CC(n,t,e){const s=e.texData.get(n.dataId),r=X(n.shape),o=n.shape[n.shape.length-1],i=r/o,a=lt({inputs:{x:n},backend:e,attrs:{shape:[i,o]}}),u=a.shape,c=new b0("real",u,t),l=new b0("imag",u,t),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],d=e.runWebGLProgram(c,h,"float32"),f=e.runWebGLProgram(l,h,"float32"),m=Mr({inputs:{real:d,imag:f},backend:e});e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f);const p=lt({inputs:{x:m},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(m),p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d6(n){const{inputs:t,backend:e}=n,{input:s}=t;return CC(s,!1,e)}const f6={kernelName:rf,backendName:"webgl",kernelFunc:d6};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class p6{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wu(n){const{backend:t,attrs:e}=n,{shape:s,value:r}=e;let{dtype:o}=e;if(o=o||ui(r),o==="string"){const i=Ce(o,X(s));return i.fill(r),t.makeTensorInfo(s,o,i)}else{const i=new p6(s,r),a=[[r]];return t.runWebGLProgram(i,[],o,a)}}const m6={kernelName:of,backendName:"webgl",kernelFunc:wu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g6{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x6={kernelName:af,backendName:"webgl",kernelFunc:({inputs:n,backend:t})=>{const{image:e}=n,s=t,r=new g6(e.shape);return s.runWebGLProgram(r,[e],e.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w0="return floor(x);",b6=zt({opSnippet:w0,packedOpSnippet:w0,cpuKernelImpl:Mz}),w6={kernelName:ya,backendName:"webgl",kernelFunc:b6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y6=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,v6=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,C6=Ye({opSnippet:y6,packedOpSnippet:v6,dtype:"int32"}),D6={kernelName:va,backendName:"webgl",kernelFunc:C6};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class I6{constructor(t){this.variableNames=["A"];const e=pn(),[s,r]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $6{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=pn(),[s,r]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k6={kernelName:v2,backendName:"webgl",kernelFunc:S6};let No,Rh=U().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function S6(n){const{inputs:t,backend:e,attrs:s}=n;let{pixels:r}=t;const{numChannels:o}=s,i=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[u,c]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],l=[c,u],h=[c,u,o];if(a||i){const p=U().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(No==null||p!==Rh)&&(Rh=p,No=document.createElement("canvas").getContext("2d",{willReadFrequently:Rh})),No.canvas.width=u,No.canvas.height=c,No.drawImage(r,0,0,u,c),r=No.canvas}const d=e.makeTensorInfo(l,"int32");e.texData.get(d.dataId).usage=zn.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(d.dataId),r);const f=U().getBool("WEBGL_PACK")?new $6(h):new I6(h),m=e.runWebGLProgram(f,[d],"int32");return e.disposeData(d.dataId),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E6(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=t,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:m}=s,p=or(l),x=Ke(r.shape,o.shape,u,h,c,d,!1,p);let g;const b=[],w=i!=null,y=a!=null,v=f==="leakyrelu",C=()=>{const I=[r,o],$=(S,E)=>{if(E==="NCHW"&&S.shape.length===1&&S.shape[0]!==1){const N=lt({inputs:{x:S},backend:e,attrs:{shape:[S.shape[0],1,1]}});return b.push(N),N}return S};if(w&&I.push($(i,l)),y&&I.push($(a,l)),v){const S=e.makeTensorInfo([],"float32",Sr(m,"float32"));I.push(S),b.push(S)}return I};if(x.filterHeight===1&&x.filterWidth===1&&x.dilationHeight===1&&x.dilationWidth===1&&x.strideHeight===1&&x.strideWidth===1&&(x.padInfo.type==="SAME"||x.padInfo.type==="VALID"))g=gC({x:r,filter:o,convInfo:x,backend:e,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:m});else if(x.strideWidth<=2&&p==="channelsLast"&&U().getBool("WEBGL_EXP_CONV")){const I=f?Zi(f,!0):null,$=new mC(x,w,I,y,v),S=[[x.padInfo.top,x.padInfo.left],[x.strideHeight,x.strideWidth],[x.dilationHeight,x.dilationWidth],[x.inHeight,x.inWidth]],E=C();g=e.runWebGLProgram($,E,"float32",S)}else if(U().getBool("WEBGL_CONV_IM2COL"))g=xC({x:r,filter:o,convInfo:x,backend:e,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:m});else{const I=f?Zi(f,!1):null,$=new pC(x,w,I,y,v),S=C();g=e.runWebGLProgram($,S,"float32")}const D=lt({inputs:{x:g},backend:e,attrs:{shape:x.outShape}});return b.push(g),b.forEach(I=>e.disposeIntermediateTensorInfo(I)),D}const N6={kernelName:Gu,backendName:"webgl",kernelFunc:E6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A6(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=s,m=[];let p=l;p==null&&(p=[1,1]),k(nn(u,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${p}'`);const x=Ke(r.shape,o.shape,u,p,c,h,!0),g=U().getBool("WEBGL_PACK_DEPTHWISECONV")&&x.strideWidth<=2&&x.outChannels/x.inChannels===1,b=d?Zi(d,g):null,w=[r,o],y=i!=null,v=a!=null,C=d==="leakyrelu";if(y&&w.push(i),v&&w.push(a),C){const S=e.makeTensorInfo([],"float32",Sr(f,"float32"));w.push(S),m.push(S)}let D;g?D=new yC(x,y,b,v,C):D=new wC(x,y,b,v,C);const I=[[x.padInfo.top,x.padInfo.left],[x.strideHeight,x.strideWidth],[x.dilationHeight,x.dilationWidth],[x.inHeight,x.inWidth]],$=e.runWebGLProgram(D,w,"float32",I);return m.forEach(S=>e.disposeIntermediateTensorInfo(S)),$}const T6={kernelName:D1,backendName:"webgl",kernelFunc:A6};class F6{constructor(t,e,s,r){this.sliceDim=t,this.strides=e,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const o=Qt(s.length);let i=`
    int index;`;for(let a=0;a<this.sliceDim;a++)i+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R6(n){const{inputs:t,backend:e}=n,{params:s,indices:r}=t,o=r.shape,i=o[o.length-1],a=X(s.shape),[u,c,l,h]=pp(s,r),d=lt({inputs:{x:r},backend:e,attrs:{shape:[c,i]}}),f=lt({inputs:{x:s},backend:e,attrs:{shape:[X(s.shape)/l,l]}});if(e.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const g=e.readSync(r.dataId),b=e.bufferSync(s),w=Bz(g,b,s.dtype,c,i,l,h,s.shape,a);return e.makeTensorInfo(u,s.dtype,w.values)}const m=new F6(i,h,[c,l],s.shape),p=e.runWebGLProgram(m,[f,d],f.dtype),x=lt({inputs:{x:p},backend:e,attrs:{shape:u}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),x}const _6={kernelName:o1,backendName:"webgl",kernelFunc:R6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class O6{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const s=Qt(this.rank),r=M6(t);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}}function M6(n,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("index"):s.push(`${e[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DC(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,indices:o}=t,{axis:i,batchDims:a}=s,u=Mt(i,r.shape)[0];if(U().get("DEBUG")){const b=e.readSync(o.dataId),w=r.shape[u];for(let y=0;y<b.length;++y){const v=b[y];k(v<=w-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${w-1}]`)}}const c=Pp(r,o,u,a),l=X(o.shape),h=[],d=lt({inputs:{x:r},backend:e,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=lt({inputs:{x:o},backend:e,attrs:{shape:[c.batchSize,l/c.batchSize]}});h.push(d),h.push(f);const m=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(e.shouldExecuteOnCPU([r,o])||r.dtype==="string"){const b=e.bufferSync(f),w=e.bufferSync(d),y=Lz(w,b,m);return h.forEach(v=>e.disposeIntermediateTensorInfo(v)),e.makeTensorInfo(c.outputShape,y.dtype,y.values)}const p=new O6(d.shape,m),x=e.runWebGLProgram(p,[d,f],d.dtype);h.push(x);const g=lt({inputs:{x},backend:e,attrs:{shape:c.outputShape}});return h.forEach(b=>e.disposeIntermediateTensorInfo(b)),g}const B6={kernelName:jc,backendName:"webgl",kernelFunc:DC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L6="return float(a > b);",P6=`
  return vec4(greaterThan(a, b));
`,z6=Ye({opSnippet:L6,packedOpSnippet:P6,cpuKernelImpl:Pz,dtype:"bool"}),V6={kernelName:Kc,backendName:"webgl",kernelFunc:z6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W6="return float(a >= b);",U6=`
  return vec4(greaterThanEqual(a, b));
`,G6=Ye({opSnippet:W6,packedOpSnippet:U6,dtype:"bool",cpuKernelImpl:zz}),H6={kernelName:Ca,backendName:"webgl",kernelFunc:G6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q6(n){const{inputs:t,backend:e}=n,{input:s}=t;return CC(s,!0,e)}const j6={kernelName:uf,backendName:"webgl",kernelFunc:q6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K6="return float(!isnan(x) && !isinf(x));",X6=zt({opSnippet:K6,dtype:"bool"}),Y6={kernelName:Ia,backendName:"webgl",kernelFunc:X6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z6="return float(isinf(x));",J6=zt({opSnippet:Z6,dtype:"bool"}),Q6={kernelName:$a,backendName:"webgl",kernelFunc:J6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tG="return float(isnan(x));",eG=zt({opSnippet:tG,dtype:"bool"}),nG={kernelName:ka,backendName:"webgl",kernelFunc:eG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sG="return float(a < b);",rG=`
  return vec4(lessThan(a, b));
`,oG=Ye({opSnippet:sG,packedOpSnippet:rG,cpuKernelImpl:Vz,dtype:"bool"}),iG={kernelName:Yc,backendName:"webgl",kernelFunc:oG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aG="return float(a <= b);",uG=`
  return vec4(lessThanEqual(a, b));
`,cG=Ye({opSnippet:aG,packedOpSnippet:uG,cpuKernelImpl:Wz,dtype:"bool"}),lG={kernelName:Zc,backendName:"webgl",kernelFunc:cG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hG(n){const{backend:t,attrs:e}=n,{start:s,stop:r,num:o}=e,i=Uz(s,r,o);return t.makeTensorInfo([i.length],"float32",i)}const dG={kernelName:i1,backendName:"webgl",kernelFunc:hG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fG=Ci+`
  return x < 0.0 ? 0./0. : log(x);
`,pG=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,mG=zt({opSnippet:fG,packedOpSnippet:pG,cpuKernelImpl:Gz}),gG={kernelName:Sa,backendName:"webgl",kernelFunc:mG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xG=Ci+`
  return log(1.0 + x);
`,bG=zt({opSnippet:xG}),wG={kernelName:Ea,backendName:"webgl",kernelFunc:bG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yG="return float(a >= 1.0 && b >= 1.0);",vG=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,CG=Ye({opSnippet:yG,packedOpSnippet:vG,dtype:"bool"}),DG={kernelName:Jc,backendName:"webgl",kernelFunc:CG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IG="return float(!(x >= 1.0));",$G=zt({opSnippet:IG}),kG={kernelName:Qc,backendName:"webgl",kernelFunc:$G};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SG="return float(a >= 1.0 || b >= 1.0);",EG=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,NG=Ye({opSnippet:SG,packedOpSnippet:EG,dtype:"bool"}),AG={kernelName:tl,backendName:"webgl",kernelFunc:NG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TG{constructor(t,e,s,r,o){this.variableNames=["x"],this.outputShape=[];const i=e,a=t[3]-1;this.outputShape=t;let u;const c=`float(${s}) + float(${r}) * sum`;o===.5?u=`inversesqrt(${c})`:o===1?u=`1.0/(${c})`:u=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FG{constructor(t,e,s,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,a=t[3]-1;this.outputShape=t;let u;const c=`float(${s}) + float(${r}) * sum`;o===.5?u=`inversesqrt(${c})`:o===1?u=`1.0/(${c})`:u=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RG=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{depthRadius:o,bias:i,alpha:a,beta:u}=s,c=U().getBool("WEBGL_PACK_NORMALIZATION")?new FG(r.shape,o,i,a,u):new TG(r.shape,o,i,a,u);return e.runWebGLProgram(c,[r],r.dtype)},_G={kernelName:el,backendName:"webgl",kernelFunc:RG};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OG{constructor(t,e,s,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=s,this.alpha=r,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MG=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r,y:o,dy:i}=t,{depthRadius:a,bias:u,alpha:c,beta:l}=s,h=new OG(r.shape,a,u,c,l);return e.runWebGLProgram(h,[r,o,i],r.dtype)},BG={kernelName:lf,backendName:"webgl",kernelFunc:MG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LG(n,t,e,s){const r=X(t),i=X(n.shape)/r,a=lt({inputs:{x:n},attrs:{shape:[i,r]},backend:s}),u=$o(a,n.dtype,"max",s),c=lt({inputs:{x:u},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(u),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IC(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reductionIndices:o,keepDims:i}=s,a=r.shape.length,u=Mt(o,r.shape);let c=u;const l=ge(c,a),h=l!=null,d=e.shouldExecuteOnCPU([r]);let f=r;if(h){if(d){const w=e.texData.get(f.dataId).values,y=new Array(a);for(let D=0;D<y.length;D++)y[D]=r.shape[l[D]];const v=Cm(w,r.shape,r.dtype,l,y);f=e.makeTensorInfo(y,r.dtype);const C=e.texData.get(f.dataId);C.values=v}else f=sh(r,l,e);c=$e(c.length,a)}Xe("max",c,a);const[m,p]=Ge(f.shape,c);let x=m;i&&(x=Ne(m,u));let g;if(d){const w=e.texData.get(f.dataId).values,y=Hz(w,X(p),x,r.dtype);g=e.makeTensorInfo(x,r.dtype);const v=e.texData.get(g.dataId);v.values=y}else g=LG(f,p,x,e);return h&&e.disposeIntermediateTensorInfo(f),g}const PG={kernelName:nl,backendName:"webgl",kernelFunc:IC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zG=Dm+`
  return max(a, b);
`,VG=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Io+`
  return result;
`,WG=Ye({opSnippet:zG,packedOpSnippet:VG,cpuKernelImpl:qz}),UG={kernelName:Na,backendName:"webgl",kernelFunc:WG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GG(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;gu(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:u}=s,c=1;k(nn(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const l=rs(r.shape,o,i,c,a,u);if(l.filterWidth===1&&l.filterHeight===1&&jt(l.inShape,l.outShape))return _n({inputs:{x:r},backend:e});const h=new Ji(l,"max",!1);return e.runWebGLProgram(h,[r],r.dtype)}const HG={kernelName:sl,backendName:"webgl",kernelFunc:GG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qG(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:i,pad:a,dataFormat:u,dimRoundingMode:c}=s,l=[1,1,1],h=rr(r.shape,o,i,l,a,c,u),d=new $m(h,"max",!1);return e.runWebGLProgram(d,[r],r.dtype)}const jG={kernelName:rl,backendName:"webgl",kernelFunc:qG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KG{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,s=t.strideWidth,r=t.dilationHeight,o=t.effectiveFilterHeight,i=t.effectiveFilterWidth,a=o-1-t.padInfo.top,u=i-1-t.padInfo.left,c=o*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class XG{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,s=t.strideHeight,r=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,a=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,l=t.effectiveFilterWidth,h=u-1-t.padInfo.front,d=c-1-t.padInfo.top,f=l-1-t.padInfo.left,m=u*c*l-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${m} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YG(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,i=o,{filterSize:a,strides:u,pad:c,dimRoundingMode:l}=s,h=[1,1,1],d=rr(i.shape,a,u,h,c,l),f=new $m(d,"max",!0),m=e.runWebGLProgram(f,[i],i.dtype),p=new XG(d),x=e.runWebGLProgram(p,[r,m],i.dtype);return e.disposeIntermediateTensorInfo(m),x}const ZG={kernelName:df,backendName:"webgl",kernelFunc:YG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JG(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o,output:i}=t,a=o;gu([o,i],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:h}=s,d=rs(a.shape,u,c,1,l,h),f=!0,m=new Ji(d,"max",f),p=e.runWebGLProgram(m,[a],a.dtype),x=new KG(d),g=e.runWebGLProgram(x,[r,p],a.dtype);return e.disposeIntermediateTensorInfo(p),g}const QG={kernelName:hf,backendName:"webgl",kernelFunc:JG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t5(n,t,e,s){let r=new Ji(e,"max",!1);const o=s.runWebGLProgram(r,[n],"float32");r=new Ji(e,"max",!0,!0,t);const i=s.runWebGLProgram(r,[n],"float32");return[o,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e5={kernelName:a1,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=t,u=e;k(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const c=[1,1];k(nn(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const l=rs(s.shape,r,o,c,i),[h,d]=t5(s,a,l,u);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n5(n,t,e,s){const r=X(t),i=X(n.shape)/r,a=lt({inputs:{x:n},attrs:{shape:[i,r]},backend:s}),u=$o(a,"float32","mean",s),c=lt({inputs:{x:u},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(u),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s5={kernelName:ol,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{keepDims:r,axis:o}=t,i=e,a=s.shape.length,u=Mt(o,s.shape);let c=u;const l=ge(c,a),h=l!=null,d=i.shouldExecuteOnCPU([s]),f=[];let m=s;if(h){if(d){const y=i.texData.get(m.dataId).values,v=new Array(a);for(let I=0;I<v.length;I++)v[I]=s.shape[l[I]];const C=Cm(y,s.shape,s.dtype,l,v);m=i.makeTensorInfo(v,s.dtype);const D=i.texData.get(m.dataId);D.values=C}else m=sh(s,l,i);f.push(m),c=$e(c.length,a)}Xe("sum",c,a);const[p,x]=Ge(m.shape,c);let g=p;r&&(g=Ne(p,u));const b=n5(m,x,g,i);for(const w of f)i.disposeIntermediateTensorInfo(w);return b}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r5(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s,a=r.shape.length,u=Mt(o,r.shape);let c=u;const l=ge(c,a);let h=r;l!=null&&(h=dn({inputs:{x:r},backend:e,attrs:{perm:l}}),c=$e(c.length,r.shape.length)),Xe("min",c,a);const[d,f]=Ge(h.shape,c),m=X(f),p=lt({inputs:{x:h},backend:e,attrs:{shape:[-1,m]}}),x=$o(p,p.dtype,"min",e);let g;if(i){const b=Ne(d,u);g=lt({inputs:{x},backend:e,attrs:{shape:b}})}else g=lt({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(x),l!=null&&e.disposeIntermediateTensorInfo(h),g}const o5={kernelName:il,backendName:"webgl",kernelFunc:r5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i5=Dm+`
  return min(a, b);
`,a5=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Io+`
  return result;
`,u5=Ye({opSnippet:i5,packedOpSnippet:a5,cpuKernelImpl:jz}),c5={kernelName:Aa,backendName:"webgl",kernelFunc:u5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l5{constructor(t,e,s){this.variableNames=["x"],this.outputShape=e.map((l,h)=>l[0]+t[h]+l[1]);const r=t.length,o=Qt(r),i=e.map(l=>l[0]).join(","),a=e.map((l,h)=>l[0]+t[h]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),c=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class h5{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((m,p)=>m[0]+t[p]+m[1]);const r=t.length,o=Qt(r),i=e.map(m=>m[0]).join(","),a=e.map((m,p)=>m[0]+t[p]).join(","),u=cn("rc",r),c=cn("source",r),l=`${u[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${c.slice(-2).join()})`,d=s==="reflect"?0:1;let f="";if(r===1){const m=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;f=`
        ${o} rc = outputLoc;
        ${m}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${u[r-1]} += 1;
        if(${l}) {
          ${m}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
      `}else{const m=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;f=`
        ${o} rc = outputLoc;
        ${m}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${u[r-1]} += 1;
        if(${l}) {
          ${m}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
        rc = outputLoc;
        ${u[r-2]} += 1;
        if(${u[r-2]} < ${this.outputShape[r-2]}) {
          ${m}
          result[2] = getChannel(getX(${c.join()}), ${h});
          ${u[r-1]} += 1;
          if(${l}) {
            ${m}
            result[3] = getChannel(getX(${c.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d5=({inputs:n,backend:t,attrs:e})=>{const{x:s}=n,{paddings:r,mode:o}=e,i=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new h5(s.shape,r,o):new l5(s.shape,r,o);return t.runWebGLProgram(i,[s],s.dtype)},f5={kernelName:al,backendName:"webgl",kernelFunc:d5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p5=`if (b == 0.0) return NAN;
  return mod(a, b);`,m5=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Io+`
  return result;
`,g5=Ye({opSnippet:p5,packedOpSnippet:m5}),x5={kernelName:Ta,backendName:"webgl",kernelFunc:g5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class b5{constructor(t,e,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w5=`
if (a == b) {
  return 1.0;
};
return a / b;`,y5=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,$C=Ye({opSnippet:w5,packedOpSnippet:y5,checkOutOfBounds:!0}),v5={kernelName:ma,backendName:"webgl",kernelFunc:$C};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y0="return a - b;",kC=Ye({opSnippet:y0,packedOpSnippet:y0,supportsComplex:!0,cpuKernelImpl:pV}),C5={kernelName:ja,backendName:"webgl",kernelFunc:kC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SC(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{dim:o}=s,i=Mt([o],r.shape),a=IC({inputs:{x:r},backend:e,attrs:{reductionIndices:i,keepDims:!1}}),u=Ne(a.shape,i),c=lt({inputs:{x:a},backend:e,attrs:{shape:u}}),l=kC({inputs:{a:r,b:c},backend:e}),h=vC({inputs:{x:l},backend:e}),d=rh({inputs:{x:h},backend:e,attrs:{axis:i,keepDims:!1}}),f=lt({inputs:{x:d},backend:e,attrs:{shape:u}}),m=$C({inputs:{a:h,b:f},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),m}const D5={kernelName:$l,backendName:"webgl",kernelFunc:SC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I5(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{numSamples:o,seed:i,normalized:a}=s,u=a?r:SC({inputs:{logits:r},backend:e,attrs:{dim:r.shape.length-1}}),c=u.shape[0],l=u.shape[1],h=new b5(c,l,o),d=[[i]],f=e.runWebGLProgram(h,[u],"int32",d);return a||e.disposeIntermediateTensorInfo(u),f}const $5={kernelName:u1,backendName:"webgl",kernelFunc:I5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k5=is+`
  return -x;
`,S5=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function E5(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])){const o=e.texData.get(s.dataId),[i,a]=Xz(o.values,s.shape,s.dtype);return e.makeTensorInfo(a,s.dtype,i)}let r;return U().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new hr(s.shape,S5):r=new Rs(s.shape,k5),e.runWebGLProgram(r,[s],s.dtype)}const N5={kernelName:ul,backendName:"webgl",kernelFunc:E5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A5=up;function T5(n){Pn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u}=s,c=e.readSync(r.dataId),l=e.readSync(o.dataId),{selectedIndices:h}=A5(c,l,i,a,u);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}const F5={kernelName:ff,backendName:"webgl",kernelFunc:T5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R5=cp;function _5(n){Pn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:c}=s,l=e.readSync(r.dataId),h=e.readSync(o.dataId),{selectedIndices:d,validOutputs:f}=R5(l,h,i,a,u,c);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}const O5={kernelName:pf,backendName:"webgl",kernelFunc:_5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M5=lp;function B5(n){Pn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,softNmsSigma:c}=s,l=e.readSync(r.dataId),h=e.readSync(o.dataId),d=i,f=a,m=u,p=c,{selectedIndices:x,selectedScores:g}=M5(l,h,d,f,m,p);return[e.makeTensorInfo([x.length],"int32",new Int32Array(x)),e.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const L5={kernelName:mf,backendName:"webgl",kernelFunc:B5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class P5{constructor(t,e,s,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z5=n=>{const{inputs:t,backend:e,attrs:s}=n,{indices:r}=t,{dtype:o,depth:i,onValue:a,offValue:u}=s,c=X(r.shape),l=new P5(c,i,a,u),h=lt({inputs:{x:r},backend:e,attrs:{shape:[c]}}),d=e.runWebGLProgram(l,[h],o);e.disposeIntermediateTensorInfo(h);const f=[...r.shape,i],m=lt({inputs:{x:d},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(d),m},V5={kernelName:hl,backendName:"webgl",kernelFunc:z5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bc(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="complex64"){const r=bu({inputs:{input:s},backend:e}),o=bc({inputs:{x:r},backend:e}),i=oh({inputs:{input:s},backend:e}),a=bc({inputs:{x:i},backend:e}),u=Mr({inputs:{real:o,imag:a},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),u}else return wu({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:e})}const W5={kernelName:El,backendName:"webgl",kernelFunc:bc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EC(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=bu({inputs:{input:s},backend:e}),o=EC({inputs:{x:r},backend:e}),i=oh({inputs:{input:s},backend:e}),a=bc({inputs:{x:i},backend:e}),u=Mr({inputs:{real:o,imag:a},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),u}else return wu({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:e})}const U5={kernelName:ll,backendName:"webgl",kernelFunc:EC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G5(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s;if(t.length===1)return Cd({inputs:{input:t[0]},backend:e,attrs:{dim:r}});const o=t[0].shape,i=t[0].dtype;t.forEach(l=>{Od(o,l.shape,"All tensors passed to stack must have matching shapes"),k(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],u=t.map(l=>{const h=Cd({inputs:{input:l},backend:e,attrs:{dim:r}});return a.push(h),h}),c=fC({inputs:u,backend:e,attrs:{axis:r}});return a.forEach(l=>e.disposeIntermediateTensorInfo(l)),c}const H5={kernelName:dl,backendName:"webgl",kernelFunc:G5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q5{constructor(t,e,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((c,l)=>c[0]+t[l]+c[1]);const r=t.length,o=Qt(r),i=e.map(c=>c[0]).join(","),a=e.map((c,l)=>c[0]+t[l]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j5{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((p,x)=>p[0]+t[x]+p[1]);const r=t.length,o=Qt(r),i=e.map(p=>p[0]).join(","),a=e.map((p,x)=>p[0]+t[x]).join(","),u=cn("rc",r),c=cn("source",r),l=`${u[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${c.slice(-2).join()})`,d=[`${o} rc = outputLoc;`,`${u[r-1]} += 1;
       if(${l}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${u[r-2]} += 1;
       if(${u[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${u[r-1]} += 1;
         if(${l}) {`],f=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let m="";for(let p=0,x=r===1?2:4;p<x;p++)m+=`
        ${d[p]}
        if (${f}) {
          result[${p}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${p}] = getChannel(getX(${c.join()}), ${h});
        }
      `;m+=r===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NC=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:o,constantValue:i}=s;if(X(r.shape)===0){const c=o.map((l,h)=>l[0]+r.shape[h]+l[1]);return wu({backend:e,attrs:{shape:c,value:i,dtype:r.dtype}})}const a=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new j5(r.shape,o,i):new q5(r.shape,o,i),u=[[i]];return e.runWebGLProgram(a,[r],r.dtype,u)},K5={kernelName:fl,backendName:"webgl",kernelFunc:NC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X5=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Y5=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Io+`
  return result;
`,Z5=Ye({opSnippet:X5,packedOpSnippet:Y5}),J5={kernelName:Ra,backendName:"webgl",kernelFunc:Z5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q5(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s,a=r.shape.length,u=[],c=Mt(o,r.shape);let l=c;const h=ge(l,a);let d=r;h!=null&&(d=dn({inputs:{x:r},backend:e,attrs:{perm:h}}),l=$e(l.length,a),u.push(d)),Xe("prod",l,a);let f;if(e.shouldExecuteOnCPU([d])){const m=e.texData.get(d.dataId).values,{outVals:p,outShape:x,outDtype:g}=Zz(d.shape,d.dtype,m,l);f=e.makeTensorInfo(x,g,p)}else{const[m,p]=Ge(d.shape,l),x=X(p),g=lt({inputs:{x:d},backend:e,attrs:{shape:[-1,x]}}),b=Ef(r.dtype),w=$o(g,b,"prod",e);f=lt({inputs:{x:w},backend:e,attrs:{shape:m}}),u.push(g),u.push(w)}if(i){u.push(f);const m=Ne(f.shape,c);f=lt({inputs:{x:f},backend:e,attrs:{shape:m}})}return u.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}const tH={kernelName:ml,backendName:"webgl",kernelFunc:Q5};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eH(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=t,{outputRaggedRank:a}=s,u=r.map(g=>e.readSync(g.dataId)),c=r.map(g=>g.shape),l=e.readSync(o.dataId),h=e.readSync(i.dataId),[d,f,m]=Jz(u,c,l,o.shape,o.dtype,h,i.shape,a),p=d.map(g=>e.makeTensorInfo([g.length],"int32",g)),x=e.makeTensorInfo(m,o.dtype,f);return p.concat([x])}const nH={kernelName:c1,backendName:"webgl",kernelFunc:eH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sH(n){const{inputs:t,backend:e}=n,{starts:s,limits:r,deltas:o}=t,i=e.readSync(s.dataId),a=e.readSync(r.dataId),u=e.readSync(o.dataId),[c,l]=Qz(i,s.shape,s.dtype,a,r.shape,u,o.shape),h=e.makeTensorInfo([c.length],"int32",c),d=e.makeTensorInfo([l.length],s.dtype,l);return[h,d]}const rH={kernelName:l1,backendName:"webgl",kernelFunc:sH};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oH(n){const{inputs:t,backend:e,attrs:s}=n,{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=t,{rowPartitionTypes:u}=s,c=e.readSync(r.dataId),l=e.readSync(o.dataId),h=e.readSync(i.dataId),d=a.map(x=>e.readSync(x.dataId)),f=a.map(x=>x.shape),[m,p]=tV(c,r.shape,l,o.shape,o.dtype,h,i.shape,d,f,u);return e.makeTensorInfo(m,o.dtype,p)}const iH={kernelName:h1,backendName:"webgl",kernelFunc:oH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AC=n=>{const{backend:t,attrs:e}=n,{start:s,stop:r,step:o,dtype:i}=e,a=eV(s,r,o,i);return t.makeTensorInfo([a.length],i,a)},aH={kernelName:gf,backendName:"webgl",kernelFunc:AC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uH="return 1.0 / x;",cH=zt({opSnippet:uH}),lH={kernelName:_a,backendName:"webgl",kernelFunc:cH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hH=is+`
  return (x < 0.0) ? 0.0 : x;
`,dH=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,fH=zt({opSnippet:hH,packedOpSnippet:dH}),pH={kernelName:Oa,backendName:"webgl",kernelFunc:fH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mH=is+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,gH=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,xH=zt({opSnippet:mH,packedOpSnippet:gH}),bH={kernelName:Ma,backendName:"webgl",kernelFunc:xH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wH{constructor(t,e,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,a,u,c]=t;this.outputShape=[i,e,s,c];const l=[r&&e>1?a-1:a,r&&s>1?u-1:u],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let d;o?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/h[0]},
          ${l[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yH{constructor(t,e,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,u,c]=t;this.outputShape=[i,e,s,c];const l=[r&&e>1?a-1:a,r&&s>1?u-1:u],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let d;o?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/h[0]},
          ${l[1]/h[1]},
          ${l[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vH(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:i,size:a}=s,[u,c]=a,l=U().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new yH(r.shape,u,c,o,i):new wH(r.shape,u,c,o,i);return e.runWebGLProgram(l,[r],"float32")}const CH={kernelName:bl,backendName:"webgl",kernelFunc:vH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DH{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,o]=e,[,i,a]=t,u=[s&&i>1?r-1:r,s&&a>1?o-1:o],c=[s&&i>1?i-1:i,s&&a>1?a-1:a],l=u[0]/c[0],h=u[1]/c[1],d=1/l,f=1/h,m=Math.ceil(d)*2+2,p=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${m});
        const int winWidth = int(${p});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IH(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:i}=s,a=new DH(o.shape,r.shape,i);return e.runWebGLProgram(a,[o],o.dtype)}const $H={kernelName:wf,backendName:"webgl",kernelFunc:IH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kH{constructor(t,e,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,a,u,c]=t;this.outputShape=[i,e,s,c];const l=[r&&e>1?a-1:a,r&&s>1?u-1:u],h=[r&&e>1?e-1:e,r&&s>1?s-1:s],d=r?"0.5":"0.0";let f;o?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/h[0]},
          ${l[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SH{constructor(t,e,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,u,c]=t;this.outputShape=[i,e,s,c];const l=[r&&e>1?a-1:a,r&&s>1?u-1:u],h=[r&&e>1?e-1:e,r&&s>1?s-1:s],d=r?"0.5":"0.0";let f;o?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/h[0]},
          ${l[1]/h[1]},
          ${l[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EH(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:i,size:a}=s,[u,c]=a,l=U().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new SH(r.shape,u,c,o,i):new kH(r.shape,u,c,o,i);return e.runWebGLProgram(l,[r],r.dtype)}const NH={kernelName:xl,backendName:"webgl",kernelFunc:EH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AH{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,o]=e,[,i,a]=t,u=[s&&i>1?r-1:r,s&&a>1?o-1:o],c=[s&&i>1?i-1:i,s&&a>1?a-1:a],l=u[0]/c[0],h=u[1]/c[1],d=1/l,f=1/h,m=Math.ceil(d)*2+2,p=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${m});
        const int winWidth = int(${p});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TH(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:i}=s,a=new AH(o.shape,r.shape,i);return e.runWebGLProgram(a,[o],o.dtype)}const FH={kernelName:bf,backendName:"webgl",kernelFunc:TH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RH{constructor(t,e){this.variableNames=["x"];const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=t,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const r=a=>e.indexOf(a)!==-1&&t[a]!==1?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`,o=t.map((a,u)=>r(u)).join(","),i=Qt(s);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _H{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=t;const r=cn("rc",s),o=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,a=Qt(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(r.slice())};
          if(${o}){
            result.g = ${c(r.slice())};
          }
          if(${i}) {
            result.b = ${l(r.slice())};
            if(${o}) {
              result.a = ${h(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(m){return d(m)}function c(m){return m[s-1]="("+m[s-1]+" + 1)",d(m)}function l(m){return m[s-2]="("+m[s-2]+" + 1)",d(m)}function h(m){return m[s-1]="("+m[s-1]+" + 1)",m[s-2]="("+m[s-2]+" + 1)",d(m)}function d(m){const p=t.map((b,w)=>f(w,m)),x=p.join(","),g=p.slice(-2).join(",");return`getChannel(getX(${x}), vec2(${g}))`}function f(m,p){return e.indexOf(m)!==-1&&t[m]!==1?`${t[m]} - ${p[m]} - 1`:`${p[m]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dims:o}=s,i=r.shape.length,a=Mt(o,r.shape);if(i===0)return _n({inputs:{x:r},backend:e});const u=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _H(r.shape,a):new RH(r.shape,a);return e.runWebGLProgram(u,[r],r.dtype)}const MH={kernelName:wl,backendName:"webgl",kernelFunc:OH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BH{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=t[1],r=t[2];this.outputShape=t;let o="";typeof e=="number"?o=`float outputValue = ${e.toFixed(2)};`:o=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LH={kernelName:kf,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=t,a=e,u=new BH(s.shape,o),[c,l]=Dp(i,s.shape[1],s.shape[2]),h=[[c,l,Math.sin(r),Math.cos(r)]];return a.runWebGLProgram(u,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PH=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,zH=zt({opSnippet:PH}),VH={kernelName:Ba,backendName:"webgl",kernelFunc:zH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WH="return inversesqrt(x);",UH=zt({opSnippet:WH,cpuKernelImpl:nV}),GH={kernelName:La,backendName:"webgl",kernelFunc:UH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class km{constructor(t,e,s,r,o,i,a=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const c=Qt(o.length),l=Qt(i.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let f="";r===1?f="i":r===2&&(f="i, coords[1]");const m=`getUpdates(${f})`;let p="";u&&(p="coords[0], coords[1]");const x=`getDefaultValue(${p})`,g=e>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${g};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${m};
              found = true;
            }
          }
          setOutput(mix(${x}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HH{constructor(t,e,s,r,o,i,a=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const c=Qt(o.length),l=Qt(i.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let f="";r===1?f="i":r===2&&(f="i, coords[1]");const m=`getUpdates(${f})`;let p="";u&&(p="coords[0], coords[1]");const x=`getDefaultValue(${p})`,g=e>1?"strides[j]":"strides",b=e>1?"strides[j + 1]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${l} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${t}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${e}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${g};
              if (j + 1 < ${e}) {
                flattenedIndex += index.yw * ${b};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${m};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${x}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qH(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r,updates:o}=t,{shape:i}=s,{sliceRank:a,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=wo(o,r,i),d=[h/c,c];if(h===0)return e.makeTensorInfo(i,r.dtype);const f=lt({inputs:{x:r},backend:e,attrs:{shape:[u,a]}}),m=lt({inputs:{x:o},backend:e,attrs:{shape:[u,c]}}),p=e.makeTensorInfo([],"float32",new Float32Array([0]));let x;U().getBool("WEBGL_PACK")?x=new HH(u,a,f.shape.length,m.shape.length,l,d):x=new km(u,a,f.shape.length,m.shape.length,l,d);const g=e.runWebGLProgram(x,[m,f,p],m.dtype),b=lt({inputs:{x:g},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(p),b}const jH={kernelName:d1,backendName:"webgl",kernelFunc:qH};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KH{constructor(t,e,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,s];const o="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,a=U().getNumber("WEBGL_VERSION")===2?o:i,u=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XH(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:r,values:o}=t,{side:i}=s,a=new KH(r.shape[0],r.shape[1],o.shape[1],i),u=[[r.shape[1]]];return e.runWebGLProgram(a,[r,o],"int32",u)}const YH={kernelName:p1,backendName:"webgl",kernelFunc:XH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZH{constructor(t,e,s){this.variableNames=["c","a","b"],this.outputShape=e;let r,o;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)o="resRC",r="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],c=[];for(let l=0;l<e.length;l++)c.push(`${a[l]}`),l<t&&u.push(`${a[l]}`);r=u.join(),o=c.join()}const i=Qt(s);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JH(n){const{inputs:t,backend:e}=n,{condition:s,t:r,e:o}=t,i=new ZH(s.shape.length,r.shape,r.shape.length);return e.runWebGLProgram(i,[s,r,o],Fn(r.dtype,o.dtype))}const QH={kernelName:yl,backendName:"webgl",kernelFunc:JH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t9=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Vl};
  float scale = ${Wl};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,e9=zt({opSnippet:t9}),n9={kernelName:Pa,backendName:"webgl",kernelFunc:e9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s9=Ci+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,r9=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,o9=zt({opSnippet:s9,packedOpSnippet:r9,cpuKernelImpl:rV}),i9={kernelName:Ua,backendName:"webgl",kernelFunc:o9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a9=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,u9=zt({opSnippet:a9}),c9={kernelName:Wa,backendName:"webgl",kernelFunc:u9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l9=Ci+`
  return sin(x);
`,h9=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Io}
  return result;
`,d9=zt({opSnippet:l9,packedOpSnippet:h9}),f9={kernelName:za,backendName:"webgl",kernelFunc:d9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p9=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,m9=zt({opSnippet:p9}),g9={kernelName:Va,backendName:"webgl",kernelFunc:m9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x9=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,b9=zt({opSnippet:x9}),w9={kernelName:Ga,backendName:"webgl",kernelFunc:b9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y9=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,paddings:i}=s;k(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((g,b)=>g*b),u=[[0,0]];u.push(...i);for(let g=1+o.length;g<r.shape.length;++g)u.push([0,0]);const c=[],l=NC({inputs:{x:r},backend:e,attrs:{paddings:u,constantValue:0}}),h=su(l.shape,o,a,!1),d=ru(h.length,o.length,!1),f=ou(l.shape,o,a,!1),m=lt({inputs:{x:l},backend:e,attrs:{shape:h}}),p=dn({inputs:{x:m},backend:e,attrs:{perm:d}}),x=lt({inputs:{x:p},backend:e,attrs:{shape:f}});return c.push(l),c.push(m),c.push(p),c.forEach(g=>e.disposeIntermediateTensorInfo(g)),x},v9={kernelName:Dl,backendName:"webgl",kernelFunc:y9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C9(n){const{inputs:t,backend:e}=n,{indices:s,values:r,denseShape:o,defaultValue:i}=t;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=e.readSync(s.dataId),u=e.readSync(r.dataId),c=e.readSync(o.dataId),l=e.readSync(i.dataId)[0],[h,d,f,m,p]=iV(a,s.shape,s.dtype,u,r.dtype,c,l);return[e.makeTensorInfo(d,s.dtype,h),e.makeTensorInfo([d[0]],r.dtype,f),e.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(x=>Number(x)))),e.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}const D9={kernelName:m1,backendName:"webgl",kernelFunc:C9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I9(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:r,newShape:o}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(e.readSync(r.dataId)),a=e.readSync(s.dataId),u=Array.from(e.readSync(o.dataId)),[c,l,h]=aV(a,s.shape,s.dtype,i,u);return[e.makeTensorInfo(l,s.dtype,c),e.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}const $9={kernelName:g1,backendName:"webgl",kernelFunc:I9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k9(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:o}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const i=e.readSync(s.dataId),a=e.readSync(r.dataId),u=e.readSync(o.dataId),[c,l]=tC(i,s.shape,s.dtype,a,u,!0);return e.makeTensorInfo(l,s.dtype,c)}const S9={kernelName:x1,backendName:"webgl",kernelFunc:k9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E9(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:o}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const i=e.readSync(s.dataId),a=e.readSync(r.dataId),u=e.readSync(o.dataId),[c,l]=tC(i,s.shape,s.dtype,a,u);return e.makeTensorInfo(l,s.dtype,c)}const N9={kernelName:b1,backendName:"webgl",kernelFunc:E9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A9(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=t,{outputShape:a}=s,{sliceRank:u,numUpdates:c,sliceSize:l,strides:h,outputSize:d}=wo(o,r,a),f=!1;if(o.dtype==="string"){const g=e.bufferSync(r),b=e.bufferSync(o),w=br(e.readSync(i.dataId)[0]),y=sV(g,b,a,d,l,c,u,h,w,f);return e.makeTensorInfo(a,y.dtype,y.values)}const m=new km(c,u,r.shape.length,o.shape.length,h,[d,1],f),p=e.runWebGLProgram(m,[o,r,i],o.dtype),x=lt({inputs:{x:p},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(p),x}const T9={kernelName:w1,backendName:"webgl",kernelFunc:A9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F9(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{numOrSizeSplits:o,axis:i}=s,a=Mt(i,r.shape)[0],u=Lp(r,o,a),c=r.shape.length,l=new Array(c).fill(0),h=r.shape.slice();return u.map(d=>{const f=[...h];f[a]=d;const m=Di({inputs:{x:r},backend:e,attrs:{begin:l,size:f}});return l[a]+=d,m})}const R9={kernelName:Il,backendName:"webgl",kernelFunc:F9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v0="return sqrt(x);",_9=zt({opSnippet:v0,packedOpSnippet:v0,cpuKernelImpl:uV}),O9={kernelName:Ha,backendName:"webgl",kernelFunc:_9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M9="return x * x;",B9=zt({opSnippet:M9}),L9={kernelName:yf,backendName:"webgl",kernelFunc:B9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C0="return (a - b) * (a - b);",P9=Ye({opSnippet:C0,packedOpSnippet:C0}),z9={kernelName:qa,backendName:"webgl",kernelFunc:P9};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V9(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");const o=e.readSync(r.dataId),i=nr(o),a=cV(i,"string",s);return e.makeTensorInfo(r.shape,"string",a)}const W9={kernelName:vf,backendName:"webgl",kernelFunc:V9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U9({inputs:n,attrs:t,backend:e}){const{x:s}=n,r=is+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,o=new Rs(s.shape,r);return e.runWebGLProgram(o,[s],s.dtype)}const G9={kernelName:Za,backendName:"webgl",kernelFunc:U9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H9{constructor(t,e,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,o=Qt(s.length),i=Qt(s.length);let a="";if(r===1)a="coords * strides + begin";else{let u=0;a=s.map((c,l)=>(u++,s.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${u-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${t});
      ${o} strides = ${o}(${e});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q9(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,end:i,strides:a,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:f,finalShape:m,isIdentity:p,sliceDim0:x,isSimpleSlice:g,begin:b,end:w,strides:y}=wp(r.shape,o,i,a,u,c,l,h,d);let v;if(p)v=lt({inputs:{x:r},backend:e,attrs:{shape:m}});else if(x||g){k(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const D=gp(b,w,y),I=Di({inputs:{x:r},backend:e,attrs:{begin:b,size:D}});v=lt({inputs:{x:I},backend:e,attrs:{shape:m}}),e.disposeIntermediateTensorInfo(I)}else if(e.shouldExecuteOnCPU([r])){const I=e.readSync(r.dataId),$=Ot(r.shape,r.dtype,I),S=lV(f,$,y,b);v=e.makeTensorInfo(m,r.dtype,S.values)}else{const I=new H9(b,y,f);v=e.runWebGLProgram(I,[r],r.dtype)}const C=lt({inputs:{x:v},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(v),C}const j9={kernelName:Cf,backendName:"webgl",kernelFunc:q9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K9(n){const{inputs:t,backend:e,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:u,preserveShortSequences:c}=s,{data:l,dataSplits:h}=t,d=e.readSync(l.dataId),f=e.readSync(h.dataId),[m,p]=hV(d,f,r,o,i,a,u,c);return[e.makeTensorInfo([m.length],"string",m),e.makeTensorInfo(h.shape,"int32",p)]}const X9={kernelName:y1,backendName:"webgl",kernelFunc:K9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y9(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:i}=t;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=e.readSync(o.dataId),u=e.readSync(i.dataId)[0],[c,l,h]=dV(a,u,r),d=l.length;return[e.makeTensorInfo([d,2],"int32",c),e.makeTensorInfo([d],"string",l),e.makeTensorInfo([2],"int32",new Int32Array(h))]}const Z9={kernelName:v1,backendName:"webgl",kernelFunc:Y9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J9(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:r}=s,{input:o}=t;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=e.readSync(o.dataId),a=fV(i,r);return e.makeTensorInfo(o.shape,"int32",a)}const Q9={kernelName:C1,backendName:"webgl",kernelFunc:J9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t7="return tan(x);",e7=zt({opSnippet:t7}),n7={kernelName:Ka,backendName:"webgl",kernelFunc:e7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s7=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,r7=zt({opSnippet:s7}),o7={kernelName:Xa,backendName:"webgl",kernelFunc:r7};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i7(n){const{inputs:t,backend:e,attrs:s}=n,{tensor:r,indices:o,updates:i}=t,{sliceRank:a,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=wo(i,o,r.shape),d=[h/c,c];if(h===0)return e.makeTensorInfo(r.shape,o.dtype);const f=lt({inputs:{x:o},backend:e,attrs:{shape:[u,a]}}),m=lt({inputs:{x:i},backend:e,attrs:{shape:[u,c]}}),p=lt({inputs:{x:r},backend:e,attrs:{shape:d}}),x=new km(u,a,f.shape.length,m.shape.length,l,d,!1,!0),g=e.runWebGLProgram(x,[m,f,p],p.dtype),b=lt({inputs:{x:g},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(g),b}const a7={kernelName:f1,backendName:"webgl",kernelFunc:i7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class u7{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let i=0;i<s.length;i++)s[i]=t[i]*e[i];this.outputShape=s,this.rank=s.length;const r=Qt(this.rank),o=c7(t);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function c7(n){const t=n.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${n[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${e[r]}, ${n[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TC(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reps:o}=s;if(r.dtype==="string"||r.shape.length>5){const u=e.readSync(r.dataId),c=r.dtype==="string"?u.map(d=>br(d)):u,l=Ot(r.shape,r.dtype,c),h=mV(l,o);return e.makeTensorInfo(h.shape,h.dtype,h.values)}const i=new u7(r.shape,o);return e.runWebGLProgram(i,[r],r.dtype)}const l7={kernelName:Ya,backendName:"webgl",kernelFunc:TC};class h7{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class d7{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pr(n,t){t!==null&&n.disposeIntermediateTensorInfo(t)}function D0(n){let t=1;for(;t<n;)t*=2;return t}function f7(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{k:o,sorted:i}=s,a=U().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=U().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,l=c[c.length-1];if(e.shouldExecuteOnCPU([r])||l<a||o>u){const S=e.readSync(r.dataId),[E,N]=gV(S,c,r.dtype,o,i);return[e.makeTensorInfo(E.shape,E.dtype,E.values),e.makeTensorInfo(N.shape,N.dtype,N.values)]}if(o===0)return c[c.length-1]=0,[e.makeTensorInfo(c,r.dtype,[]),e.makeTensorInfo(c,"int32",[])];if(l===1)return[r,wu({attrs:{shape:c,dtype:"int32",value:0},backend:e})];const h=e.texData.get(r.dataId),d=h!==null&&h.isPacked,f=d?e.unpackTensor(r):r,p=X(c)/l,x=lt({inputs:{x:f},attrs:{shape:[p,l]},backend:e});d&&Pr(e,f);const g=D0(o),b=D0(l);let w=null;const y=()=>w===null?[x,x]:[x,w],v=(S,E,N)=>{const R=y(),L=new h7(N),_=[[l],[w===null?1:0],[Number.NEGATIVE_INFINITY],[S],[E]],j=w;w=e.runWebGLProgram(L,R,"int32",_),Pr(e,j)};for(let S=1;S<g;S*=2){const E=S*2;for(let N=S;N>=1;N/=2)v(E,N,[p,b])}for(let S=b;S>g;S/=2){const E=y(),N=new d7([p,S/2]),L=[[l],[w===null?1:0],[g]],O=w;w=e.runWebGLProgram(N,E,"int32",L),Pr(e,O);const _=g/2,j=_*2;for(let G=_;G>=1;G/=2)v(j,G,w.shape)}let C=w;w=Di({inputs:{x:w},backend:e,attrs:{begin:0,size:[p,o]}}),Pr(e,C);let D=DC({inputs:{x,indices:w},backend:e,attrs:{axis:1,batchDims:1}});Pr(e,x);const I=c.slice(0,-1);I.push(o),C=w,w=lt({inputs:{x:w},attrs:{shape:I},backend:e}),Pr(e,C);const $=D;return D=lt({inputs:{x:D},attrs:{shape:I},backend:e}),Pr(e,$),[D,w]}const p7={kernelName:Df,backendName:"webgl",kernelFunc:f7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class m7{constructor(t,e,s,r,o,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a=s==="nearest"?1:2;let u;switch(r){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g7(n){const{inputs:t,backend:e,attrs:s}=n,{image:r,transforms:o}=t,{interpolation:i,fillMode:a,fillValue:u,outputShape:c}=s,[l,h,d,f]=r.shape,[m,p]=c??[h,d],x=[l,m,p,f],g=new m7(h,d,i,a,u,x);return e.runWebGLProgram(g,[r,o],"float32")}const x7={kernelName:If,backendName:"webgl",kernelFunc:g7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b7(n){const{inputs:t,attrs:e,backend:s}=n,{axis:r}=e,{x:o}=t;gu(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(o.dataId),{outputValues:a,outputShape:u,indices:c}=xV(i,r,o.shape,o.dtype);return[s.makeTensorInfo(u,o.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}const w7={kernelName:$f,backendName:"webgl",kernelFunc:b7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y7(n){const{inputs:t,backend:e,attrs:s}=n,{value:r}=t;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r,a=i.shape.length,u=r.shape[o],c=new Array(a-1);let l=0;for(let p=0;p<a;p++)p!==o&&(c[l++]=i.shape[p]);const h=[],d=new Array(a).fill(0),f=i.shape.slice();f[o]=1;const m=new Array(u);for(let p=0;p<m.length;p++){d[o]=p;const x=Di({inputs:{x:i},backend:e,attrs:{begin:d,size:f}}),g=lt({inputs:{x},backend:e,attrs:{shape:c}});m[p]=g,h.push(x)}return h.forEach(p=>e.disposeIntermediateTensorInfo(p)),m}const v7={kernelName:kl,backendName:"webgl",kernelFunc:y7};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C7{constructor(t,e){this.variableNames=["x","segmentIds"];const s=t.windowSize,r=t.batchSize,o=t.inSize,i=t.numSegments,a=i*Math.ceil(o/s);this.outputShape=[r,a];const u="0.0",c="sumValue",l=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let m="";o%s>0&&(m=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${m}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${l};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D7(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,segmentIds:o}=t,{numSegments:i}=s,a=r.shape.length,u=[];let c=0;const l=ge([c],a);let h=r;l!=null&&(h=dn({inputs:{x:r},backend:e,attrs:{perm:l}}),u.push(h),c=$e(1,a)[0]);const d=mb(h.shape,c,i),f=X([h.shape[c]]),m=lt({inputs:{x:h},backend:e,attrs:{shape:[-1,f]}});u.push(m);const p=Ef(r.dtype),x=(y,v,C,D,I)=>{const $=y.shape[0],S=y.shape[1],E=pb(S,I),N={windowSize:E,inSize:S,batchSize:$,numSegments:I},R=new C7(N,v),L=e.compileAndRun(R,[y,C],D);if(u.push(L),L.shape[1]===I)return L;const O=AC({backend:e,attrs:{start:0,stop:I,step:1,dtype:"float32"}}),_=TC({inputs:{x:O},backend:e,attrs:{reps:[S/E]}});return u.push(O),u.push(_),x(L,v,_,D,I)},g=x(m,"unsortedSegmentSum",o,p,i),b=lt({inputs:{x:g},backend:e,attrs:{shape:d}});let w=b;if(l!=null){u.push(b);const y=Ar(l);w=dn({inputs:{x:w},backend:e,attrs:{perm:y}})}return u.forEach(y=>e.disposeIntermediateTensorInfo(y)),w}const I7={kernelName:Sl,backendName:"webgl",kernelFunc:D7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $7=[uW,lW,fW,gW,bW,vW,DW,$W,NW,TW,_W,BW,zW,GW,jW,XW,ZW,eU,sU,oU,cU,gU,bU,CU,IU,AU,FU,MU,HV,PU,GU,KU,t8,s8,o8,a8,c8,f8,g8,w8,v8,D8,$8,E8,A8,_8,M8,P8,W8,G8,K8,J8,n6,o6,u6,c6,h6,f6,m6,x6,w6,D6,k6,N6,T6,_6,B6,V6,H6,GV,j6,WU,Y6,Q6,nG,jV,iG,lG,dG,gG,wG,DG,kG,AG,_G,BG,PG,UG,HG,jG,ZG,QG,e5,s5,o5,c5,f5,x5,$5,YV,N5,F5,O5,L5,kU,V5,U5,H5,K5,J5,XV,tH,nH,rH,iH,aH,SU,v5,lH,pH,bH,JV,CH,$H,NH,FH,MH,LH,VH,GH,jH,YH,QH,n9,i9,c9,f9,g9,pU,D5,w9,v9,D9,$9,S9,N9,T9,R9,O9,L9,z9,W9,G9,j9,X9,Z9,Q9,C5,oW,n7,o7,a7,l7,p7,x7,iW,w7,v7,I7,W5];for(const n of $7)I1(n);function wc(){return wc=Object.assign?Object.assign.bind():function(n){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&(n[s]=e[s])}return n},wc.apply(this,arguments)}var FC={epsilon:1e-12,matrix:"Matrix",number:"number",precision:64,predictable:!1,randomSeed:null};function we(n){return typeof n=="number"}function Vn(n){return!n||typeof n!="object"||typeof n.constructor!="function"?!1:n.isBigNumber===!0&&typeof n.constructor.prototype=="object"&&n.constructor.prototype.isBigNumber===!0||typeof n.constructor.isDecimal=="function"&&n.constructor.isDecimal(n)===!0}function RC(n){return n&&typeof n=="object"&&Object.getPrototypeOf(n).isComplex===!0||!1}function _C(n){return n&&typeof n=="object"&&Object.getPrototypeOf(n).isFraction===!0||!1}function OC(n){return n&&n.constructor.prototype.isUnit===!0||!1}function Fs(n){return typeof n=="string"}var xe=Array.isArray;function _s(n){return n&&n.constructor.prototype.isMatrix===!0||!1}function yc(n){return Array.isArray(n)||_s(n)}function k7(n){return n&&n.isDenseMatrix&&n.constructor.prototype.isMatrix===!0||!1}function S7(n){return n&&n.isSparseMatrix&&n.constructor.prototype.isMatrix===!0||!1}function E7(n){return n&&n.constructor.prototype.isRange===!0||!1}function Sm(n){return n&&n.constructor.prototype.isIndex===!0||!1}function N7(n){return typeof n=="boolean"}function A7(n){return n&&n.constructor.prototype.isResultSet===!0||!1}function T7(n){return n&&n.constructor.prototype.isHelp===!0||!1}function F7(n){return typeof n=="function"}function R7(n){return n instanceof Date}function _7(n){return n instanceof RegExp}function MC(n){return!!(n&&typeof n=="object"&&n.constructor===Object&&!RC(n)&&!_C(n))}function O7(n){return n===null}function M7(n){return n===void 0}function B7(n){return n&&n.isAccessorNode===!0&&n.constructor.prototype.isNode===!0||!1}function L7(n){return n&&n.isArrayNode===!0&&n.constructor.prototype.isNode===!0||!1}function P7(n){return n&&n.isAssignmentNode===!0&&n.constructor.prototype.isNode===!0||!1}function z7(n){return n&&n.isBlockNode===!0&&n.constructor.prototype.isNode===!0||!1}function V7(n){return n&&n.isConditionalNode===!0&&n.constructor.prototype.isNode===!0||!1}function W7(n){return n&&n.isConstantNode===!0&&n.constructor.prototype.isNode===!0||!1}function U7(n){return n&&n.isFunctionAssignmentNode===!0&&n.constructor.prototype.isNode===!0||!1}function G7(n){return n&&n.isFunctionNode===!0&&n.constructor.prototype.isNode===!0||!1}function H7(n){return n&&n.isIndexNode===!0&&n.constructor.prototype.isNode===!0||!1}function q7(n){return n&&n.isNode===!0&&n.constructor.prototype.isNode===!0||!1}function j7(n){return n&&n.isObjectNode===!0&&n.constructor.prototype.isNode===!0||!1}function K7(n){return n&&n.isOperatorNode===!0&&n.constructor.prototype.isNode===!0||!1}function X7(n){return n&&n.isParenthesisNode===!0&&n.constructor.prototype.isNode===!0||!1}function Y7(n){return n&&n.isRangeNode===!0&&n.constructor.prototype.isNode===!0||!1}function Z7(n){return n&&n.isRelationalNode===!0&&n.constructor.prototype.isNode===!0||!1}function J7(n){return n&&n.isSymbolNode===!0&&n.constructor.prototype.isNode===!0||!1}function Q7(n){return n&&n.constructor.prototype.isChain===!0||!1}function Vi(n){var t=typeof n;return t==="object"?n===null?"null":Vn(n)?"BigNumber":n.constructor&&n.constructor.name?n.constructor.name:"Object":t}function Je(n){var t=typeof n;if(t==="number"||t==="string"||t==="boolean"||n===null||n===void 0)return n;if(typeof n.clone=="function")return n.clone();if(Array.isArray(n))return n.map(function(e){return Je(e)});if(n instanceof Date)return new Date(n.valueOf());if(Vn(n))return n;if(MC(n))return tq(n,Je);throw new TypeError("Cannot clone: unknown type of value (value: ".concat(n,")"))}function tq(n,t){var e={};for(var s in n)vc(n,s)&&(e[s]=t(n[s]));return e}function oi(n,t){var e,s,r;if(Array.isArray(n)){if(!Array.isArray(t)||n.length!==t.length)return!1;for(s=0,r=n.length;s<r;s++)if(!oi(n[s],t[s]))return!1;return!0}else{if(typeof n=="function")return n===t;if(n instanceof Object){if(Array.isArray(t)||!(t instanceof Object))return!1;for(e in n)if(!(e in t)||!oi(n[e],t[e]))return!1;for(e in t)if(!(e in n))return!1;return!0}else return n===t}}function vc(n,t){return n&&Object.hasOwnProperty.call(n,t)}function eq(n,t){for(var e={},s=0;s<t.length;s++){var r=t[s],o=n[r];o!==void 0&&(e[r]=o)}return e}var nq=["Matrix","Array"],sq=["number","BigNumber","Fraction"],Ii=function(t){if(t)throw new Error(`The global config is readonly. 
Please create a mathjs instance if you want to change the default configuration. 
Example:

  import { create, all } from 'mathjs';
  const mathjs = create(all);
  mathjs.config({ number: 'BigNumber' });
`);return Object.freeze(FC)};wc(Ii,FC,{MATRIX_OPTIONS:nq,NUMBER_OPTIONS:sq});function I0(){return!0}function Kn(){return!1}function Ao(){}const $0="Argument is not a typed-function.";function BC(){function n(A){return typeof A=="object"&&A!==null&&A.constructor===Object}const t=[{name:"number",test:function(A){return typeof A=="number"}},{name:"string",test:function(A){return typeof A=="string"}},{name:"boolean",test:function(A){return typeof A=="boolean"}},{name:"Function",test:function(A){return typeof A=="function"}},{name:"Array",test:Array.isArray},{name:"Date",test:function(A){return A instanceof Date}},{name:"RegExp",test:function(A){return A instanceof RegExp}},{name:"Object",test:n},{name:"null",test:function(A){return A===null}},{name:"undefined",test:function(A){return A===void 0}}],e={name:"any",test:I0,isAny:!0};let s,r,o=0,i={createCount:0};function a(A){const P=s.get(A);if(P)return P;let H='Unknown type "'+A+'"';const Y=A.toLowerCase();let Q;for(Q of r)if(Q.toLowerCase()===Y){H+='. Did you mean "'+Q+'" ?';break}throw new TypeError(H)}function u(A){let P=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"any";const H=P?a(P).index:r.length,Y=[];for(let Z=0;Z<A.length;++Z){if(!A[Z]||typeof A[Z].name!="string"||typeof A[Z].test!="function")throw new TypeError("Object with properties {name: string, test: function} expected");const dt=A[Z].name;if(s.has(dt))throw new TypeError('Duplicate type name "'+dt+'"');Y.push(dt),s.set(dt,{name:dt,test:A[Z].test,isAny:A[Z].isAny,index:H+Z,conversionsTo:[]})}const Q=r.slice(H);r=r.slice(0,H).concat(Y).concat(Q);for(let Z=H+Y.length;Z<r.length;++Z)s.get(r[Z]).index=Z}function c(){s=new Map,r=[],o=0,u([e],!1)}c(),u(t);function l(){let A;for(A of r)s.get(A).conversionsTo=[];o=0}function h(A){const P=r.filter(H=>{const Y=s.get(H);return!Y.isAny&&Y.test(A)});return P.length?P:["any"]}function d(A){return A&&typeof A=="function"&&"_typedFunctionData"in A}function f(A,P,H){if(!d(A))throw new TypeError($0);const Y=H&&H.exact,Q=Array.isArray(P)?P.join(","):P,Z=y(Q),dt=x(Z);if(!Y||dt in A.signatures){const Wt=A._typedFunctionData.signatureMap.get(dt);if(Wt)return Wt}const it=Z.length;let ft;if(Y){ft=[];let Wt;for(Wt in A.signatures)ft.push(A._typedFunctionData.signatureMap.get(Wt))}else ft=A._typedFunctionData.signatures;for(let Wt=0;Wt<it;++Wt){const ee=Z[Wt],ye=[];let In;for(In of ft){const mn=I(In.params,Wt);if(!(!mn||ee.restParam&&!mn.restParam)){if(!mn.hasAny){const us=w(mn);if(ee.types.some(cs=>!us.has(cs.name)))continue}ye.push(In)}}if(ft=ye,ft.length===0)break}let ot;for(ot of ft)if(ot.params.length<=it)return ot;throw new TypeError("Signature not found (signature: "+(A.name||"unnamed")+"("+x(Z,", ")+"))")}function m(A,P,H){return f(A,P,H).implementation}function p(A,P){const H=a(P);if(H.test(A))return A;const Y=H.conversionsTo;if(Y.length===0)throw new Error("There are no conversions to "+P+" defined.");for(let Q=0;Q<Y.length;Q++)if(a(Y[Q].from).test(A))return Y[Q].convert(A);throw new Error("Cannot convert "+A+" to "+P)}function x(A){let P=arguments.length>1&&arguments[1]!==void 0?arguments[1]:",";return A.map(H=>H.name).join(P)}function g(A){const P=A.indexOf("...")===0,Y=(P?A.length>3?A.slice(3):"any":A).split("|").map(it=>a(it.trim()));let Q=!1,Z=P?"...":"";return{types:Y.map(function(it){return Q=it.isAny||Q,Z+=it.name+"|",{name:it.name,typeIndex:it.index,test:it.test,isAny:it.isAny,conversion:null,conversionIndex:-1}}),name:Z.slice(0,-1),hasAny:Q,hasConversion:!1,restParam:P}}function b(A){const P=A.types.map(dt=>dt.name),H=j(P);let Y=A.hasAny,Q=A.name;const Z=H.map(function(dt){const it=a(dt.from);return Y=it.isAny||Y,Q+="|"+dt.from,{name:dt.from,typeIndex:it.index,test:it.test,isAny:it.isAny,conversion:dt,conversionIndex:dt.index}});return{types:A.types.concat(Z),name:Q,hasAny:Y,hasConversion:Z.length>0,restParam:A.restParam}}function w(A){return A.typeSet||(A.typeSet=new Set,A.types.forEach(P=>A.typeSet.add(P.name))),A.typeSet}function y(A){const P=[];if(typeof A!="string")throw new TypeError("Signatures must be strings");const H=A.trim();if(H==="")return P;const Y=H.split(",");for(let Q=0;Q<Y.length;++Q){const Z=g(Y[Q].trim());if(Z.restParam&&Q!==Y.length-1)throw new SyntaxError('Unexpected rest parameter "'+Y[Q]+'": only allowed for the last parameter');if(Z.types.length===0)return null;P.push(Z)}return P}function v(A){const P=yt(A);return P?P.restParam:!1}function C(A){if(!A||A.types.length===0)return I0;if(A.types.length===1)return a(A.types[0].name).test;if(A.types.length===2){const P=a(A.types[0].name).test,H=a(A.types[1].name).test;return function(Q){return P(Q)||H(Q)}}else{const P=A.types.map(function(H){return a(H.name).test});return function(Y){for(let Q=0;Q<P.length;Q++)if(P[Q](Y))return!0;return!1}}}function D(A){let P,H,Y;if(v(A)){P=It(A).map(C);const Q=P.length,Z=C(yt(A)),dt=function(it){for(let ft=Q;ft<it.length;ft++)if(!Z(it[ft]))return!1;return!0};return function(ft){for(let ot=0;ot<P.length;ot++)if(!P[ot](ft[ot]))return!1;return dt(ft)&&ft.length>=Q+1}}else return A.length===0?function(Z){return Z.length===0}:A.length===1?(H=C(A[0]),function(Z){return H(Z[0])&&Z.length===1}):A.length===2?(H=C(A[0]),Y=C(A[1]),function(Z){return H(Z[0])&&Y(Z[1])&&Z.length===2}):(P=A.map(C),function(Z){for(let dt=0;dt<P.length;dt++)if(!P[dt](Z[dt]))return!1;return Z.length===P.length})}function I(A,P){return P<A.length?A[P]:v(A)?yt(A):null}function $(A,P){const H=I(A,P);return H?w(H):new Set}function S(A){return A.conversion===null||A.conversion===void 0}function E(A,P){const H=new Set;return A.forEach(Y=>{const Q=$(Y.params,P);let Z;for(Z of Q)H.add(Z)}),H.has("any")?["any"]:Array.from(H)}function N(A,P,H){let Y,Q;const Z=A||"unnamed";let dt=H,it;for(it=0;it<P.length;it++){const ee=[];if(dt.forEach(ye=>{const In=I(ye.params,it),mn=C(In);(it<ye.params.length||v(ye.params))&&mn(P[it])&&ee.push(ye)}),ee.length===0){if(Q=E(dt,it),Q.length>0){const ye=h(P[it]);return Y=new TypeError("Unexpected type of argument in function "+Z+" (expected: "+Q.join(" or ")+", actual: "+ye.join(" | ")+", index: "+it+")"),Y.data={category:"wrongType",fn:Z,index:it,actual:ye,expected:Q},Y}}else dt=ee}const ft=dt.map(function(ee){return v(ee.params)?1/0:ee.params.length});if(P.length<Math.min.apply(null,ft))return Q=E(dt,it),Y=new TypeError("Too few arguments in function "+Z+" (expected: "+Q.join(" or ")+", index: "+P.length+")"),Y.data={category:"tooFewArgs",fn:Z,index:P.length,expected:Q},Y;const ot=Math.max.apply(null,ft);if(P.length>ot)return Y=new TypeError("Too many arguments in function "+Z+" (expected: "+ot+", actual: "+P.length+")"),Y.data={category:"tooManyArgs",fn:Z,index:P.length,expectedLength:ot},Y;const Wt=[];for(let ee=0;ee<P.length;++ee)Wt.push(h(P[ee]).join("|"));return Y=new TypeError('Arguments of type "'+Wt.join(", ")+'" do not match any of the defined signatures of function '+Z+"."),Y.data={category:"mismatch",actual:Wt},Y}function R(A){let P=r.length+1;for(let H=0;H<A.types.length;H++)S(A.types[H])&&(P=Math.min(P,A.types[H].typeIndex));return P}function L(A){let P=o+1;for(let H=0;H<A.types.length;H++)S(A.types[H])||(P=Math.min(P,A.types[H].conversionIndex));return P}function O(A,P){if(A.hasAny){if(!P.hasAny)return 1}else if(P.hasAny)return-1;if(A.restParam){if(!P.restParam)return 1}else if(P.restParam)return-1;if(A.hasConversion){if(!P.hasConversion)return 1}else if(P.hasConversion)return-1;const H=R(A)-R(P);if(H<0)return-1;if(H>0)return 1;const Y=L(A)-L(P);return Y<0?-1:Y>0?1:0}function _(A,P){const H=A.params,Y=P.params,Q=yt(H),Z=yt(Y),dt=v(H),it=v(Y);if(dt&&Q.hasAny){if(!it||!Z.hasAny)return 1}else if(it&&Z.hasAny)return-1;let ft=0,ot=0,Wt;for(Wt of H)Wt.hasAny&&++ft,Wt.hasConversion&&++ot;let ee=0,ye=0;for(Wt of Y)Wt.hasAny&&++ee,Wt.hasConversion&&++ye;if(ft!==ee)return ft-ee;if(dt&&Q.hasConversion){if(!it||!Z.hasConversion)return 1}else if(it&&Z.hasConversion)return-1;if(ot!==ye)return ot-ye;if(dt){if(!it)return 1}else if(it)return-1;const In=(H.length-Y.length)*(dt?-1:1);if(In!==0)return In;const mn=[];let us=0;for(let So=0;So<H.length;++So){const yu=O(H[So],Y[So]);mn.push(yu),us+=yu}if(us!==0)return us;let cs;for(cs of mn)if(cs!==0)return cs;return 0}function j(A){if(A.length===0)return[];const P=A.map(a);A.length>1&&P.sort((Q,Z)=>Q.index-Z.index);let H=P[0].conversionsTo;if(A.length===1)return H;H=H.concat([]);const Y=new Set(A);for(let Q=1;Q<P.length;++Q){let Z;for(Z of P[Q].conversionsTo)Y.has(Z.from)||(H.push(Z),Y.add(Z.from))}return H}function G(A,P){let H=P;if(A.some(Q=>Q.hasConversion)){const Q=v(A),Z=A.map(q);H=function(){const it=[],ft=Q?arguments.length-1:arguments.length;for(let ot=0;ot<ft;ot++)it[ot]=Z[ot](arguments[ot]);return Q&&(it[ft]=arguments[ft].map(Z[ft])),P.apply(this,it)}}let Y=H;if(v(A)){const Q=A.length-1;Y=function(){return H.apply(this,Nt(arguments,0,Q).concat([Nt(arguments,Q)]))}}return Y}function q(A){let P,H,Y,Q;const Z=[],dt=[];switch(A.types.forEach(function(it){it.conversion&&(Z.push(a(it.conversion.from).test),dt.push(it.conversion.convert))}),dt.length){case 0:return function(ft){return ft};case 1:return P=Z[0],Y=dt[0],function(ft){return P(ft)?Y(ft):ft};case 2:return P=Z[0],H=Z[1],Y=dt[0],Q=dt[1],function(ft){return P(ft)?Y(ft):H(ft)?Q(ft):ft};default:return function(ft){for(let ot=0;ot<dt.length;ot++)if(Z[ot](ft))return dt[ot](ft);return ft}}}function J(A){function P(H,Y,Q){if(Y<H.length){const Z=H[Y];let dt=[];if(Z.restParam){const it=Z.types.filter(S);it.length<Z.types.length&&dt.push({types:it,name:"..."+it.map(ft=>ft.name).join("|"),hasAny:it.some(ft=>ft.isAny),hasConversion:!1,restParam:!0}),dt.push(Z)}else dt=Z.types.map(function(it){return{types:[it],name:it.name,hasAny:it.isAny,hasConversion:it.conversion,restParam:!1}});return Ut(dt,function(it){return P(H,Y+1,Q.concat([it]))})}else return[Q]}return P(A,0,[])}function nt(A,P){const H=Math.max(A.length,P.length);for(let it=0;it<H;it++){const ft=$(A,it),ot=$(P,it);let Wt=!1,ee;for(ee of ot)if(ft.has(ee)){Wt=!0;break}if(!Wt)return!1}const Y=A.length,Q=P.length,Z=v(A),dt=v(P);return Z?dt?Y===Q:Q>=Y:dt?Y>=Q:Y===Q}function at(A){return A.map(P=>se(P)?Kt(P.referToSelf.callback):Gt(P)?ue(P.referTo.references,P.referTo.callback):P)}function st(A,P,H){const Y=[];let Q;for(Q of A){let Z=H[Q];if(typeof Z!="number")throw new TypeError('No definition for referenced signature "'+Q+'"');if(Z=P[Z],typeof Z!="function")return!1;Y.push(Z)}return Y}function ct(A,P,H){const Y=at(A),Q=new Array(Y.length).fill(!1);let Z=!0;for(;Z;){Z=!1;let dt=!0;for(let it=0;it<Y.length;++it){if(Q[it])continue;const ft=Y[it];if(se(ft))Y[it]=ft.referToSelf.callback(H),Y[it].referToSelf=ft.referToSelf,Q[it]=!0,dt=!1;else if(Gt(ft)){const ot=st(ft.referTo.references,Y,P);ot?(Y[it]=ft.referTo.callback.apply(this,ot),Y[it].referTo=ft.referTo,Q[it]=!0,dt=!1):Z=!0}}if(dt&&Z)throw new SyntaxError("Circular reference detected in resolving typed.referTo")}return Y}function ut(A){const P=/\bthis(\(|\.signatures\b)/;Object.keys(A).forEach(H=>{const Y=A[H];if(P.test(Y.toString()))throw new SyntaxError("Using `this` to self-reference a function is deprecated since typed-function@3. Use typed.referTo and typed.referToSelf instead.")})}function gt(A,P){if(i.createCount++,Object.keys(P).length===0)throw new SyntaxError("No signatures provided");i.warnAgainstDeprecatedThis&&ut(P);const H=[],Y=[],Q={},Z=[];let dt;for(dt in P){if(!Object.prototype.hasOwnProperty.call(P,dt))continue;const Jt=y(dt);if(!Jt)continue;H.forEach(function(Si){if(nt(Si,Jt))throw new TypeError('Conflicting signatures "'+x(Si)+'" and "'+x(Jt)+'".')}),H.push(Jt);const $n=Y.length;Y.push(P[dt]);const GD=Jt.map(b);let vu;for(vu of J(GD)){const Si=x(vu);Z.push({params:vu,name:Si,fn:$n}),vu.every(HD=>!HD.hasConversion)&&(Q[Si]=$n)}}Z.sort(_);const it=ct(Y,Q,ki);let ft;for(ft in Q)Object.prototype.hasOwnProperty.call(Q,ft)&&(Q[ft]=it[Q[ft]]);const ot=[],Wt=new Map;for(ft of Z)Wt.has(ft.name)||(ft.fn=it[ft.fn],ot.push(ft),Wt.set(ft.name,ft));const ee=ot[0]&&ot[0].params.length<=2&&!v(ot[0].params),ye=ot[1]&&ot[1].params.length<=2&&!v(ot[1].params),In=ot[2]&&ot[2].params.length<=2&&!v(ot[2].params),mn=ot[3]&&ot[3].params.length<=2&&!v(ot[3].params),us=ot[4]&&ot[4].params.length<=2&&!v(ot[4].params),cs=ot[5]&&ot[5].params.length<=2&&!v(ot[5].params),So=ee&&ye&&In&&mn&&us&&cs;for(let Jt=0;Jt<ot.length;++Jt)ot[Jt].test=D(ot[Jt].params);const yu=ee?C(ot[0].params[0]):Kn,gD=ye?C(ot[1].params[0]):Kn,xD=In?C(ot[2].params[0]):Kn,bD=mn?C(ot[3].params[0]):Kn,wD=us?C(ot[4].params[0]):Kn,yD=cs?C(ot[5].params[0]):Kn,vD=ee?C(ot[0].params[1]):Kn,CD=ye?C(ot[1].params[1]):Kn,DD=In?C(ot[2].params[1]):Kn,ID=mn?C(ot[3].params[1]):Kn,$D=us?C(ot[4].params[1]):Kn,kD=cs?C(ot[5].params[1]):Kn;for(let Jt=0;Jt<ot.length;++Jt)ot[Jt].implementation=G(ot[Jt].params,ot[Jt].fn);const SD=ee?ot[0].implementation:Ao,ED=ye?ot[1].implementation:Ao,ND=In?ot[2].implementation:Ao,AD=mn?ot[3].implementation:Ao,TD=us?ot[4].implementation:Ao,FD=cs?ot[5].implementation:Ao,RD=ee?ot[0].params.length:-1,_D=ye?ot[1].params.length:-1,OD=In?ot[2].params.length:-1,MD=mn?ot[3].params.length:-1,BD=us?ot[4].params.length:-1,LD=cs?ot[5].params.length:-1,PD=So?6:0,zD=ot.length,VD=ot.map(Jt=>Jt.test),WD=ot.map(Jt=>Jt.implementation),UD=function(){for(let $n=PD;$n<zD;$n++)if(VD[$n](arguments))return WD[$n].apply(this,arguments);return i.onMismatch(A,arguments,ot)};function ki(Jt,$n){return arguments.length===RD&&yu(Jt)&&vD($n)?SD.apply(this,arguments):arguments.length===_D&&gD(Jt)&&CD($n)?ED.apply(this,arguments):arguments.length===OD&&xD(Jt)&&DD($n)?ND.apply(this,arguments):arguments.length===MD&&bD(Jt)&&ID($n)?AD.apply(this,arguments):arguments.length===BD&&wD(Jt)&&$D($n)?TD.apply(this,arguments):arguments.length===LD&&yD(Jt)&&kD($n)?FD.apply(this,arguments):UD.apply(this,arguments)}try{Object.defineProperty(ki,"name",{value:A})}catch{}return ki.signatures=Q,ki._typedFunctionData={signatures:ot,signatureMap:Wt},ki}function wt(A,P,H){throw N(A,P,H)}function It(A){return Nt(A,0,A.length-1)}function yt(A){return A[A.length-1]}function Nt(A,P,H){return Array.prototype.slice.call(A,P,H)}function Ft(A,P){for(let H=0;H<A.length;H++)if(P(A[H]))return A[H]}function Ut(A,P){return Array.prototype.concat.apply([],A.map(P))}function Zt(){const A=It(arguments).map(H=>x(y(H))),P=yt(arguments);if(typeof P!="function")throw new TypeError("Callback function expected as last argument");return ue(A,P)}function ue(A,P){return{referTo:{references:A,callback:P}}}function Kt(A){if(typeof A!="function")throw new TypeError("Callback function expected as first argument");return{referToSelf:{callback:A}}}function Gt(A){return A&&typeof A.referTo=="object"&&Array.isArray(A.referTo.references)&&typeof A.referTo.callback=="function"}function se(A){return A&&typeof A.referToSelf=="object"&&typeof A.referToSelf.callback=="function"}function te(A,P){if(!A)return P;if(P&&P!==A){const H=new Error("Function names do not match (expected: "+A+", actual: "+P+")");throw H.data={actual:P,expected:A},H}return A}function as(A){let P;for(const H in A)Object.prototype.hasOwnProperty.call(A,H)&&(d(A[H])||typeof A[H].signature=="string")&&(P=te(P,A[H].name));return P}function Ae(A,P){let H;for(H in P)if(Object.prototype.hasOwnProperty.call(P,H)){if(H in A&&P[H]!==A[H]){const Y=new Error('Signature "'+H+'" is defined twice');throw Y.data={signature:H,sourceFunction:P[H],destFunction:A[H]},Y}A[H]=P[H]}}const $s=i;i=function(A){const P=typeof A=="string",H=P?1:0;let Y=P?A:"";const Q={};for(let Z=H;Z<arguments.length;++Z){const dt=arguments[Z];let it={},ft;if(typeof dt=="function"?(ft=dt.name,typeof dt.signature=="string"?it[dt.signature]=dt:d(dt)&&(it=dt.signatures)):n(dt)&&(it=dt,P||(ft=as(dt))),Object.keys(it).length===0){const ot=new TypeError("Argument to 'typed' at index "+Z+" is not a (typed) function, nor an object with signatures as keys and functions as values.");throw ot.data={index:Z,argument:dt},ot}P||(Y=te(Y,ft)),Ae(Q,it)}return gt(Y||"",Q)},i.create=BC,i.createCount=$s.createCount,i.onMismatch=wt,i.throwMismatchError=wt,i.createError=N,i.clear=c,i.clearConversions=l,i.addTypes=u,i._findType=a,i.referTo=Zt,i.referToSelf=Kt,i.convert=p,i.findSignature=f,i.find=m,i.isTypedFunction=d,i.warnAgainstDeprecatedThis=!0,i.addType=function(A,P){let H="any";P!==!1&&s.has("Object")&&(H="Object"),i.addTypes([A],H)};function rn(A){if(!A||typeof A.from!="string"||typeof A.to!="string"||typeof A.convert!="function")throw new TypeError("Object with properties {from: string, to: string, convert: function} expected");if(A.to===A.from)throw new SyntaxError('Illegal to define conversion from "'+A.from+'" to itself.')}return i.addConversion=function(A){rn(A);const P=a(A.to);if(P.conversionsTo.every(function(H){return H.from!==A.from}))P.conversionsTo.push({from:A.from,convert:A.convert,index:o++});else throw new Error('There is already a conversion from "'+A.from+'" to "'+P.name+'"')},i.addConversions=function(A){A.forEach(i.addConversion)},i.removeConversion=function(A){rn(A);const P=a(A.to),H=Ft(P.conversionsTo,Q=>Q.from===A.from);if(!H)throw new Error("Attempt to remove nonexistent conversion from "+A.from+" to "+A.to);if(H.convert!==A.convert)throw new Error("Conversion to remove does not match existing conversion");const Y=P.conversionsTo.indexOf(H);P.conversionsTo.splice(Y,1)},i.resolve=function(A,P){if(!d(A))throw new TypeError($0);const H=A._typedFunctionData.signatures;for(let Y=0;Y<H.length;++Y)if(H[Y].test(P))return H[Y];return null},i}const k0=BC();function Ve(n){return typeof n=="boolean"?!0:isFinite(n)?n===Math.round(n):!1}function _h(n,t,e){var s={2:"0b",8:"0o",16:"0x"},r=s[t],o="";if(e){if(e<1)throw new Error("size must be in greater than 0");if(!Ve(e))throw new Error("size must be an integer");if(n>2**(e-1)-1||n<-(2**(e-1)))throw new Error("Value must be in range [-2^".concat(e-1,", 2^").concat(e-1,"-1]"));if(!Ve(n))throw new Error("Value must be an integer");n<0&&(n=n+2**e),o="i".concat(e)}var i="";return n<0&&(n=-n,i="-"),"".concat(i).concat(r).concat(n.toString(t)).concat(o)}function Dd(n,t){if(typeof t=="function")return t(n);if(n===1/0)return"Infinity";if(n===-1/0)return"-Infinity";if(isNaN(n))return"NaN";var e="auto",s,r;if(t&&(t.notation&&(e=t.notation),we(t)?s=t:we(t.precision)&&(s=t.precision),t.wordSize&&(r=t.wordSize,typeof r!="number")))throw new Error('Option "wordSize" must be a number');switch(e){case"fixed":return LC(n,s);case"exponential":return PC(n,s);case"engineering":return rq(n,s);case"bin":return _h(n,2,r);case"oct":return _h(n,8,r);case"hex":return _h(n,16,r);case"auto":return oq(n,s,t&&t).replace(/((\.\d*?)(0+))($|e)/,function(){var o=arguments[2],i=arguments[4];return o!=="."?o+i:i});default:throw new Error('Unknown notation "'+e+'". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')}}function ih(n){var t=String(n).toLowerCase().match(/^(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);if(!t)throw new SyntaxError("Invalid number "+n);var e=t[1],s=t[2],r=parseFloat(t[4]||"0"),o=s.indexOf(".");r+=o!==-1?o-1:s.length-1;var i=s.replace(".","").replace(/^0*/,function(a){return r-=a.length,""}).replace(/0*$/,"").split("").map(function(a){return parseInt(a)});return i.length===0&&(i.push(0),r++),{sign:e,coefficients:i,exponent:r}}function rq(n,t){if(isNaN(n)||!isFinite(n))return String(n);var e=ih(n),s=ah(e,t),r=s.exponent,o=s.coefficients,i=r%3===0?r:r<0?r-3-r%3:r-r%3;if(we(t))for(;t>o.length||r-i+1>o.length;)o.push(0);else for(var a=Math.abs(r-i)-(o.length-1),u=0;u<a;u++)o.push(0);for(var c=Math.abs(r-i),l=1;c>0;)l++,c--;var h=o.slice(l).join(""),d=we(t)&&h.length||h.match(/[1-9]/)?"."+h:"",f=o.slice(0,l).join("")+d+"e"+(r>=0?"+":"")+i.toString();return s.sign+f}function LC(n,t){if(isNaN(n)||!isFinite(n))return String(n);var e=ih(n),s=typeof t=="number"?ah(e,e.exponent+1+t):e,r=s.coefficients,o=s.exponent+1,i=o+(t||0);return r.length<i&&(r=r.concat(Go(i-r.length))),o<0&&(r=Go(-o+1).concat(r),o=1),o<r.length&&r.splice(o,0,o===0?"0.":"."),s.sign+r.join("")}function PC(n,t){if(isNaN(n)||!isFinite(n))return String(n);var e=ih(n),s=t?ah(e,t):e,r=s.coefficients,o=s.exponent;r.length<t&&(r=r.concat(Go(t-r.length)));var i=r.shift();return s.sign+i+(r.length>0?"."+r.join(""):"")+"e"+(o>=0?"+":"")+o}function oq(n,t,e){if(isNaN(n)||!isFinite(n))return String(n);var s=e&&e.lowerExp!==void 0?e.lowerExp:-3,r=e&&e.upperExp!==void 0?e.upperExp:5,o=ih(n),i=t?ah(o,t):o;if(i.exponent<s||i.exponent>=r)return PC(n,t);var a=i.coefficients,u=i.exponent;a.length<t&&(a=a.concat(Go(t-a.length))),a=a.concat(Go(u-a.length+1+(a.length<t?t-a.length:0))),a=Go(-u).concat(a);var c=u>0?u:0;return c<a.length-1&&a.splice(c+1,0,"."),i.sign+a.join("")}function ah(n,t){for(var e={sign:n.sign,coefficients:n.coefficients,exponent:n.exponent},s=e.coefficients;t<=0;)s.unshift(0),e.exponent++,t++;if(s.length>t){var r=s.splice(t,s.length-t);if(r[0]>=5){var o=t-1;for(s[o]++;s[o]===10;)s.pop(),o===0&&(s.unshift(0),e.exponent++,o++),o--,s[o]++}}return e}function Go(n){for(var t=[],e=0;e<n;e++)t.push(0);return t}function iq(n){return n.toExponential().replace(/e.*$/,"").replace(/^0\.?0*|\./,"").length}var aq=Number.EPSILON||2220446049250313e-31;function ii(n,t,e){if(e==null)return n===t;if(n===t)return!0;if(isNaN(n)||isNaN(t))return!1;if(isFinite(n)&&isFinite(t)){var s=Math.abs(n-t);return s<=aq?!0:s<=Math.max(Math.abs(n),Math.abs(t))*e}return!1}function Oh(n,t,e){var s=n.constructor,r=new s(2),o="";if(e){if(e<1)throw new Error("size must be in greater than 0");if(!Ve(e))throw new Error("size must be an integer");if(n.greaterThan(r.pow(e-1).sub(1))||n.lessThan(r.pow(e-1).mul(-1)))throw new Error("Value must be in range [-2^".concat(e-1,", 2^").concat(e-1,"-1]"));if(!n.isInteger())throw new Error("Value must be an integer");n.lessThan(0)&&(n=n.add(r.pow(e))),o="i".concat(e)}switch(t){case 2:return"".concat(n.toBinary()).concat(o);case 8:return"".concat(n.toOctal()).concat(o);case 16:return"".concat(n.toHexadecimal()).concat(o);default:throw new Error("Base ".concat(t," not supported "))}}function uq(n,t){if(typeof t=="function")return t(n);if(!n.isFinite())return n.isNaN()?"NaN":n.gt(0)?"Infinity":"-Infinity";var e="auto",s,r;if(t!==void 0&&(t.notation&&(e=t.notation),typeof t=="number"?s=t:t.precision!==void 0&&(s=t.precision),t.wordSize&&(r=t.wordSize,typeof r!="number")))throw new Error('Option "wordSize" must be a number');switch(e){case"fixed":return lq(n,s);case"exponential":return S0(n,s);case"engineering":return cq(n,s);case"bin":return Oh(n,2,r);case"oct":return Oh(n,8,r);case"hex":return Oh(n,16,r);case"auto":{var o=t&&t.lowerExp!==void 0?t.lowerExp:-3,i=t&&t.upperExp!==void 0?t.upperExp:5;if(n.isZero())return"0";var a,u=n.toSignificantDigits(s),c=u.e;return c>=o&&c<i?a=u.toFixed():a=S0(n,s),a.replace(/((\.\d*?)(0+))($|e)/,function(){var l=arguments[2],h=arguments[4];return l!=="."?l+h:h})}default:throw new Error('Unknown notation "'+e+'". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')}}function cq(n,t){var e=n.e,s=e%3===0?e:e<0?e-3-e%3:e-e%3,r=n.mul(Math.pow(10,-s)),o=r.toPrecision(t);if(o.indexOf("e")!==-1){var i=n.constructor;o=new i(o).toFixed()}return o+"e"+(e>=0?"+":"")+s.toString()}function S0(n,t){return t!==void 0?n.toExponential(t-1):n.toExponential()}function lq(n,t){return n.toFixed(t)}function Sn(n,t){var e=hq(n,t);return t&&typeof t=="object"&&"truncate"in t&&e.length>t.truncate?e.substring(0,t.truncate-3)+"...":e}function hq(n,t){if(typeof n=="number")return Dd(n,t);if(Vn(n))return uq(n,t);if(dq(n))return!t||t.fraction!=="decimal"?n.s*n.n+"/"+n.d:n.toString();if(Array.isArray(n))return zC(n,t);if(Fs(n))return E0(n);if(typeof n=="function")return n.syntax?String(n.syntax):"function";if(n&&typeof n=="object"){if(typeof n.format=="function")return n.format(t);if(n&&n.toString(t)!=={}.toString())return n.toString(t);var e=Object.keys(n).map(s=>E0(s)+": "+Sn(n[s],t));return"{"+e.join(", ")+"}"}return String(n)}function E0(n){for(var t=String(n),e="",s=0;s<t.length;){var r=t.charAt(s);e+=r in N0?N0[r]:r,s++}return'"'+e+'"'}var N0={'"':'\\"',"\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","	":"\\t"};function zC(n,t){if(Array.isArray(n)){for(var e="[",s=n.length,r=0;r<s;r++)r!==0&&(e+=", "),e+=zC(n[r],t);return e+="]",e}else return Sn(n,t)}function dq(n){return n&&typeof n=="object"&&typeof n.s=="number"&&typeof n.n=="number"&&typeof n.d=="number"||!1}function pe(n,t,e){if(!(this instanceof pe))throw new SyntaxError("Constructor must be called with the new operator");this.actual=n,this.expected=t,this.relation=e,this.message="Dimension mismatch ("+(Array.isArray(n)?"["+n.join(", ")+"]":n)+" "+(this.relation||"!=")+" "+(Array.isArray(t)?"["+t.join(", ")+"]":t)+")",this.stack=new Error().stack}pe.prototype=new RangeError;pe.prototype.constructor=RangeError;pe.prototype.name="DimensionError";pe.prototype.isDimensionError=!0;function $i(n,t,e){if(!(this instanceof $i))throw new SyntaxError("Constructor must be called with the new operator");this.index=n,arguments.length<3?(this.min=0,this.max=t):(this.min=t,this.max=e),this.min!==void 0&&this.index<this.min?this.message="Index out of range ("+this.index+" < "+this.min+")":this.max!==void 0&&this.index>=this.max?this.message="Index out of range ("+this.index+" > "+(this.max-1)+")":this.message="Index out of range ("+this.index+")",this.stack=new Error().stack}$i.prototype=new RangeError;$i.prototype.constructor=RangeError;$i.prototype.name="IndexError";$i.prototype.isIndexError=!0;function xr(n){for(var t=[];Array.isArray(n);)t.push(n.length),n=n[0];return t}function VC(n,t,e){var s,r=n.length;if(r!==t[e])throw new pe(r,t[e]);if(e<t.length-1){var o=e+1;for(s=0;s<r;s++){var i=n[s];if(!Array.isArray(i))throw new pe(t.length-1,t.length,"<");VC(n[s],t,o)}}else for(s=0;s<r;s++)if(Array.isArray(n[s]))throw new pe(t.length+1,t.length,">")}function A0(n,t){var e=t.length===0;if(e){if(Array.isArray(n))throw new pe(n.length,0)}else VC(n,t,0)}function be(n,t){if(n!==void 0){if(!we(n)||!Ve(n))throw new TypeError("Index must be an integer (value: "+n+")");if(n<0||typeof t=="number"&&n>=t)throw new $i(n,t)}}function Id(n,t,e){if(!Array.isArray(t))throw new TypeError("Array expected");if(t.length===0)throw new Error("Resizing to scalar is not supported");t.forEach(function(r){if(!we(r)||!Ve(r)||r<0)throw new TypeError("Invalid size, must contain positive integers (size: "+Sn(t)+")")}),(we(n)||Vn(n))&&(n=[n]);var s=e!==void 0?e:0;return $d(n,t,0,s),n}function $d(n,t,e,s){var r,o,i=n.length,a=t[e],u=Math.min(i,a);if(n.length=a,e<t.length-1){var c=e+1;for(r=0;r<u;r++)o=n[r],Array.isArray(o)||(o=[o],n[r]=o),$d(o,t,c,s);for(r=u;r<a;r++)o=[],n[r]=o,$d(o,t,c,s)}else{for(r=0;r<u;r++)for(;Array.isArray(n[r]);)n[r]=n[r][0];for(r=u;r<a;r++)n[r]=s}}function WC(n,t){var e=pq(n),s=e.length;if(!Array.isArray(n)||!Array.isArray(t))throw new TypeError("Array expected");if(t.length===0)throw new pe(0,s,"!=");t=Em(t,s);var r=UC(t);if(s!==r)throw new pe(r,s,"!=");try{return fq(e,t)}catch(o){throw o instanceof pe?new pe(r,s,"!="):o}}function Em(n,t){var e=UC(n),s=n.slice(),r=-1,o=n.indexOf(r),i=n.indexOf(r,o+1)>=0;if(i)throw new Error("More than one wildcard in sizes");var a=o>=0,u=t%e===0;if(a)if(u)s[o]=-t/e;else throw new Error("Could not replace wildcard, since "+t+" is no multiple of "+-e);return s}function UC(n){return n.reduce((t,e)=>t*e,1)}function fq(n,t){for(var e=n,s,r=t.length-1;r>0;r--){var o=t[r];s=[];for(var i=e.length/o,a=0;a<i;a++)s.push(e.slice(a*o,(a+1)*o));e=s}return e}function GC(n,t,e,s){var r=s||xr(n);if(e)for(var o=0;o<e;o++)n=[n],r.unshift(1);for(n=HC(n,t,0);r.length<t;)r.push(1);return n}function HC(n,t,e){var s,r;if(Array.isArray(n)){var o=e+1;for(s=0,r=n.length;s<r;s++)n[s]=HC(n[s],t,o)}else for(var i=e;i<t;i++)n=[n];return n}function pq(n){if(!Array.isArray(n))return n;var t=[];return n.forEach(function e(s){Array.isArray(s)?s.forEach(e):t.push(s)}),t}function Cc(n,t){for(var e,s=0,r=0;r<n.length;r++){var o=n[r],i=Array.isArray(o);if(r===0&&i&&(s=o.length),i&&o.length!==s)return;var a=i?Cc(o,t):t(o);if(e===void 0)e=a;else if(e!==a)return"mixed"}return e}function qC(n,t,e,s){if(s<e){if(n.length!==t.length)throw new pe(n.length,t.length);for(var r=[],o=0;o<n.length;o++)r[o]=qC(n[o],t[o],e,s+1);return r}else return n.concat(t)}function mq(){var n=Array.prototype.slice.call(arguments,0,-1),t=Array.prototype.slice.call(arguments,-1);if(n.length===1)return n[0];if(n.length>1)return n.slice(1).reduce(function(e,s){return qC(e,s,t,0)},n[0]);throw new Error("Wrong number of arguments in function concat")}function gq(){for(var n=arguments.length,t=new Array(n),e=0;e<n;e++)t[e]=arguments[e];for(var s=t.map(d=>d.length),r=Math.max(...s),o=new Array(r).fill(null),i=0;i<t.length;i++)for(var a=t[i],u=s[i],c=0;c<u;c++){var l=r-u+c;a[c]>o[l]&&(o[l]=a[c])}for(var h=0;h<t.length;h++)jC(t[h],o);return o}function jC(n,t){for(var e=t.length,s=n.length,r=0;r<s;r++){var o=e-s+r;if(n[r]<t[o]&&n[r]>1||n[r]>t[o])throw new Error("shape missmatch: missmatch is found in arg with shape (".concat(n,") not possible to broadcast dimension ").concat(s," with size ").concat(n[r]," to size ").concat(t[o]))}}function T0(n,t){var e=xr(n);if(oi(e,t))return n;jC(e,t);var s=gq(e,t),r=s.length,o=[...Array(r-e.length).fill(1),...e],i=bq(n);e.length<r&&(i=WC(i,o),e=xr(i));for(var a=0;a<r;a++)e[a]<s[a]&&(i=xq(i,s[a],a),e=xr(i));return i}function xq(n,t,e){return mq(...Array(t).fill(n),e)}function bq(n){return wc([],n)}function He(n,t,e,s){function r(o){var i=eq(o,t.map(vq));return wq(n,t,o),e(i)}return r.isFactory=!0,r.fn=n,r.dependencies=t.slice().sort(),s&&(r.meta=s),r}function wq(n,t,e){var s=t.filter(o=>!yq(o)).every(o=>e[o]!==void 0);if(!s){var r=t.filter(o=>e[o]===void 0);throw new Error('Cannot create function "'.concat(n,'", ')+"some dependencies are missing: ".concat(r.map(o=>'"'.concat(o,'"')).join(", "),"."))}}function yq(n){return n&&n[0]==="?"}function vq(n){return n&&n[0]==="?"?n.slice(1):n}function Cq(n,t){if(XC(n)&&KC(n,t))return n[t];throw typeof n[t]=="function"&&$q(n,t)?new Error('Cannot access method "'+t+'" as a property'):new Error('No access to property "'+t+'"')}function Dq(n,t,e){if(XC(n)&&KC(n,t))return n[t]=e,e;throw new Error('No access to property "'+t+'"')}function Iq(n,t){return t in n}function KC(n,t){return!n||typeof n!="object"?!1:vc(kq,t)?!0:!(t in Object.prototype||t in Function.prototype)}function $q(n,t){return n==null||typeof n[t]!="function"||vc(n,t)&&Object.getPrototypeOf&&t in Object.getPrototypeOf(n)?!1:vc(Sq,t)?!0:!(t in Object.prototype||t in Function.prototype)}function XC(n){return typeof n=="object"&&n&&n.constructor===Object}var kq={length:!0,name:!0},Sq={toString:!0,valueOf:!0,toLocaleString:!0};class Eq{constructor(t){this.wrappedObject=t}keys(){return Object.keys(this.wrappedObject)}get(t){return Cq(this.wrappedObject,t)}set(t,e){return Dq(this.wrappedObject,t,e),this}has(t){return Iq(this.wrappedObject,t)}}function Nq(n){return n?n instanceof Map||n instanceof Eq||typeof n.set=="function"&&typeof n.get=="function"&&typeof n.keys=="function"&&typeof n.has=="function":!1}var YC=function(){return YC=k0.create,k0},Aq=["?BigNumber","?Complex","?DenseMatrix","?Fraction"],Tq=He("typed",Aq,function(t){var{BigNumber:e,Complex:s,DenseMatrix:r,Fraction:o}=t,i=YC();return i.clear(),i.addTypes([{name:"number",test:we},{name:"Complex",test:RC},{name:"BigNumber",test:Vn},{name:"Fraction",test:_C},{name:"Unit",test:OC},{name:"identifier",test:a=>Fs&&/^(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE3F\uDE40\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDF02\uDF04-\uDF10\uDF12-\uDF33\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883\uD885-\uD887][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2F\uDC41-\uDC46]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD32\uDD50-\uDD52\uDD55\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E\uDF25-\uDF2A]|\uD838[\uDC30-\uDC6D\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDCD0-\uDCEB\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF39\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A\uDF50-\uDFFF]|\uD888[\uDC00-\uDFAF])(?:[0-9A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE3F\uDE40\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDF02\uDF04-\uDF10\uDF12-\uDF33\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883\uD885-\uD887][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2F\uDC41-\uDC46]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD32\uDD50-\uDD52\uDD55\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E\uDF25-\uDF2A]|\uD838[\uDC30-\uDC6D\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDCD0-\uDCEB\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF39\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A\uDF50-\uDFFF]|\uD888[\uDC00-\uDFAF])*$/.test(a)},{name:"string",test:Fs},{name:"Chain",test:Q7},{name:"Array",test:xe},{name:"Matrix",test:_s},{name:"DenseMatrix",test:k7},{name:"SparseMatrix",test:S7},{name:"Range",test:E7},{name:"Index",test:Sm},{name:"boolean",test:N7},{name:"ResultSet",test:A7},{name:"Help",test:T7},{name:"function",test:F7},{name:"Date",test:R7},{name:"RegExp",test:_7},{name:"null",test:O7},{name:"undefined",test:M7},{name:"AccessorNode",test:B7},{name:"ArrayNode",test:L7},{name:"AssignmentNode",test:P7},{name:"BlockNode",test:z7},{name:"ConditionalNode",test:V7},{name:"ConstantNode",test:W7},{name:"FunctionNode",test:G7},{name:"FunctionAssignmentNode",test:U7},{name:"IndexNode",test:H7},{name:"Node",test:q7},{name:"ObjectNode",test:j7},{name:"OperatorNode",test:K7},{name:"ParenthesisNode",test:X7},{name:"RangeNode",test:Y7},{name:"RelationalNode",test:Z7},{name:"SymbolNode",test:J7},{name:"Map",test:Nq},{name:"Object",test:MC}]),i.addConversions([{from:"number",to:"BigNumber",convert:function(u){if(e||Mh(u),iq(u)>15)throw new TypeError("Cannot implicitly convert a number with >15 significant digits to BigNumber (value: "+u+"). Use function bignumber(x) to convert to BigNumber.");return new e(u)}},{from:"number",to:"Complex",convert:function(u){return s||Bu(u),new s(u,0)}},{from:"BigNumber",to:"Complex",convert:function(u){return s||Bu(u),new s(u.toNumber(),0)}},{from:"Fraction",to:"BigNumber",convert:function(u){throw new TypeError("Cannot implicitly convert a Fraction to BigNumber or vice versa. Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.")}},{from:"Fraction",to:"Complex",convert:function(u){return s||Bu(u),new s(u.valueOf(),0)}},{from:"number",to:"Fraction",convert:function(u){o||Bh(u);var c=new o(u);if(c.valueOf()!==u)throw new TypeError("Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: "+u+"). Use function fraction(x) to convert to Fraction.");return c}},{from:"string",to:"number",convert:function(u){var c=Number(u);if(isNaN(c))throw new Error('Cannot convert "'+u+'" to a number');return c}},{from:"string",to:"BigNumber",convert:function(u){e||Mh(u);try{return new e(u)}catch{throw new Error('Cannot convert "'+u+'" to BigNumber')}}},{from:"string",to:"Fraction",convert:function(u){o||Bh(u);try{return new o(u)}catch{throw new Error('Cannot convert "'+u+'" to Fraction')}}},{from:"string",to:"Complex",convert:function(u){s||Bu(u);try{return new s(u)}catch{throw new Error('Cannot convert "'+u+'" to Complex')}}},{from:"boolean",to:"number",convert:function(u){return+u}},{from:"boolean",to:"BigNumber",convert:function(u){return e||Mh(u),new e(+u)}},{from:"boolean",to:"Fraction",convert:function(u){return o||Bh(u),new o(+u)}},{from:"boolean",to:"string",convert:function(u){return String(u)}},{from:"Array",to:"Matrix",convert:function(u){return r||Fq(),new r(u)}},{from:"Matrix",to:"Array",convert:function(u){return u.valueOf()}}]),i.onMismatch=(a,u,c)=>{var l=i.createError(a,u,c);if(["wrongType","mismatch"].includes(l.data.category)&&u.length===1&&yc(u[0])&&c.some(d=>!d.params.includes(","))){var h=new TypeError("Function '".concat(a,"' doesn't apply to matrices. To call it ")+"elementwise on a matrix 'M', try 'map(M, ".concat(a,")'."));throw h.data=l.data,h}throw l},i.onMismatch=(a,u,c)=>{var l=i.createError(a,u,c);if(["wrongType","mismatch"].includes(l.data.category)&&u.length===1&&yc(u[0])&&c.some(d=>!d.params.includes(","))){var h=new TypeError("Function '".concat(a,"' doesn't apply to matrices. To call it ")+"elementwise on a matrix 'M', try 'map(M, ".concat(a,")'."));throw h.data=l.data,h}throw l},i});function Mh(n){throw new Error("Cannot convert value ".concat(n," into a BigNumber: no class 'BigNumber' provided"))}function Bu(n){throw new Error("Cannot convert value ".concat(n," into a Complex number: no class 'Complex' provided"))}function Fq(){throw new Error("Cannot convert array into a Matrix: no class 'DenseMatrix' provided")}function Bh(n){throw new Error("Cannot convert value ".concat(n," into a Fraction, no class 'Fraction' provided."))}/*!
 *  decimal.js v10.4.3
 *  An arbitrary-precision Decimal type for JavaScript.
 *  https://github.com/MikeMcl/decimal.js
 *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>
 *  MIT Licence
 */var Bo=9e15,Br=1e9,kd="0123456789abcdef",Dc="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",Ic="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",Sd={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-Bo,maxE:Bo,crypto:!1},ZC,Qs,At=!0,uh="[DecimalError] ",Ir=uh+"Invalid argument: ",JC=uh+"Precision limit exceeded",QC=uh+"crypto unavailable",tD="[object Decimal]",fn=Math.floor,ze=Math.pow,Rq=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,_q=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,Oq=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,eD=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,ws=1e7,kt=7,Mq=9007199254740991,Bq=Dc.length-1,Ed=Ic.length-1,tt={toStringTag:tD};tt.absoluteValue=tt.abs=function(){var n=new this.constructor(this);return n.s<0&&(n.s=1),Dt(n)};tt.ceil=function(){return Dt(new this.constructor(this),this.e+1,2)};tt.clampedTo=tt.clamp=function(n,t){var e,s=this,r=s.constructor;if(n=new r(n),t=new r(t),!n.s||!t.s)return new r(NaN);if(n.gt(t))throw Error(Ir+t);return e=s.cmp(n),e<0?n:s.cmp(t)>0?t:new r(s)};tt.comparedTo=tt.cmp=function(n){var t,e,s,r,o=this,i=o.d,a=(n=new o.constructor(n)).d,u=o.s,c=n.s;if(!i||!a)return!u||!c?NaN:u!==c?u:i===a?0:!i^u<0?1:-1;if(!i[0]||!a[0])return i[0]?u:a[0]?-c:0;if(u!==c)return u;if(o.e!==n.e)return o.e>n.e^u<0?1:-1;for(s=i.length,r=a.length,t=0,e=s<r?s:r;t<e;++t)if(i[t]!==a[t])return i[t]>a[t]^u<0?1:-1;return s===r?0:s>r^u<0?1:-1};tt.cosine=tt.cos=function(){var n,t,e=this,s=e.constructor;return e.d?e.d[0]?(n=s.precision,t=s.rounding,s.precision=n+Math.max(e.e,e.sd())+kt,s.rounding=1,e=Lq(s,iD(s,e)),s.precision=n,s.rounding=t,Dt(Qs==2||Qs==3?e.neg():e,n,t,!0)):new s(1):new s(NaN)};tt.cubeRoot=tt.cbrt=function(){var n,t,e,s,r,o,i,a,u,c,l=this,h=l.constructor;if(!l.isFinite()||l.isZero())return new h(l);for(At=!1,o=l.s*ze(l.s*l,1/3),!o||Math.abs(o)==1/0?(e=Qe(l.d),n=l.e,(o=(n-e.length+1)%3)&&(e+=o==1||o==-2?"0":"00"),o=ze(e,1/3),n=fn((n+1)/3)-(n%3==(n<0?-1:2)),o==1/0?e="5e"+n:(e=o.toExponential(),e=e.slice(0,e.indexOf("e")+1)+n),s=new h(e),s.s=l.s):s=new h(o.toString()),i=(n=h.precision)+3;;)if(a=s,u=a.times(a).times(a),c=u.plus(l),s=ie(c.plus(l).times(a),c.plus(u),i+2,1),Qe(a.d).slice(0,i)===(e=Qe(s.d)).slice(0,i))if(e=e.slice(i-3,i+1),e=="9999"||!r&&e=="4999"){if(!r&&(Dt(a,n+1,0),a.times(a).times(a).eq(l))){s=a;break}i+=4,r=1}else{(!+e||!+e.slice(1)&&e.charAt(0)=="5")&&(Dt(s,n+1,1),t=!s.times(s).times(s).eq(l));break}return At=!0,Dt(s,n,h.rounding,t)};tt.decimalPlaces=tt.dp=function(){var n,t=this.d,e=NaN;if(t){if(n=t.length-1,e=(n-fn(this.e/kt))*kt,n=t[n],n)for(;n%10==0;n/=10)e--;e<0&&(e=0)}return e};tt.dividedBy=tt.div=function(n){return ie(this,new this.constructor(n))};tt.dividedToIntegerBy=tt.divToInt=function(n){var t=this,e=t.constructor;return Dt(ie(t,new e(n),0,1,1),e.precision,e.rounding)};tt.equals=tt.eq=function(n){return this.cmp(n)===0};tt.floor=function(){return Dt(new this.constructor(this),this.e+1,3)};tt.greaterThan=tt.gt=function(n){return this.cmp(n)>0};tt.greaterThanOrEqualTo=tt.gte=function(n){var t=this.cmp(n);return t==1||t===0};tt.hyperbolicCosine=tt.cosh=function(){var n,t,e,s,r,o=this,i=o.constructor,a=new i(1);if(!o.isFinite())return new i(o.s?1/0:NaN);if(o.isZero())return a;e=i.precision,s=i.rounding,i.precision=e+Math.max(o.e,o.sd())+4,i.rounding=1,r=o.d.length,r<32?(n=Math.ceil(r/3),t=(1/lh(4,n)).toString()):(n=16,t="2.3283064365386962890625e-10"),o=ai(i,1,o.times(t),new i(1),!0);for(var u,c=n,l=new i(8);c--;)u=o.times(o),o=a.minus(u.times(l.minus(u.times(l))));return Dt(o,i.precision=e,i.rounding=s,!0)};tt.hyperbolicSine=tt.sinh=function(){var n,t,e,s,r=this,o=r.constructor;if(!r.isFinite()||r.isZero())return new o(r);if(t=o.precision,e=o.rounding,o.precision=t+Math.max(r.e,r.sd())+4,o.rounding=1,s=r.d.length,s<3)r=ai(o,2,r,r,!0);else{n=1.4*Math.sqrt(s),n=n>16?16:n|0,r=r.times(1/lh(5,n)),r=ai(o,2,r,r,!0);for(var i,a=new o(5),u=new o(16),c=new o(20);n--;)i=r.times(r),r=r.times(a.plus(i.times(u.times(i).plus(c))))}return o.precision=t,o.rounding=e,Dt(r,t,e,!0)};tt.hyperbolicTangent=tt.tanh=function(){var n,t,e=this,s=e.constructor;return e.isFinite()?e.isZero()?new s(e):(n=s.precision,t=s.rounding,s.precision=n+7,s.rounding=1,ie(e.sinh(),e.cosh(),s.precision=n,s.rounding=t)):new s(e.s)};tt.inverseCosine=tt.acos=function(){var n,t=this,e=t.constructor,s=t.abs().cmp(1),r=e.precision,o=e.rounding;return s!==-1?s===0?t.isNeg()?ms(e,r,o):new e(0):new e(NaN):t.isZero()?ms(e,r+4,o).times(.5):(e.precision=r+6,e.rounding=1,t=t.asin(),n=ms(e,r+4,o).times(.5),e.precision=r,e.rounding=o,n.minus(t))};tt.inverseHyperbolicCosine=tt.acosh=function(){var n,t,e=this,s=e.constructor;return e.lte(1)?new s(e.eq(1)?0:NaN):e.isFinite()?(n=s.precision,t=s.rounding,s.precision=n+Math.max(Math.abs(e.e),e.sd())+4,s.rounding=1,At=!1,e=e.times(e).minus(1).sqrt().plus(e),At=!0,s.precision=n,s.rounding=t,e.ln()):new s(e)};tt.inverseHyperbolicSine=tt.asinh=function(){var n,t,e=this,s=e.constructor;return!e.isFinite()||e.isZero()?new s(e):(n=s.precision,t=s.rounding,s.precision=n+2*Math.max(Math.abs(e.e),e.sd())+6,s.rounding=1,At=!1,e=e.times(e).plus(1).sqrt().plus(e),At=!0,s.precision=n,s.rounding=t,e.ln())};tt.inverseHyperbolicTangent=tt.atanh=function(){var n,t,e,s,r=this,o=r.constructor;return r.isFinite()?r.e>=0?new o(r.abs().eq(1)?r.s/0:r.isZero()?r:NaN):(n=o.precision,t=o.rounding,s=r.sd(),Math.max(s,n)<2*-r.e-1?Dt(new o(r),n,t,!0):(o.precision=e=s-r.e,r=ie(r.plus(1),new o(1).minus(r),e+n,1),o.precision=n+4,o.rounding=1,r=r.ln(),o.precision=n,o.rounding=t,r.times(.5))):new o(NaN)};tt.inverseSine=tt.asin=function(){var n,t,e,s,r=this,o=r.constructor;return r.isZero()?new o(r):(t=r.abs().cmp(1),e=o.precision,s=o.rounding,t!==-1?t===0?(n=ms(o,e+4,s).times(.5),n.s=r.s,n):new o(NaN):(o.precision=e+6,o.rounding=1,r=r.div(new o(1).minus(r.times(r)).sqrt().plus(1)).atan(),o.precision=e,o.rounding=s,r.times(2)))};tt.inverseTangent=tt.atan=function(){var n,t,e,s,r,o,i,a,u,c=this,l=c.constructor,h=l.precision,d=l.rounding;if(c.isFinite()){if(c.isZero())return new l(c);if(c.abs().eq(1)&&h+4<=Ed)return i=ms(l,h+4,d).times(.25),i.s=c.s,i}else{if(!c.s)return new l(NaN);if(h+4<=Ed)return i=ms(l,h+4,d).times(.5),i.s=c.s,i}for(l.precision=a=h+10,l.rounding=1,e=Math.min(28,a/kt+2|0),n=e;n;--n)c=c.div(c.times(c).plus(1).sqrt().plus(1));for(At=!1,t=Math.ceil(a/kt),s=1,u=c.times(c),i=new l(c),r=c;n!==-1;)if(r=r.times(u),o=i.minus(r.div(s+=2)),r=r.times(u),i=o.plus(r.div(s+=2)),i.d[t]!==void 0)for(n=t;i.d[n]===o.d[n]&&n--;);return e&&(i=i.times(2<<e-1)),At=!0,Dt(i,l.precision=h,l.rounding=d,!0)};tt.isFinite=function(){return!!this.d};tt.isInteger=tt.isInt=function(){return!!this.d&&fn(this.e/kt)>this.d.length-2};tt.isNaN=function(){return!this.s};tt.isNegative=tt.isNeg=function(){return this.s<0};tt.isPositive=tt.isPos=function(){return this.s>0};tt.isZero=function(){return!!this.d&&this.d[0]===0};tt.lessThan=tt.lt=function(n){return this.cmp(n)<0};tt.lessThanOrEqualTo=tt.lte=function(n){return this.cmp(n)<1};tt.logarithm=tt.log=function(n){var t,e,s,r,o,i,a,u,c=this,l=c.constructor,h=l.precision,d=l.rounding,f=5;if(n==null)n=new l(10),t=!0;else{if(n=new l(n),e=n.d,n.s<0||!e||!e[0]||n.eq(1))return new l(NaN);t=n.eq(10)}if(e=c.d,c.s<0||!e||!e[0]||c.eq(1))return new l(e&&!e[0]?-1/0:c.s!=1?NaN:e?0:1/0);if(t)if(e.length>1)o=!0;else{for(r=e[0];r%10===0;)r/=10;o=r!==1}if(At=!1,a=h+f,i=dr(c,a),s=t?$c(l,a+10):dr(n,a),u=ie(i,s,a,1),ta(u.d,r=h,d))do if(a+=10,i=dr(c,a),s=t?$c(l,a+10):dr(n,a),u=ie(i,s,a,1),!o){+Qe(u.d).slice(r+1,r+15)+1==1e14&&(u=Dt(u,h+1,0));break}while(ta(u.d,r+=10,d));return At=!0,Dt(u,h,d)};tt.minus=tt.sub=function(n){var t,e,s,r,o,i,a,u,c,l,h,d,f=this,m=f.constructor;if(n=new m(n),!f.d||!n.d)return!f.s||!n.s?n=new m(NaN):f.d?n.s=-n.s:n=new m(n.d||f.s!==n.s?f:NaN),n;if(f.s!=n.s)return n.s=-n.s,f.plus(n);if(c=f.d,d=n.d,a=m.precision,u=m.rounding,!c[0]||!d[0]){if(d[0])n.s=-n.s;else if(c[0])n=new m(f);else return new m(u===3?-0:0);return At?Dt(n,a,u):n}if(e=fn(n.e/kt),l=fn(f.e/kt),c=c.slice(),o=l-e,o){for(h=o<0,h?(t=c,o=-o,i=d.length):(t=d,e=l,i=c.length),s=Math.max(Math.ceil(a/kt),i)+2,o>s&&(o=s,t.length=1),t.reverse(),s=o;s--;)t.push(0);t.reverse()}else{for(s=c.length,i=d.length,h=s<i,h&&(i=s),s=0;s<i;s++)if(c[s]!=d[s]){h=c[s]<d[s];break}o=0}for(h&&(t=c,c=d,d=t,n.s=-n.s),i=c.length,s=d.length-i;s>0;--s)c[i++]=0;for(s=d.length;s>o;){if(c[--s]<d[s]){for(r=s;r&&c[--r]===0;)c[r]=ws-1;--c[r],c[s]+=ws}c[s]-=d[s]}for(;c[--i]===0;)c.pop();for(;c[0]===0;c.shift())--e;return c[0]?(n.d=c,n.e=ch(c,e),At?Dt(n,a,u):n):new m(u===3?-0:0)};tt.modulo=tt.mod=function(n){var t,e=this,s=e.constructor;return n=new s(n),!e.d||!n.s||n.d&&!n.d[0]?new s(NaN):!n.d||e.d&&!e.d[0]?Dt(new s(e),s.precision,s.rounding):(At=!1,s.modulo==9?(t=ie(e,n.abs(),0,3,1),t.s*=n.s):t=ie(e,n,0,s.modulo,1),t=t.times(n),At=!0,e.minus(t))};tt.naturalExponential=tt.exp=function(){return Nd(this)};tt.naturalLogarithm=tt.ln=function(){return dr(this)};tt.negated=tt.neg=function(){var n=new this.constructor(this);return n.s=-n.s,Dt(n)};tt.plus=tt.add=function(n){var t,e,s,r,o,i,a,u,c,l,h=this,d=h.constructor;if(n=new d(n),!h.d||!n.d)return!h.s||!n.s?n=new d(NaN):h.d||(n=new d(n.d||h.s===n.s?h:NaN)),n;if(h.s!=n.s)return n.s=-n.s,h.minus(n);if(c=h.d,l=n.d,a=d.precision,u=d.rounding,!c[0]||!l[0])return l[0]||(n=new d(h)),At?Dt(n,a,u):n;if(o=fn(h.e/kt),s=fn(n.e/kt),c=c.slice(),r=o-s,r){for(r<0?(e=c,r=-r,i=l.length):(e=l,s=o,i=c.length),o=Math.ceil(a/kt),i=o>i?o+1:i+1,r>i&&(r=i,e.length=1),e.reverse();r--;)e.push(0);e.reverse()}for(i=c.length,r=l.length,i-r<0&&(r=i,e=l,l=c,c=e),t=0;r;)t=(c[--r]=c[r]+l[r]+t)/ws|0,c[r]%=ws;for(t&&(c.unshift(t),++s),i=c.length;c[--i]==0;)c.pop();return n.d=c,n.e=ch(c,s),At?Dt(n,a,u):n};tt.precision=tt.sd=function(n){var t,e=this;if(n!==void 0&&n!==!!n&&n!==1&&n!==0)throw Error(Ir+n);return e.d?(t=nD(e.d),n&&e.e+1>t&&(t=e.e+1)):t=NaN,t};tt.round=function(){var n=this,t=n.constructor;return Dt(new t(n),n.e+1,t.rounding)};tt.sine=tt.sin=function(){var n,t,e=this,s=e.constructor;return e.isFinite()?e.isZero()?new s(e):(n=s.precision,t=s.rounding,s.precision=n+Math.max(e.e,e.sd())+kt,s.rounding=1,e=zq(s,iD(s,e)),s.precision=n,s.rounding=t,Dt(Qs>2?e.neg():e,n,t,!0)):new s(NaN)};tt.squareRoot=tt.sqrt=function(){var n,t,e,s,r,o,i=this,a=i.d,u=i.e,c=i.s,l=i.constructor;if(c!==1||!a||!a[0])return new l(!c||c<0&&(!a||a[0])?NaN:a?i:1/0);for(At=!1,c=Math.sqrt(+i),c==0||c==1/0?(t=Qe(a),(t.length+u)%2==0&&(t+="0"),c=Math.sqrt(t),u=fn((u+1)/2)-(u<0||u%2),c==1/0?t="5e"+u:(t=c.toExponential(),t=t.slice(0,t.indexOf("e")+1)+u),s=new l(t)):s=new l(c.toString()),e=(u=l.precision)+3;;)if(o=s,s=o.plus(ie(i,o,e+2,1)).times(.5),Qe(o.d).slice(0,e)===(t=Qe(s.d)).slice(0,e))if(t=t.slice(e-3,e+1),t=="9999"||!r&&t=="4999"){if(!r&&(Dt(o,u+1,0),o.times(o).eq(i))){s=o;break}e+=4,r=1}else{(!+t||!+t.slice(1)&&t.charAt(0)=="5")&&(Dt(s,u+1,1),n=!s.times(s).eq(i));break}return At=!0,Dt(s,u,l.rounding,n)};tt.tangent=tt.tan=function(){var n,t,e=this,s=e.constructor;return e.isFinite()?e.isZero()?new s(e):(n=s.precision,t=s.rounding,s.precision=n+10,s.rounding=1,e=e.sin(),e.s=1,e=ie(e,new s(1).minus(e.times(e)).sqrt(),n+10,0),s.precision=n,s.rounding=t,Dt(Qs==2||Qs==4?e.neg():e,n,t,!0)):new s(NaN)};tt.times=tt.mul=function(n){var t,e,s,r,o,i,a,u,c,l=this,h=l.constructor,d=l.d,f=(n=new h(n)).d;if(n.s*=l.s,!d||!d[0]||!f||!f[0])return new h(!n.s||d&&!d[0]&&!f||f&&!f[0]&&!d?NaN:!d||!f?n.s/0:n.s*0);for(e=fn(l.e/kt)+fn(n.e/kt),u=d.length,c=f.length,u<c&&(o=d,d=f,f=o,i=u,u=c,c=i),o=[],i=u+c,s=i;s--;)o.push(0);for(s=c;--s>=0;){for(t=0,r=u+s;r>s;)a=o[r]+f[s]*d[r-s-1]+t,o[r--]=a%ws|0,t=a/ws|0;o[r]=(o[r]+t)%ws|0}for(;!o[--i];)o.pop();return t?++e:o.shift(),n.d=o,n.e=ch(o,e),At?Dt(n,h.precision,h.rounding):n};tt.toBinary=function(n,t){return Nm(this,2,n,t)};tt.toDecimalPlaces=tt.toDP=function(n,t){var e=this,s=e.constructor;return e=new s(e),n===void 0?e:(On(n,0,Br),t===void 0?t=s.rounding:On(t,0,8),Dt(e,n+e.e+1,t))};tt.toExponential=function(n,t){var e,s=this,r=s.constructor;return n===void 0?e=js(s,!0):(On(n,0,Br),t===void 0?t=r.rounding:On(t,0,8),s=Dt(new r(s),n+1,t),e=js(s,!0,n+1)),s.isNeg()&&!s.isZero()?"-"+e:e};tt.toFixed=function(n,t){var e,s,r=this,o=r.constructor;return n===void 0?e=js(r):(On(n,0,Br),t===void 0?t=o.rounding:On(t,0,8),s=Dt(new o(r),n+r.e+1,t),e=js(s,!1,n+s.e+1)),r.isNeg()&&!r.isZero()?"-"+e:e};tt.toFraction=function(n){var t,e,s,r,o,i,a,u,c,l,h,d,f=this,m=f.d,p=f.constructor;if(!m)return new p(f);if(c=e=new p(1),s=u=new p(0),t=new p(s),o=t.e=nD(m)-f.e-1,i=o%kt,t.d[0]=ze(10,i<0?kt+i:i),n==null)n=o>0?t:c;else{if(a=new p(n),!a.isInt()||a.lt(c))throw Error(Ir+a);n=a.gt(t)?o>0?t:c:a}for(At=!1,a=new p(Qe(m)),l=p.precision,p.precision=o=m.length*kt*2;h=ie(a,t,0,1,1),r=e.plus(h.times(s)),r.cmp(n)!=1;)e=s,s=r,r=c,c=u.plus(h.times(r)),u=r,r=t,t=a.minus(h.times(r)),a=r;return r=ie(n.minus(e),s,0,1,1),u=u.plus(r.times(c)),e=e.plus(r.times(s)),u.s=c.s=f.s,d=ie(c,s,o,1).minus(f).abs().cmp(ie(u,e,o,1).minus(f).abs())<1?[c,s]:[u,e],p.precision=l,At=!0,d};tt.toHexadecimal=tt.toHex=function(n,t){return Nm(this,16,n,t)};tt.toNearest=function(n,t){var e=this,s=e.constructor;if(e=new s(e),n==null){if(!e.d)return e;n=new s(1),t=s.rounding}else{if(n=new s(n),t===void 0?t=s.rounding:On(t,0,8),!e.d)return n.s?e:n;if(!n.d)return n.s&&(n.s=e.s),n}return n.d[0]?(At=!1,e=ie(e,n,0,t,1).times(n),At=!0,Dt(e)):(n.s=e.s,e=n),e};tt.toNumber=function(){return+this};tt.toOctal=function(n,t){return Nm(this,8,n,t)};tt.toPower=tt.pow=function(n){var t,e,s,r,o,i,a=this,u=a.constructor,c=+(n=new u(n));if(!a.d||!n.d||!a.d[0]||!n.d[0])return new u(ze(+a,c));if(a=new u(a),a.eq(1))return a;if(s=u.precision,o=u.rounding,n.eq(1))return Dt(a,s,o);if(t=fn(n.e/kt),t>=n.d.length-1&&(e=c<0?-c:c)<=Mq)return r=sD(u,a,e,s),n.s<0?new u(1).div(r):Dt(r,s,o);if(i=a.s,i<0){if(t<n.d.length-1)return new u(NaN);if(n.d[t]&1||(i=1),a.e==0&&a.d[0]==1&&a.d.length==1)return a.s=i,a}return e=ze(+a,c),t=e==0||!isFinite(e)?fn(c*(Math.log("0."+Qe(a.d))/Math.LN10+a.e+1)):new u(e+"").e,t>u.maxE+1||t<u.minE-1?new u(t>0?i/0:0):(At=!1,u.rounding=a.s=1,e=Math.min(12,(t+"").length),r=Nd(n.times(dr(a,s+e)),s),r.d&&(r=Dt(r,s+5,1),ta(r.d,s,o)&&(t=s+10,r=Dt(Nd(n.times(dr(a,t+e)),t),t+5,1),+Qe(r.d).slice(s+1,s+15)+1==1e14&&(r=Dt(r,s+1,0)))),r.s=i,At=!0,u.rounding=o,Dt(r,s,o))};tt.toPrecision=function(n,t){var e,s=this,r=s.constructor;return n===void 0?e=js(s,s.e<=r.toExpNeg||s.e>=r.toExpPos):(On(n,1,Br),t===void 0?t=r.rounding:On(t,0,8),s=Dt(new r(s),n,t),e=js(s,n<=s.e||s.e<=r.toExpNeg,n)),s.isNeg()&&!s.isZero()?"-"+e:e};tt.toSignificantDigits=tt.toSD=function(n,t){var e=this,s=e.constructor;return n===void 0?(n=s.precision,t=s.rounding):(On(n,1,Br),t===void 0?t=s.rounding:On(t,0,8)),Dt(new s(e),n,t)};tt.toString=function(){var n=this,t=n.constructor,e=js(n,n.e<=t.toExpNeg||n.e>=t.toExpPos);return n.isNeg()&&!n.isZero()?"-"+e:e};tt.truncated=tt.trunc=function(){return Dt(new this.constructor(this),this.e+1,1)};tt.valueOf=tt.toJSON=function(){var n=this,t=n.constructor,e=js(n,n.e<=t.toExpNeg||n.e>=t.toExpPos);return n.isNeg()?"-"+e:e};function Qe(n){var t,e,s,r=n.length-1,o="",i=n[0];if(r>0){for(o+=i,t=1;t<r;t++)s=n[t]+"",e=kt-s.length,e&&(o+=ur(e)),o+=s;i=n[t],s=i+"",e=kt-s.length,e&&(o+=ur(e))}else if(i===0)return"0";for(;i%10===0;)i/=10;return o+i}function On(n,t,e){if(n!==~~n||n<t||n>e)throw Error(Ir+n)}function ta(n,t,e,s){var r,o,i,a;for(o=n[0];o>=10;o/=10)--t;return--t<0?(t+=kt,r=0):(r=Math.ceil((t+1)/kt),t%=kt),o=ze(10,kt-t),a=n[r]%o|0,s==null?t<3?(t==0?a=a/100|0:t==1&&(a=a/10|0),i=e<4&&a==99999||e>3&&a==49999||a==5e4||a==0):i=(e<4&&a+1==o||e>3&&a+1==o/2)&&(n[r+1]/o/100|0)==ze(10,t-2)-1||(a==o/2||a==0)&&(n[r+1]/o/100|0)==0:t<4?(t==0?a=a/1e3|0:t==1?a=a/100|0:t==2&&(a=a/10|0),i=(s||e<4)&&a==9999||!s&&e>3&&a==4999):i=((s||e<4)&&a+1==o||!s&&e>3&&a+1==o/2)&&(n[r+1]/o/1e3|0)==ze(10,t-3)-1,i}function Vu(n,t,e){for(var s,r=[0],o,i=0,a=n.length;i<a;){for(o=r.length;o--;)r[o]*=t;for(r[0]+=kd.indexOf(n.charAt(i++)),s=0;s<r.length;s++)r[s]>e-1&&(r[s+1]===void 0&&(r[s+1]=0),r[s+1]+=r[s]/e|0,r[s]%=e)}return r.reverse()}function Lq(n,t){var e,s,r;if(t.isZero())return t;s=t.d.length,s<32?(e=Math.ceil(s/3),r=(1/lh(4,e)).toString()):(e=16,r="2.3283064365386962890625e-10"),n.precision+=e,t=ai(n,1,t.times(r),new n(1));for(var o=e;o--;){var i=t.times(t);t=i.times(i).minus(i).times(8).plus(1)}return n.precision-=e,t}var ie=function(){function n(s,r,o){var i,a=0,u=s.length;for(s=s.slice();u--;)i=s[u]*r+a,s[u]=i%o|0,a=i/o|0;return a&&s.unshift(a),s}function t(s,r,o,i){var a,u;if(o!=i)u=o>i?1:-1;else for(a=u=0;a<o;a++)if(s[a]!=r[a]){u=s[a]>r[a]?1:-1;break}return u}function e(s,r,o,i){for(var a=0;o--;)s[o]-=a,a=s[o]<r[o]?1:0,s[o]=a*i+s[o]-r[o];for(;!s[0]&&s.length>1;)s.shift()}return function(s,r,o,i,a,u){var c,l,h,d,f,m,p,x,g,b,w,y,v,C,D,I,$,S,E,N,R=s.constructor,L=s.s==r.s?1:-1,O=s.d,_=r.d;if(!O||!O[0]||!_||!_[0])return new R(!s.s||!r.s||(O?_&&O[0]==_[0]:!_)?NaN:O&&O[0]==0||!_?L*0:L/0);for(u?(f=1,l=s.e-r.e):(u=ws,f=kt,l=fn(s.e/f)-fn(r.e/f)),E=_.length,$=O.length,g=new R(L),b=g.d=[],h=0;_[h]==(O[h]||0);h++);if(_[h]>(O[h]||0)&&l--,o==null?(C=o=R.precision,i=R.rounding):a?C=o+(s.e-r.e)+1:C=o,C<0)b.push(1),m=!0;else{if(C=C/f+2|0,h=0,E==1){for(d=0,_=_[0],C++;(h<$||d)&&C--;h++)D=d*u+(O[h]||0),b[h]=D/_|0,d=D%_|0;m=d||h<$}else{for(d=u/(_[0]+1)|0,d>1&&(_=n(_,d,u),O=n(O,d,u),E=_.length,$=O.length),I=E,w=O.slice(0,E),y=w.length;y<E;)w[y++]=0;N=_.slice(),N.unshift(0),S=_[0],_[1]>=u/2&&++S;do d=0,c=t(_,w,E,y),c<0?(v=w[0],E!=y&&(v=v*u+(w[1]||0)),d=v/S|0,d>1?(d>=u&&(d=u-1),p=n(_,d,u),x=p.length,y=w.length,c=t(p,w,x,y),c==1&&(d--,e(p,E<x?N:_,x,u))):(d==0&&(c=d=1),p=_.slice()),x=p.length,x<y&&p.unshift(0),e(w,p,y,u),c==-1&&(y=w.length,c=t(_,w,E,y),c<1&&(d++,e(w,E<y?N:_,y,u))),y=w.length):c===0&&(d++,w=[0]),b[h++]=d,c&&w[0]?w[y++]=O[I]||0:(w=[O[I]],y=1);while((I++<$||w[0]!==void 0)&&C--);m=w[0]!==void 0}b[0]||b.shift()}if(f==1)g.e=l,ZC=m;else{for(h=1,d=b[0];d>=10;d/=10)h++;g.e=h+l*f-1,Dt(g,a?o+g.e+1:o,i,m)}return g}}();function Dt(n,t,e,s){var r,o,i,a,u,c,l,h,d,f=n.constructor;t:if(t!=null){if(h=n.d,!h)return n;for(r=1,a=h[0];a>=10;a/=10)r++;if(o=t-r,o<0)o+=kt,i=t,l=h[d=0],u=l/ze(10,r-i-1)%10|0;else if(d=Math.ceil((o+1)/kt),a=h.length,d>=a)if(s){for(;a++<=d;)h.push(0);l=u=0,r=1,o%=kt,i=o-kt+1}else break t;else{for(l=a=h[d],r=1;a>=10;a/=10)r++;o%=kt,i=o-kt+r,u=i<0?0:l/ze(10,r-i-1)%10|0}if(s=s||t<0||h[d+1]!==void 0||(i<0?l:l%ze(10,r-i-1)),c=e<4?(u||s)&&(e==0||e==(n.s<0?3:2)):u>5||u==5&&(e==4||s||e==6&&(o>0?i>0?l/ze(10,r-i):0:h[d-1])%10&1||e==(n.s<0?8:7)),t<1||!h[0])return h.length=0,c?(t-=n.e+1,h[0]=ze(10,(kt-t%kt)%kt),n.e=-t||0):h[0]=n.e=0,n;if(o==0?(h.length=d,a=1,d--):(h.length=d+1,a=ze(10,kt-o),h[d]=i>0?(l/ze(10,r-i)%ze(10,i)|0)*a:0),c)for(;;)if(d==0){for(o=1,i=h[0];i>=10;i/=10)o++;for(i=h[0]+=a,a=1;i>=10;i/=10)a++;o!=a&&(n.e++,h[0]==ws&&(h[0]=1));break}else{if(h[d]+=a,h[d]!=ws)break;h[d--]=0,a=1}for(o=h.length;h[--o]===0;)h.pop()}return At&&(n.e>f.maxE?(n.d=null,n.e=NaN):n.e<f.minE&&(n.e=0,n.d=[0])),n}function js(n,t,e){if(!n.isFinite())return oD(n);var s,r=n.e,o=Qe(n.d),i=o.length;return t?(e&&(s=e-i)>0?o=o.charAt(0)+"."+o.slice(1)+ur(s):i>1&&(o=o.charAt(0)+"."+o.slice(1)),o=o+(n.e<0?"e":"e+")+n.e):r<0?(o="0."+ur(-r-1)+o,e&&(s=e-i)>0&&(o+=ur(s))):r>=i?(o+=ur(r+1-i),e&&(s=e-r-1)>0&&(o=o+"."+ur(s))):((s=r+1)<i&&(o=o.slice(0,s)+"."+o.slice(s)),e&&(s=e-i)>0&&(r+1===i&&(o+="."),o+=ur(s))),o}function ch(n,t){var e=n[0];for(t*=kt;e>=10;e/=10)t++;return t}function $c(n,t,e){if(t>Bq)throw At=!0,e&&(n.precision=e),Error(JC);return Dt(new n(Dc),t,1,!0)}function ms(n,t,e){if(t>Ed)throw Error(JC);return Dt(new n(Ic),t,e,!0)}function nD(n){var t=n.length-1,e=t*kt+1;if(t=n[t],t){for(;t%10==0;t/=10)e--;for(t=n[0];t>=10;t/=10)e++}return e}function ur(n){for(var t="";n--;)t+="0";return t}function sD(n,t,e,s){var r,o=new n(1),i=Math.ceil(s/kt+4);for(At=!1;;){if(e%2&&(o=o.times(t),R0(o.d,i)&&(r=!0)),e=fn(e/2),e===0){e=o.d.length-1,r&&o.d[e]===0&&++o.d[e];break}t=t.times(t),R0(t.d,i)}return At=!0,o}function F0(n){return n.d[n.d.length-1]&1}function rD(n,t,e){for(var s,r=new n(t[0]),o=0;++o<t.length;)if(s=new n(t[o]),s.s)r[e](s)&&(r=s);else{r=s;break}return r}function Nd(n,t){var e,s,r,o,i,a,u,c=0,l=0,h=0,d=n.constructor,f=d.rounding,m=d.precision;if(!n.d||!n.d[0]||n.e>17)return new d(n.d?n.d[0]?n.s<0?0:1/0:1:n.s?n.s<0?0:n:0/0);for(t==null?(At=!1,u=m):u=t,a=new d(.03125);n.e>-2;)n=n.times(a),h+=5;for(s=Math.log(ze(2,h))/Math.LN10*2+5|0,u+=s,e=o=i=new d(1),d.precision=u;;){if(o=Dt(o.times(n),u,1),e=e.times(++l),a=i.plus(ie(o,e,u,1)),Qe(a.d).slice(0,u)===Qe(i.d).slice(0,u)){for(r=h;r--;)i=Dt(i.times(i),u,1);if(t==null)if(c<3&&ta(i.d,u-s,f,c))d.precision=u+=10,e=o=a=new d(1),l=0,c++;else return Dt(i,d.precision=m,f,At=!0);else return d.precision=m,i}i=a}}function dr(n,t){var e,s,r,o,i,a,u,c,l,h,d,f=1,m=10,p=n,x=p.d,g=p.constructor,b=g.rounding,w=g.precision;if(p.s<0||!x||!x[0]||!p.e&&x[0]==1&&x.length==1)return new g(x&&!x[0]?-1/0:p.s!=1?NaN:x?0:p);if(t==null?(At=!1,l=w):l=t,g.precision=l+=m,e=Qe(x),s=e.charAt(0),Math.abs(o=p.e)<15e14){for(;s<7&&s!=1||s==1&&e.charAt(1)>3;)p=p.times(n),e=Qe(p.d),s=e.charAt(0),f++;o=p.e,s>1?(p=new g("0."+e),o++):p=new g(s+"."+e.slice(1))}else return c=$c(g,l+2,w).times(o+""),p=dr(new g(s+"."+e.slice(1)),l-m).plus(c),g.precision=w,t==null?Dt(p,w,b,At=!0):p;for(h=p,u=i=p=ie(p.minus(1),p.plus(1),l,1),d=Dt(p.times(p),l,1),r=3;;){if(i=Dt(i.times(d),l,1),c=u.plus(ie(i,new g(r),l,1)),Qe(c.d).slice(0,l)===Qe(u.d).slice(0,l))if(u=u.times(2),o!==0&&(u=u.plus($c(g,l+2,w).times(o+""))),u=ie(u,new g(f),l,1),t==null)if(ta(u.d,l-m,b,a))g.precision=l+=m,c=i=p=ie(h.minus(1),h.plus(1),l,1),d=Dt(p.times(p),l,1),r=a=1;else return Dt(u,g.precision=w,b,At=!0);else return g.precision=w,u;u=c,r+=2}}function oD(n){return String(n.s*n.s/0)}function Ad(n,t){var e,s,r;for((e=t.indexOf("."))>-1&&(t=t.replace(".","")),(s=t.search(/e/i))>0?(e<0&&(e=s),e+=+t.slice(s+1),t=t.substring(0,s)):e<0&&(e=t.length),s=0;t.charCodeAt(s)===48;s++);for(r=t.length;t.charCodeAt(r-1)===48;--r);if(t=t.slice(s,r),t){if(r-=s,n.e=e=e-s-1,n.d=[],s=(e+1)%kt,e<0&&(s+=kt),s<r){for(s&&n.d.push(+t.slice(0,s)),r-=kt;s<r;)n.d.push(+t.slice(s,s+=kt));t=t.slice(s),s=kt-t.length}else s-=r;for(;s--;)t+="0";n.d.push(+t),At&&(n.e>n.constructor.maxE?(n.d=null,n.e=NaN):n.e<n.constructor.minE&&(n.e=0,n.d=[0]))}else n.e=0,n.d=[0];return n}function Pq(n,t){var e,s,r,o,i,a,u,c,l;if(t.indexOf("_")>-1){if(t=t.replace(/(\d)_(?=\d)/g,"$1"),eD.test(t))return Ad(n,t)}else if(t==="Infinity"||t==="NaN")return+t||(n.s=NaN),n.e=NaN,n.d=null,n;if(_q.test(t))e=16,t=t.toLowerCase();else if(Rq.test(t))e=2;else if(Oq.test(t))e=8;else throw Error(Ir+t);for(o=t.search(/p/i),o>0?(u=+t.slice(o+1),t=t.substring(2,o)):t=t.slice(2),o=t.indexOf("."),i=o>=0,s=n.constructor,i&&(t=t.replace(".",""),a=t.length,o=a-o,r=sD(s,new s(e),o,o*2)),c=Vu(t,e,ws),l=c.length-1,o=l;c[o]===0;--o)c.pop();return o<0?new s(n.s*0):(n.e=ch(c,l),n.d=c,At=!1,i&&(n=ie(n,r,a*4)),u&&(n=n.times(Math.abs(u)<54?ze(2,u):ho.pow(2,u))),At=!0,n)}function zq(n,t){var e,s=t.d.length;if(s<3)return t.isZero()?t:ai(n,2,t,t);e=1.4*Math.sqrt(s),e=e>16?16:e|0,t=t.times(1/lh(5,e)),t=ai(n,2,t,t);for(var r,o=new n(5),i=new n(16),a=new n(20);e--;)r=t.times(t),t=t.times(o.plus(r.times(i.times(r).minus(a))));return t}function ai(n,t,e,s,r){var o,i,a,u,c=n.precision,l=Math.ceil(c/kt);for(At=!1,u=e.times(e),a=new n(s);;){if(i=ie(a.times(u),new n(t++*t++),c,1),a=r?s.plus(i):s.minus(i),s=ie(i.times(u),new n(t++*t++),c,1),i=a.plus(s),i.d[l]!==void 0){for(o=l;i.d[o]===a.d[o]&&o--;);if(o==-1)break}o=a,a=s,s=i,i=o}return At=!0,i.d.length=l+1,i}function lh(n,t){for(var e=n;--t;)e*=n;return e}function iD(n,t){var e,s=t.s<0,r=ms(n,n.precision,1),o=r.times(.5);if(t=t.abs(),t.lte(o))return Qs=s?4:1,t;if(e=t.divToInt(r),e.isZero())Qs=s?3:2;else{if(t=t.minus(e.times(r)),t.lte(o))return Qs=F0(e)?s?2:3:s?4:1,t;Qs=F0(e)?s?1:4:s?3:2}return t.minus(r).abs()}function Nm(n,t,e,s){var r,o,i,a,u,c,l,h,d,f=n.constructor,m=e!==void 0;if(m?(On(e,1,Br),s===void 0?s=f.rounding:On(s,0,8)):(e=f.precision,s=f.rounding),!n.isFinite())l=oD(n);else{for(l=js(n),i=l.indexOf("."),m?(r=2,t==16?e=e*4-3:t==8&&(e=e*3-2)):r=t,i>=0&&(l=l.replace(".",""),d=new f(1),d.e=l.length-i,d.d=Vu(js(d),10,r),d.e=d.d.length),h=Vu(l,10,r),o=u=h.length;h[--u]==0;)h.pop();if(!h[0])l=m?"0p+0":"0";else{if(i<0?o--:(n=new f(n),n.d=h,n.e=o,n=ie(n,d,e,s,0,r),h=n.d,o=n.e,c=ZC),i=h[e],a=r/2,c=c||h[e+1]!==void 0,c=s<4?(i!==void 0||c)&&(s===0||s===(n.s<0?3:2)):i>a||i===a&&(s===4||c||s===6&&h[e-1]&1||s===(n.s<0?8:7)),h.length=e,c)for(;++h[--e]>r-1;)h[e]=0,e||(++o,h.unshift(1));for(u=h.length;!h[u-1];--u);for(i=0,l="";i<u;i++)l+=kd.charAt(h[i]);if(m){if(u>1)if(t==16||t==8){for(i=t==16?4:3,--u;u%i;u++)l+="0";for(h=Vu(l,r,t),u=h.length;!h[u-1];--u);for(i=1,l="1.";i<u;i++)l+=kd.charAt(h[i])}else l=l.charAt(0)+"."+l.slice(1);l=l+(o<0?"p":"p+")+o}else if(o<0){for(;++o;)l="0"+l;l="0."+l}else if(++o>u)for(o-=u;o--;)l+="0";else o<u&&(l=l.slice(0,o)+"."+l.slice(o))}l=(t==16?"0x":t==2?"0b":t==8?"0o":"")+l}return n.s<0?"-"+l:l}function R0(n,t){if(n.length>t)return n.length=t,!0}function Vq(n){return new this(n).abs()}function Wq(n){return new this(n).acos()}function Uq(n){return new this(n).acosh()}function Gq(n,t){return new this(n).plus(t)}function Hq(n){return new this(n).asin()}function qq(n){return new this(n).asinh()}function jq(n){return new this(n).atan()}function Kq(n){return new this(n).atanh()}function Xq(n,t){n=new this(n),t=new this(t);var e,s=this.precision,r=this.rounding,o=s+4;return!n.s||!t.s?e=new this(NaN):!n.d&&!t.d?(e=ms(this,o,1).times(t.s>0?.25:.75),e.s=n.s):!t.d||n.isZero()?(e=t.s<0?ms(this,s,r):new this(0),e.s=n.s):!n.d||t.isZero()?(e=ms(this,o,1).times(.5),e.s=n.s):t.s<0?(this.precision=o,this.rounding=1,e=this.atan(ie(n,t,o,1)),t=ms(this,o,1),this.precision=s,this.rounding=r,e=n.s<0?e.minus(t):e.plus(t)):e=this.atan(ie(n,t,o,1)),e}function Yq(n){return new this(n).cbrt()}function Zq(n){return Dt(n=new this(n),n.e+1,2)}function Jq(n,t,e){return new this(n).clamp(t,e)}function Qq(n){if(!n||typeof n!="object")throw Error(uh+"Object expected");var t,e,s,r=n.defaults===!0,o=["precision",1,Br,"rounding",0,8,"toExpNeg",-Bo,0,"toExpPos",0,Bo,"maxE",0,Bo,"minE",-Bo,0,"modulo",0,9];for(t=0;t<o.length;t+=3)if(e=o[t],r&&(this[e]=Sd[e]),(s=n[e])!==void 0)if(fn(s)===s&&s>=o[t+1]&&s<=o[t+2])this[e]=s;else throw Error(Ir+e+": "+s);if(e="crypto",r&&(this[e]=Sd[e]),(s=n[e])!==void 0)if(s===!0||s===!1||s===0||s===1)if(s)if(typeof crypto<"u"&&crypto&&(crypto.getRandomValues||crypto.randomBytes))this[e]=!0;else throw Error(QC);else this[e]=!1;else throw Error(Ir+e+": "+s);return this}function tj(n){return new this(n).cos()}function ej(n){return new this(n).cosh()}function aD(n){var t,e,s;function r(o){var i,a,u,c=this;if(!(c instanceof r))return new r(o);if(c.constructor=r,_0(o)){c.s=o.s,At?!o.d||o.e>r.maxE?(c.e=NaN,c.d=null):o.e<r.minE?(c.e=0,c.d=[0]):(c.e=o.e,c.d=o.d.slice()):(c.e=o.e,c.d=o.d?o.d.slice():o.d);return}if(u=typeof o,u==="number"){if(o===0){c.s=1/o<0?-1:1,c.e=0,c.d=[0];return}if(o<0?(o=-o,c.s=-1):c.s=1,o===~~o&&o<1e7){for(i=0,a=o;a>=10;a/=10)i++;At?i>r.maxE?(c.e=NaN,c.d=null):i<r.minE?(c.e=0,c.d=[0]):(c.e=i,c.d=[o]):(c.e=i,c.d=[o]);return}else if(o*0!==0){o||(c.s=NaN),c.e=NaN,c.d=null;return}return Ad(c,o.toString())}else if(u!=="string")throw Error(Ir+o);return(a=o.charCodeAt(0))===45?(o=o.slice(1),c.s=-1):(a===43&&(o=o.slice(1)),c.s=1),eD.test(o)?Ad(c,o):Pq(c,o)}if(r.prototype=tt,r.ROUND_UP=0,r.ROUND_DOWN=1,r.ROUND_CEIL=2,r.ROUND_FLOOR=3,r.ROUND_HALF_UP=4,r.ROUND_HALF_DOWN=5,r.ROUND_HALF_EVEN=6,r.ROUND_HALF_CEIL=7,r.ROUND_HALF_FLOOR=8,r.EUCLID=9,r.config=r.set=Qq,r.clone=aD,r.isDecimal=_0,r.abs=Vq,r.acos=Wq,r.acosh=Uq,r.add=Gq,r.asin=Hq,r.asinh=qq,r.atan=jq,r.atanh=Kq,r.atan2=Xq,r.cbrt=Yq,r.ceil=Zq,r.clamp=Jq,r.cos=tj,r.cosh=ej,r.div=nj,r.exp=sj,r.floor=rj,r.hypot=oj,r.ln=ij,r.log=aj,r.log10=cj,r.log2=uj,r.max=lj,r.min=hj,r.mod=dj,r.mul=fj,r.pow=pj,r.random=mj,r.round=gj,r.sign=xj,r.sin=bj,r.sinh=wj,r.sqrt=yj,r.sub=vj,r.sum=Cj,r.tan=Dj,r.tanh=Ij,r.trunc=$j,n===void 0&&(n={}),n&&n.defaults!==!0)for(s=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],t=0;t<s.length;)n.hasOwnProperty(e=s[t++])||(n[e]=this[e]);return r.config(n),r}function nj(n,t){return new this(n).div(t)}function sj(n){return new this(n).exp()}function rj(n){return Dt(n=new this(n),n.e+1,3)}function oj(){var n,t,e=new this(0);for(At=!1,n=0;n<arguments.length;)if(t=new this(arguments[n++]),t.d)e.d&&(e=e.plus(t.times(t)));else{if(t.s)return At=!0,new this(1/0);e=t}return At=!0,e.sqrt()}function _0(n){return n instanceof ho||n&&n.toStringTag===tD||!1}function ij(n){return new this(n).ln()}function aj(n,t){return new this(n).log(t)}function uj(n){return new this(n).log(2)}function cj(n){return new this(n).log(10)}function lj(){return rD(this,arguments,"lt")}function hj(){return rD(this,arguments,"gt")}function dj(n,t){return new this(n).mod(t)}function fj(n,t){return new this(n).mul(t)}function pj(n,t){return new this(n).pow(t)}function mj(n){var t,e,s,r,o=0,i=new this(1),a=[];if(n===void 0?n=this.precision:On(n,1,Br),s=Math.ceil(n/kt),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(s));o<s;)r=t[o],r>=429e7?t[o]=crypto.getRandomValues(new Uint32Array(1))[0]:a[o++]=r%1e7;else if(crypto.randomBytes){for(t=crypto.randomBytes(s*=4);o<s;)r=t[o]+(t[o+1]<<8)+(t[o+2]<<16)+((t[o+3]&127)<<24),r>=214e7?crypto.randomBytes(4).copy(t,o):(a.push(r%1e7),o+=4);o=s/4}else throw Error(QC);else for(;o<s;)a[o++]=Math.random()*1e7|0;for(s=a[--o],n%=kt,s&&n&&(r=ze(10,kt-n),a[o]=(s/r|0)*r);a[o]===0;o--)a.pop();if(o<0)e=0,a=[0];else{for(e=-1;a[0]===0;e-=kt)a.shift();for(s=1,r=a[0];r>=10;r/=10)s++;s<kt&&(e-=kt-s)}return i.e=e,i.d=a,i}function gj(n){return Dt(n=new this(n),n.e+1,this.rounding)}function xj(n){return n=new this(n),n.d?n.d[0]?n.s:0*n.s:n.s||NaN}function bj(n){return new this(n).sin()}function wj(n){return new this(n).sinh()}function yj(n){return new this(n).sqrt()}function vj(n,t){return new this(n).sub(t)}function Cj(){var n=0,t=arguments,e=new this(t[n]);for(At=!1;e.s&&++n<t.length;)e=e.plus(t[n]);return At=!0,Dt(e,this.precision,this.rounding)}function Dj(n){return new this(n).tan()}function Ij(n){return new this(n).tanh()}function $j(n){return Dt(n=new this(n),n.e+1,1)}tt[Symbol.for("nodejs.util.inspect.custom")]=tt.toString;tt[Symbol.toStringTag]="Decimal";var ho=tt.constructor=aD(Sd);Dc=new ho(Dc);Ic=new ho(Ic);var kj="BigNumber",Sj=["?on","config"],Ej=He(kj,Sj,n=>{var{on:t,config:e}=n,s=ho.clone({precision:e.precision,modulo:ho.EUCLID});return s.prototype=Object.create(s.prototype),s.prototype.type="BigNumber",s.prototype.isBigNumber=!0,s.prototype.toJSON=function(){return{mathjs:"BigNumber",value:this.toString()}},s.fromJSON=function(r){return new s(r.value)},t&&t("config",function(r,o){r.precision!==o.precision&&s.config({precision:r.precision})}),s},{isClass:!0}),uD={exports:{}};/**
 * @license Complex.js v2.1.1 12/05/2020
 *
 * Copyright (c) 2020, Robert Eisele (robert@xarg.org)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 **/(function(n,t){(function(e){var s=Math.cosh||function(h){return Math.abs(h)<1e-9?1-h:(Math.exp(h)+Math.exp(-h))*.5},r=Math.sinh||function(h){return Math.abs(h)<1e-9?h:(Math.exp(h)-Math.exp(-h))*.5},o=function(h){var d=Math.PI/4;if(-d>h||h>d)return Math.cos(h)-1;var f=h*h;return f*(f*(f*(f*(f*(f*(f*(f/20922789888e3-1/87178291200)+1/479001600)-1/3628800)+1/40320)-1/720)+1/24)-1/2)},i=function(h,d){var f=Math.abs(h),m=Math.abs(d);return f<3e3&&m<3e3?Math.sqrt(f*f+m*m):(f<m?(f=m,m=h/d):m=d/h,f*Math.sqrt(1+m*m))},a=function(){throw SyntaxError("Invalid Param")};function u(h,d){var f=Math.abs(h),m=Math.abs(d);return h===0?Math.log(m):d===0?Math.log(f):f<3e3&&m<3e3?Math.log(h*h+d*d)*.5:(h=h/2,d=d/2,.5*Math.log(h*h+d*d)+Math.LN2)}var c=function(h,d){var f={re:0,im:0};if(h==null)f.re=f.im=0;else if(d!==void 0)f.re=h,f.im=d;else switch(typeof h){case"object":if("im"in h&&"re"in h)f.re=h.re,f.im=h.im;else if("abs"in h&&"arg"in h){if(!Number.isFinite(h.abs)&&Number.isFinite(h.arg))return l.INFINITY;f.re=h.abs*Math.cos(h.arg),f.im=h.abs*Math.sin(h.arg)}else if("r"in h&&"phi"in h){if(!Number.isFinite(h.r)&&Number.isFinite(h.phi))return l.INFINITY;f.re=h.r*Math.cos(h.phi),f.im=h.r*Math.sin(h.phi)}else h.length===2?(f.re=h[0],f.im=h[1]):a();break;case"string":f.im=f.re=0;var m=h.match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g),p=1,x=0;m===null&&a();for(var g=0;g<m.length;g++){var b=m[g];b===" "||b==="	"||b===`
`||(b==="+"?p++:b==="-"?x++:b==="i"||b==="I"?(p+x===0&&a(),m[g+1]!==" "&&!isNaN(m[g+1])?(f.im+=parseFloat((x%2?"-":"")+m[g+1]),g++):f.im+=parseFloat((x%2?"-":"")+"1"),p=x=0):((p+x===0||isNaN(b))&&a(),m[g+1]==="i"||m[g+1]==="I"?(f.im+=parseFloat((x%2?"-":"")+b),g++):f.re+=parseFloat((x%2?"-":"")+b),p=x=0))}p+x>0&&a();break;case"number":f.im=0,f.re=h;break;default:a()}return isNaN(f.re)||isNaN(f.im),f};function l(h,d){if(!(this instanceof l))return new l(h,d);var f=c(h,d);this.re=f.re,this.im=f.im}l.prototype={re:0,im:0,sign:function(){var h=this.abs();return new l(this.re/h,this.im/h)},add:function(h,d){var f=new l(h,d);return this.isInfinite()&&f.isInfinite()?l.NAN:this.isInfinite()||f.isInfinite()?l.INFINITY:new l(this.re+f.re,this.im+f.im)},sub:function(h,d){var f=new l(h,d);return this.isInfinite()&&f.isInfinite()?l.NAN:this.isInfinite()||f.isInfinite()?l.INFINITY:new l(this.re-f.re,this.im-f.im)},mul:function(h,d){var f=new l(h,d);return this.isInfinite()&&f.isZero()||this.isZero()&&f.isInfinite()?l.NAN:this.isInfinite()||f.isInfinite()?l.INFINITY:f.im===0&&this.im===0?new l(this.re*f.re,0):new l(this.re*f.re-this.im*f.im,this.re*f.im+this.im*f.re)},div:function(h,d){var f=new l(h,d);if(this.isZero()&&f.isZero()||this.isInfinite()&&f.isInfinite())return l.NAN;if(this.isInfinite()||f.isZero())return l.INFINITY;if(this.isZero()||f.isInfinite())return l.ZERO;h=this.re,d=this.im;var m=f.re,p=f.im,x,g;return p===0?new l(h/m,d/m):Math.abs(m)<Math.abs(p)?(g=m/p,x=m*g+p,new l((h*g+d)/x,(d*g-h)/x)):(g=p/m,x=p*g+m,new l((h+d*g)/x,(d-h*g)/x))},pow:function(h,d){var f=new l(h,d);if(h=this.re,d=this.im,f.isZero())return l.ONE;if(f.im===0){if(d===0&&h>0)return new l(Math.pow(h,f.re),0);if(h===0)switch((f.re%4+4)%4){case 0:return new l(Math.pow(d,f.re),0);case 1:return new l(0,Math.pow(d,f.re));case 2:return new l(-Math.pow(d,f.re),0);case 3:return new l(0,-Math.pow(d,f.re))}}if(h===0&&d===0&&f.re>0&&f.im>=0)return l.ZERO;var m=Math.atan2(d,h),p=u(h,d);return h=Math.exp(f.re*p-f.im*m),d=f.im*p+f.re*m,new l(h*Math.cos(d),h*Math.sin(d))},sqrt:function(){var h=this.re,d=this.im,f=this.abs(),m,p;if(h>=0){if(d===0)return new l(Math.sqrt(h),0);m=.5*Math.sqrt(2*(f+h))}else m=Math.abs(d)/Math.sqrt(2*(f-h));return h<=0?p=.5*Math.sqrt(2*(f-h)):p=Math.abs(d)/Math.sqrt(2*(f+h)),new l(m,d<0?-p:p)},exp:function(){var h=Math.exp(this.re);return this.im,new l(h*Math.cos(this.im),h*Math.sin(this.im))},expm1:function(){var h=this.re,d=this.im;return new l(Math.expm1(h)*Math.cos(d)+o(d),Math.exp(h)*Math.sin(d))},log:function(){var h=this.re,d=this.im;return new l(u(h,d),Math.atan2(d,h))},abs:function(){return i(this.re,this.im)},arg:function(){return Math.atan2(this.im,this.re)},sin:function(){var h=this.re,d=this.im;return new l(Math.sin(h)*s(d),Math.cos(h)*r(d))},cos:function(){var h=this.re,d=this.im;return new l(Math.cos(h)*s(d),-Math.sin(h)*r(d))},tan:function(){var h=2*this.re,d=2*this.im,f=Math.cos(h)+s(d);return new l(Math.sin(h)/f,r(d)/f)},cot:function(){var h=2*this.re,d=2*this.im,f=Math.cos(h)-s(d);return new l(-Math.sin(h)/f,r(d)/f)},sec:function(){var h=this.re,d=this.im,f=.5*s(2*d)+.5*Math.cos(2*h);return new l(Math.cos(h)*s(d)/f,Math.sin(h)*r(d)/f)},csc:function(){var h=this.re,d=this.im,f=.5*s(2*d)-.5*Math.cos(2*h);return new l(Math.sin(h)*s(d)/f,-Math.cos(h)*r(d)/f)},asin:function(){var h=this.re,d=this.im,f=new l(d*d-h*h+1,-2*h*d).sqrt(),m=new l(f.re-d,f.im+h).log();return new l(m.im,-m.re)},acos:function(){var h=this.re,d=this.im,f=new l(d*d-h*h+1,-2*h*d).sqrt(),m=new l(f.re-d,f.im+h).log();return new l(Math.PI/2-m.im,m.re)},atan:function(){var h=this.re,d=this.im;if(h===0){if(d===1)return new l(0,1/0);if(d===-1)return new l(0,-1/0)}var f=h*h+(1-d)*(1-d),m=new l((1-d*d-h*h)/f,-2*h/f).log();return new l(-.5*m.im,.5*m.re)},acot:function(){var h=this.re,d=this.im;if(d===0)return new l(Math.atan2(1,h),0);var f=h*h+d*d;return f!==0?new l(h/f,-d/f).atan():new l(h!==0?h/0:0,d!==0?-d/0:0).atan()},asec:function(){var h=this.re,d=this.im;if(h===0&&d===0)return new l(0,1/0);var f=h*h+d*d;return f!==0?new l(h/f,-d/f).acos():new l(h!==0?h/0:0,d!==0?-d/0:0).acos()},acsc:function(){var h=this.re,d=this.im;if(h===0&&d===0)return new l(Math.PI/2,1/0);var f=h*h+d*d;return f!==0?new l(h/f,-d/f).asin():new l(h!==0?h/0:0,d!==0?-d/0:0).asin()},sinh:function(){var h=this.re,d=this.im;return new l(r(h)*Math.cos(d),s(h)*Math.sin(d))},cosh:function(){var h=this.re,d=this.im;return new l(s(h)*Math.cos(d),r(h)*Math.sin(d))},tanh:function(){var h=2*this.re,d=2*this.im,f=s(h)+Math.cos(d);return new l(r(h)/f,Math.sin(d)/f)},coth:function(){var h=2*this.re,d=2*this.im,f=s(h)-Math.cos(d);return new l(r(h)/f,-Math.sin(d)/f)},csch:function(){var h=this.re,d=this.im,f=Math.cos(2*d)-s(2*h);return new l(-2*r(h)*Math.cos(d)/f,2*s(h)*Math.sin(d)/f)},sech:function(){var h=this.re,d=this.im,f=Math.cos(2*d)+s(2*h);return new l(2*s(h)*Math.cos(d)/f,-2*r(h)*Math.sin(d)/f)},asinh:function(){var h=this.im;this.im=-this.re,this.re=h;var d=this.asin();return this.re=-this.im,this.im=h,h=d.re,d.re=-d.im,d.im=h,d},acosh:function(){var h=this.acos();if(h.im<=0){var d=h.re;h.re=-h.im,h.im=d}else{var d=h.im;h.im=-h.re,h.re=d}return h},atanh:function(){var h=this.re,d=this.im,f=h>1&&d===0,m=1-h,p=1+h,x=m*m+d*d,g=x!==0?new l((p*m-d*d)/x,(d*m+p*d)/x):new l(h!==-1?h/0:0,d!==0?d/0:0),b=g.re;return g.re=u(g.re,g.im)/2,g.im=Math.atan2(g.im,b)/2,f&&(g.im=-g.im),g},acoth:function(){var h=this.re,d=this.im;if(h===0&&d===0)return new l(0,Math.PI/2);var f=h*h+d*d;return f!==0?new l(h/f,-d/f).atanh():new l(h!==0?h/0:0,d!==0?-d/0:0).atanh()},acsch:function(){var h=this.re,d=this.im;if(d===0)return new l(h!==0?Math.log(h+Math.sqrt(h*h+1)):1/0,0);var f=h*h+d*d;return f!==0?new l(h/f,-d/f).asinh():new l(h!==0?h/0:0,d!==0?-d/0:0).asinh()},asech:function(){var h=this.re,d=this.im;if(this.isZero())return l.INFINITY;var f=h*h+d*d;return f!==0?new l(h/f,-d/f).acosh():new l(h!==0?h/0:0,d!==0?-d/0:0).acosh()},inverse:function(){if(this.isZero())return l.INFINITY;if(this.isInfinite())return l.ZERO;var h=this.re,d=this.im,f=h*h+d*d;return new l(h/f,-d/f)},conjugate:function(){return new l(this.re,-this.im)},neg:function(){return new l(-this.re,-this.im)},ceil:function(h){return h=Math.pow(10,h||0),new l(Math.ceil(this.re*h)/h,Math.ceil(this.im*h)/h)},floor:function(h){return h=Math.pow(10,h||0),new l(Math.floor(this.re*h)/h,Math.floor(this.im*h)/h)},round:function(h){return h=Math.pow(10,h||0),new l(Math.round(this.re*h)/h,Math.round(this.im*h)/h)},equals:function(h,d){var f=new l(h,d);return Math.abs(f.re-this.re)<=l.EPSILON&&Math.abs(f.im-this.im)<=l.EPSILON},clone:function(){return new l(this.re,this.im)},toString:function(){var h=this.re,d=this.im,f="";return this.isNaN()?"NaN":this.isInfinite()?"Infinity":(Math.abs(h)<l.EPSILON&&(h=0),Math.abs(d)<l.EPSILON&&(d=0),d===0?f+h:(h!==0?(f+=h,f+=" ",d<0?(d=-d,f+="-"):f+="+",f+=" "):d<0&&(d=-d,f+="-"),d!==1&&(f+=d),f+"i"))},toVector:function(){return[this.re,this.im]},valueOf:function(){return this.im===0?this.re:null},isNaN:function(){return isNaN(this.re)||isNaN(this.im)},isZero:function(){return this.im===0&&this.re===0},isFinite:function(){return isFinite(this.re)&&isFinite(this.im)},isInfinite:function(){return!(this.isNaN()||this.isFinite())}},l.ZERO=new l(0,0),l.ONE=new l(1,0),l.I=new l(0,1),l.PI=new l(Math.PI,0),l.E=new l(Math.E,0),l.INFINITY=new l(1/0,1/0),l.NAN=new l(NaN,NaN),l.EPSILON=1e-15,Object.defineProperty(l,"__esModule",{value:!0}),l.default=l,l.Complex=l,n.exports=l})()})(uD);var Nj=uD.exports;const Ze=Nl(Nj);var Aj="Complex",Tj=[],Fj=He(Aj,Tj,()=>(Object.defineProperty(Ze,"name",{value:"Complex"}),Ze.prototype.constructor=Ze,Ze.prototype.type="Complex",Ze.prototype.isComplex=!0,Ze.prototype.toJSON=function(){return{mathjs:"Complex",re:this.re,im:this.im}},Ze.prototype.toPolar=function(){return{r:this.abs(),phi:this.arg()}},Ze.prototype.format=function(n){var t="",e=this.im,s=this.re,r=Dd(this.re,n),o=Dd(this.im,n),i=we(n)?n:n?n.precision:null;if(i!==null){var a=Math.pow(10,-i);Math.abs(s/e)<a&&(s=0),Math.abs(e/s)<a&&(e=0)}return e===0?t=r:s===0?e===1?t="i":e===-1?t="-i":t=o+"i":e<0?e===-1?t=r+" - i":t=r+" - "+o.substring(1)+"i":e===1?t=r+" + i":t=r+" + "+o+"i",t},Ze.fromPolar=function(n){switch(arguments.length){case 1:{var t=arguments[0];if(typeof t=="object")return Ze(t);throw new TypeError("Input has to be an object with r and phi keys.")}case 2:{var e=arguments[0],s=arguments[1];if(we(e)){if(OC(s)&&s.hasBase("ANGLE")&&(s=s.toNumber("rad")),we(s))return new Ze({r:e,phi:s});throw new TypeError("Phi is not a number nor an angle unit.")}else throw new TypeError("Radius r is not a number.")}default:throw new SyntaxError("Wrong number of arguments in function fromPolar")}},Ze.prototype.valueOf=Ze.prototype.toString,Ze.fromJSON=function(n){return new Ze(n)},Ze.compare=function(n,t){return n.re>t.re?1:n.re<t.re?-1:n.im>t.im?1:n.im<t.im?-1:0},Ze),{isClass:!0}),cD={exports:{}};/**
 * @license Fraction.js v4.3.0 20/08/2023
 * https://www.xarg.org/2014/03/rational-numbers-in-javascript/
 *
 * Copyright (c) 2023, Robert Eisele (robert@raw.org)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 **/(function(n,t){(function(e){var s=2e3,r={s:1,n:0,d:1};function o(g,b){if(isNaN(g=parseInt(g,10)))throw p();return g*b}function i(g,b){if(b===0)throw m();var w=Object.create(f.prototype);w.s=g<0?-1:1,g=g<0?-g:g;var y=d(g,b);return w.n=g/y,w.d=b/y,w}function a(g){for(var b={},w=g,y=2,v=4;v<=w;){for(;w%y===0;)w/=y,b[y]=(b[y]||0)+1;v+=1+2*y++}return w!==g?w>1&&(b[w]=(b[w]||0)+1):b[g]=(b[g]||0)+1,b}var u=function(g,b){var w=0,y=1,v=1,C=0,D=0,I=0,$=1,S=1,E=0,N=1,R=1,L=1,O=1e7,_;if(g!=null)if(b!==void 0){if(w=g,y=b,v=w*y,w%1!==0||y%1!==0)throw x()}else switch(typeof g){case"object":{if("d"in g&&"n"in g)w=g.n,y=g.d,"s"in g&&(w*=g.s);else if(0 in g)w=g[0],1 in g&&(y=g[1]);else throw p();v=w*y;break}case"number":{if(g<0&&(v=g,g=-g),g%1===0)w=g;else if(g>0){for(g>=1&&(S=Math.pow(10,Math.floor(1+Math.log(g)/Math.LN10)),g/=S);N<=O&&L<=O;)if(_=(E+R)/(N+L),g===_){N+L<=O?(w=E+R,y=N+L):L>N?(w=R,y=L):(w=E,y=N);break}else g>_?(E+=R,N+=L):(R+=E,L+=N),N>O?(w=R,y=L):(w=E,y=N);w*=S}else(isNaN(g)||isNaN(b))&&(y=w=NaN);break}case"string":{if(N=g.match(/\d+|./g),N===null)throw p();if(N[E]==="-"?(v=-1,E++):N[E]==="+"&&E++,N.length===E+1?D=o(N[E++],v):N[E+1]==="."||N[E]==="."?(N[E]!=="."&&(C=o(N[E++],v)),E++,(E+1===N.length||N[E+1]==="("&&N[E+3]===")"||N[E+1]==="'"&&N[E+3]==="'")&&(D=o(N[E],v),$=Math.pow(10,N[E].length),E++),(N[E]==="("&&N[E+2]===")"||N[E]==="'"&&N[E+2]==="'")&&(I=o(N[E+1],v),S=Math.pow(10,N[E+1].length)-1,E+=3)):N[E+1]==="/"||N[E+1]===":"?(D=o(N[E],v),$=o(N[E+2],1),E+=3):N[E+3]==="/"&&N[E+1]===" "&&(C=o(N[E],v),D=o(N[E+2],v),$=o(N[E+4],1),E+=5),N.length<=E){y=$*S,v=w=I+y*C+S*D;break}}default:throw p()}if(y===0)throw m();r.s=v<0?-1:1,r.n=Math.abs(w),r.d=Math.abs(y)};function c(g,b,w){for(var y=1;b>0;g=g*g%w,b>>=1)b&1&&(y=y*g%w);return y}function l(g,b){for(;b%2===0;b/=2);for(;b%5===0;b/=5);if(b===1)return 0;for(var w=10%b,y=1;w!==1;y++)if(w=w*10%b,y>s)return 0;return y}function h(g,b,w){for(var y=1,v=c(10,w,b),C=0;C<300;C++){if(y===v)return C;y=y*10%b,v=v*10%b}return 0}function d(g,b){if(!g)return b;if(!b)return g;for(;;){if(g%=b,!g)return b;if(b%=g,!b)return g}}function f(g,b){if(u(g,b),this instanceof f)g=d(r.d,r.n),this.s=r.s,this.n=r.n/g,this.d=r.d/g;else return i(r.s*r.n,r.d)}var m=function(){return new Error("Division by Zero")},p=function(){return new Error("Invalid argument")},x=function(){return new Error("Parameters must be integer")};f.prototype={s:1,n:0,d:1,abs:function(){return i(this.n,this.d)},neg:function(){return i(-this.s*this.n,this.d)},add:function(g,b){return u(g,b),i(this.s*this.n*r.d+r.s*this.d*r.n,this.d*r.d)},sub:function(g,b){return u(g,b),i(this.s*this.n*r.d-r.s*this.d*r.n,this.d*r.d)},mul:function(g,b){return u(g,b),i(this.s*r.s*this.n*r.n,this.d*r.d)},div:function(g,b){return u(g,b),i(this.s*r.s*this.n*r.d,this.d*r.n)},clone:function(){return i(this.s*this.n,this.d)},mod:function(g,b){if(isNaN(this.n)||isNaN(this.d))return new f(NaN);if(g===void 0)return i(this.s*this.n%this.d,1);if(u(g,b),r.n===0&&this.d===0)throw m();return i(this.s*(r.d*this.n)%(r.n*this.d),r.d*this.d)},gcd:function(g,b){return u(g,b),i(d(r.n,this.n)*d(r.d,this.d),r.d*this.d)},lcm:function(g,b){return u(g,b),r.n===0&&this.n===0?i(0,1):i(r.n*this.n,d(r.n,this.n)*d(r.d,this.d))},ceil:function(g){return g=Math.pow(10,g||0),isNaN(this.n)||isNaN(this.d)?new f(NaN):i(Math.ceil(g*this.s*this.n/this.d),g)},floor:function(g){return g=Math.pow(10,g||0),isNaN(this.n)||isNaN(this.d)?new f(NaN):i(Math.floor(g*this.s*this.n/this.d),g)},round:function(g){return g=Math.pow(10,g||0),isNaN(this.n)||isNaN(this.d)?new f(NaN):i(Math.round(g*this.s*this.n/this.d),g)},inverse:function(){return i(this.s*this.d,this.n)},pow:function(g,b){if(u(g,b),r.d===1)return r.s<0?i(Math.pow(this.s*this.d,r.n),Math.pow(this.n,r.n)):i(Math.pow(this.s*this.n,r.n),Math.pow(this.d,r.n));if(this.s<0)return null;var w=a(this.n),y=a(this.d),v=1,C=1;for(var D in w)if(D!=="1"){if(D==="0"){v=0;break}if(w[D]*=r.n,w[D]%r.d===0)w[D]/=r.d;else return null;v*=Math.pow(D,w[D])}for(var D in y)if(D!=="1"){if(y[D]*=r.n,y[D]%r.d===0)y[D]/=r.d;else return null;C*=Math.pow(D,y[D])}return r.s<0?i(C,v):i(v,C)},equals:function(g,b){return u(g,b),this.s*this.n*r.d===r.s*r.n*this.d},compare:function(g,b){u(g,b);var w=this.s*this.n*r.d-r.s*r.n*this.d;return(0<w)-(w<0)},simplify:function(g){if(isNaN(this.n)||isNaN(this.d))return this;g=g||.001;for(var b=this.abs(),w=b.toContinued(),y=1;y<w.length;y++){for(var v=i(w[y-1],1),C=y-2;C>=0;C--)v=v.inverse().add(w[C]);if(Math.abs(v.sub(b).valueOf())<g)return v.mul(this.s)}return this},divisible:function(g,b){return u(g,b),!(!(r.n*this.d)||this.n*r.d%(r.n*this.d))},valueOf:function(){return this.s*this.n/this.d},toFraction:function(g){var b,w="",y=this.n,v=this.d;return this.s<0&&(w+="-"),v===1?w+=y:(g&&(b=Math.floor(y/v))>0&&(w+=b,w+=" ",y%=v),w+=y,w+="/",w+=v),w},toLatex:function(g){var b,w="",y=this.n,v=this.d;return this.s<0&&(w+="-"),v===1?w+=y:(g&&(b=Math.floor(y/v))>0&&(w+=b,y%=v),w+="\\frac{",w+=y,w+="}{",w+=v,w+="}"),w},toContinued:function(){var g,b=this.n,w=this.d,y=[];if(isNaN(b)||isNaN(w))return y;do y.push(Math.floor(b/w)),g=b%w,b=w,w=g;while(b!==1);return y},toString:function(g){var b=this.n,w=this.d;if(isNaN(b)||isNaN(w))return"NaN";g=g||15;var y=l(b,w),v=h(b,w,y),C=this.s<0?"-":"";if(C+=b/w|0,b%=w,b*=10,b&&(C+="."),y){for(var D=v;D--;)C+=b/w|0,b%=w,b*=10;C+="(";for(var D=y;D--;)C+=b/w|0,b%=w,b*=10;C+=")"}else for(var D=g;b&&D--;)C+=b/w|0,b%=w,b*=10;return C}},Object.defineProperty(f,"__esModule",{value:!0}),f.default=f,f.Fraction=f,n.exports=f})()})(cD);var Rj=cD.exports;const Xs=Nl(Rj);var _j="Fraction",Oj=[],Mj=He(_j,Oj,()=>(Object.defineProperty(Xs,"name",{value:"Fraction"}),Xs.prototype.constructor=Xs,Xs.prototype.type="Fraction",Xs.prototype.isFraction=!0,Xs.prototype.toJSON=function(){return{mathjs:"Fraction",n:this.s*this.n,d:this.d}},Xs.fromJSON=function(n){return new Xs(n)},Xs),{isClass:!0}),Bj="Matrix",Lj=[],Pj=He(Bj,Lj,()=>{function n(){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator")}return n.prototype.type="Matrix",n.prototype.isMatrix=!0,n.prototype.storage=function(){throw new Error("Cannot invoke storage on a Matrix interface")},n.prototype.datatype=function(){throw new Error("Cannot invoke datatype on a Matrix interface")},n.prototype.create=function(t,e){throw new Error("Cannot invoke create on a Matrix interface")},n.prototype.subset=function(t,e,s){throw new Error("Cannot invoke subset on a Matrix interface")},n.prototype.get=function(t){throw new Error("Cannot invoke get on a Matrix interface")},n.prototype.set=function(t,e,s){throw new Error("Cannot invoke set on a Matrix interface")},n.prototype.resize=function(t,e){throw new Error("Cannot invoke resize on a Matrix interface")},n.prototype.reshape=function(t,e){throw new Error("Cannot invoke reshape on a Matrix interface")},n.prototype.clone=function(){throw new Error("Cannot invoke clone on a Matrix interface")},n.prototype.size=function(){throw new Error("Cannot invoke size on a Matrix interface")},n.prototype.map=function(t,e){throw new Error("Cannot invoke map on a Matrix interface")},n.prototype.forEach=function(t){throw new Error("Cannot invoke forEach on a Matrix interface")},n.prototype[Symbol.iterator]=function(){throw new Error("Cannot iterate a Matrix interface")},n.prototype.toArray=function(){throw new Error("Cannot invoke toArray on a Matrix interface")},n.prototype.valueOf=function(){throw new Error("Cannot invoke valueOf on a Matrix interface")},n.prototype.format=function(t){throw new Error("Cannot invoke format on a Matrix interface")},n.prototype.toString=function(){throw new Error("Cannot invoke toString on a Matrix interface")},n},{isClass:!0});function lD(n){return Object.keys(n.signatures||{}).reduce(function(t,e){var s=(e.match(/,/g)||[]).length+1;return Math.max(t,s)},-1)}var zj="DenseMatrix",Vj=["Matrix"],Wj=He(zj,Vj,n=>{var{Matrix:t}=n;function e(l,h){if(!(this instanceof e))throw new SyntaxError("Constructor must be called with the new operator");if(h&&!Fs(h))throw new Error("Invalid datatype: "+h);if(_s(l))l.type==="DenseMatrix"?(this._data=Je(l._data),this._size=Je(l._size),this._datatype=h||l._datatype):(this._data=l.toArray(),this._size=l.size(),this._datatype=h||l._datatype);else if(l&&xe(l.data)&&xe(l.size))this._data=l.data,this._size=l.size,A0(this._data,this._size),this._datatype=h||l.datatype;else if(xe(l))this._data=c(l),this._size=xr(this._data),A0(this._data,this._size),this._datatype=h;else{if(l)throw new TypeError("Unsupported type of data ("+Vi(l)+")");this._data=[],this._size=[0],this._datatype=h}}e.prototype=new t,e.prototype.createDenseMatrix=function(l,h){return new e(l,h)},Object.defineProperty(e,"name",{value:"DenseMatrix"}),e.prototype.constructor=e,e.prototype.type="DenseMatrix",e.prototype.isDenseMatrix=!0,e.prototype.getDataType=function(){return Cc(this._data,Vi)},e.prototype.storage=function(){return"dense"},e.prototype.datatype=function(){return this._datatype},e.prototype.create=function(l,h){return new e(l,h)},e.prototype.subset=function(l,h,d){switch(arguments.length){case 1:return s(this,l);case 2:case 3:return o(this,l,h,d);default:throw new SyntaxError("Wrong number of arguments")}},e.prototype.get=function(l){if(!xe(l))throw new TypeError("Array expected");if(l.length!==this._size.length)throw new pe(l.length,this._size.length);for(var h=0;h<l.length;h++)be(l[h],this._size[h]);for(var d=this._data,f=0,m=l.length;f<m;f++){var p=l[f];be(p,d.length),d=d[p]}return d},e.prototype.set=function(l,h,d){if(!xe(l))throw new TypeError("Array expected");if(l.length<this._size.length)throw new pe(l.length,this._size.length,"<");var f,m,p,x=l.map(function(b){return b+1});u(this,x,d);var g=this._data;for(f=0,m=l.length-1;f<m;f++)p=l[f],be(p,g.length),g=g[p];return p=l[l.length-1],be(p,g.length),g[p]=h,this};function s(l,h){if(!Sm(h))throw new TypeError("Invalid index");var d=h.isScalar();if(d)return l.get(h.min());var f=h.size();if(f.length!==l._size.length)throw new pe(f.length,l._size.length);for(var m=h.min(),p=h.max(),x=0,g=l._size.length;x<g;x++)be(m[x],l._size[x]),be(p[x],l._size[x]);return new e(r(l._data,h,f.length,0),l._datatype)}function r(l,h,d,f){var m=f===d-1,p=h.dimension(f);return m?p.map(function(x){return be(x,l.length),l[x]}).valueOf():p.map(function(x){be(x,l.length);var g=l[x];return r(g,h,d,f+1)}).valueOf()}function o(l,h,d,f){if(!h||h.isIndex!==!0)throw new TypeError("Invalid index");var m=h.size(),p=h.isScalar(),x;if(_s(d)?(x=d.size(),d=d.valueOf()):x=xr(d),p){if(x.length!==0)throw new TypeError("Scalar expected");l.set(h.min(),d,f)}else{if(!oi(x,m))try{x.length===0?d=T0([d],m):d=T0(d,m),x=xr(d)}catch{}if(m.length<l._size.length)throw new pe(m.length,l._size.length,"<");if(x.length<m.length){for(var g=0,b=0;m[g]===1&&x[g]===1;)g++;for(;m[g]===1;)b++,g++;d=GC(d,m.length,b,x)}if(!oi(m,x))throw new pe(m,x,">");var w=h.max().map(function(C){return C+1});u(l,w,f);var y=m.length,v=0;i(l._data,h,d,y,v)}return l}function i(l,h,d,f,m){var p=m===f-1,x=h.dimension(m);p?x.forEach(function(g,b){be(g),l[g]=d[b[0]]}):x.forEach(function(g,b){be(g),i(l[g],h,d[b[0]],f,m+1)})}e.prototype.resize=function(l,h,d){if(!yc(l))throw new TypeError("Array or Matrix expected");var f=l.valueOf().map(p=>Array.isArray(p)&&p.length===1?p[0]:p),m=d?this.clone():this;return a(m,f,h)};function a(l,h,d){if(h.length===0){for(var f=l._data;xe(f);)f=f[0];return f}return l._size=h.slice(0),l._data=Id(l._data,l._size,d),l}e.prototype.reshape=function(l,h){var d=h?this.clone():this;d._data=WC(d._data,l);var f=d._size.reduce((m,p)=>m*p);return d._size=Em(l,f),d};function u(l,h,d){for(var f=l._size.slice(0),m=!1;f.length<h.length;)f.push(0),m=!0;for(var p=0,x=h.length;p<x;p++)h[p]>f[p]&&(f[p]=h[p],m=!0);m&&a(l,f,d)}e.prototype.clone=function(){var l=new e({data:Je(this._data),size:Je(this._size),datatype:this._datatype});return l},e.prototype.size=function(){return this._size.slice(0)},e.prototype.map=function(l){var h=this,d=lD(l),f=function x(g,b){return xe(g)?g.map(function(w,y){return x(w,b.concat(y))}):d===1?l(g):d===2?l(g,b):l(g,b,h)},m=f(this._data,[]),p=this._datatype!==void 0?Cc(m,Vi):void 0;return new e(m,p)},e.prototype.forEach=function(l){var h=this,d=function f(m,p){xe(m)?m.forEach(function(x,g){f(x,p.concat(g))}):l(m,p,h)};d(this._data,[])},e.prototype[Symbol.iterator]=function*(){var l=function*h(d,f){if(xe(d))for(var m=0;m<d.length;m++)yield*h(d[m],f.concat(m));else yield{value:d,index:f}};yield*l(this._data,[])},e.prototype.rows=function(){var l=[],h=this.size();if(h.length!==2)throw new TypeError("Rows can only be returned for a 2D matrix.");var d=this._data;for(var f of d)l.push(new e([f],this._datatype));return l},e.prototype.columns=function(){var l=this,h=[],d=this.size();if(d.length!==2)throw new TypeError("Rows can only be returned for a 2D matrix.");for(var f=this._data,m=function(g){var b=f.map(w=>[w[g]]);h.push(new e(b,l._datatype))},p=0;p<d[1];p++)m(p);return h},e.prototype.toArray=function(){return Je(this._data)},e.prototype.valueOf=function(){return this._data},e.prototype.format=function(l){return Sn(this._data,l)},e.prototype.toString=function(){return Sn(this._data)},e.prototype.toJSON=function(){return{mathjs:"DenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},e.prototype.diagonal=function(l){if(l){if(Vn(l)&&(l=l.toNumber()),!we(l)||!Ve(l))throw new TypeError("The parameter k must be an integer number")}else l=0;for(var h=l>0?l:0,d=l<0?-l:0,f=this._size[0],m=this._size[1],p=Math.min(f-d,m-h),x=[],g=0;g<p;g++)x[g]=this._data[g+d][g+h];return new e({data:x,size:[p],datatype:this._datatype})},e.diagonal=function(l,h,d,f){if(!xe(l))throw new TypeError("Array expected, size parameter");if(l.length!==2)throw new Error("Only two dimensions matrix are supported");if(l=l.map(function(D){if(Vn(D)&&(D=D.toNumber()),!we(D)||!Ve(D)||D<1)throw new Error("Size values must be positive integers");return D}),d){if(Vn(d)&&(d=d.toNumber()),!we(d)||!Ve(d))throw new TypeError("The parameter k must be an integer number")}else d=0;var m=d>0?d:0,p=d<0?-d:0,x=l[0],g=l[1],b=Math.min(x-p,g-m),w;if(xe(h)){if(h.length!==b)throw new Error("Invalid value array length");w=function(I){return h[I]}}else if(_s(h)){var y=h.size();if(y.length!==1||y[0]!==b)throw new Error("Invalid matrix length");w=function(I){return h.get([I])}}else w=function(){return h};f||(f=Vn(w(0))?w(0).mul(0):0);var v=[];if(l.length>0){v=Id(v,l,f);for(var C=0;C<b;C++)v[C+p][C+m]=w(C)}return new e({data:v,size:[x,g]})},e.fromJSON=function(l){return new e(l)},e.prototype.swapRows=function(l,h){if(!we(l)||!Ve(l)||!we(h)||!Ve(h))throw new Error("Row index must be positive integers");if(this._size.length!==2)throw new Error("Only two dimensional matrix is supported");return be(l,this._size[0]),be(h,this._size[0]),e._swapRows(l,h,this._data),this},e._swapRows=function(l,h,d){var f=d[l];d[l]=d[h],d[h]=f};function c(l){return _s(l)?c(l.valueOf()):xe(l)?l.map(c):l}return e},{isClass:!0});function ea(n,t,e){return n&&typeof n.map=="function"?n.map(function(s){return ea(s,t)}):t(n)}function O0(n){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;if(!Ve(t)||t<0||t>15)throw new Error("Number of decimals in function round must be an integer from 0 to 15 inclusive");return parseFloat(LC(n,t))}function Td(n,t,e){if(e==null)return n.eq(t);if(n.eq(t))return!0;if(n.isNaN()||t.isNaN())return!1;if(n.isFinite()&&t.isFinite()){var s=n.minus(t).abs();if(s.isZero())return!0;var r=n.constructor.max(n.abs(),t.abs());return s.lte(r.times(e))}return!1}function Uj(n,t,e){return ii(n.re,t.re,e)&&ii(n.im,t.im,e)}var Gj=He("compareUnits",["typed"],n=>{var{typed:t}=n;return{"Unit, Unit":t.referToSelf(e=>(s,r)=>{if(!s.equalBase(r))throw new Error("Cannot compare units with different base");return t.find(e,[s.valueType(),r.valueType()])(s.value,r.value)})}}),kc="equalScalar",Hj=["typed","config"],qj=He(kc,Hj,n=>{var{typed:t,config:e}=n,s=Gj({typed:t});return t(kc,{"boolean, boolean":function(o,i){return o===i},"number, number":function(o,i){return ii(o,i,e.epsilon)},"BigNumber, BigNumber":function(o,i){return o.eq(i)||Td(o,i,e.epsilon)},"Fraction, Fraction":function(o,i){return o.equals(i)},"Complex, Complex":function(o,i){return Uj(o,i,e.epsilon)}},s)});He(kc,["typed","config"],n=>{var{typed:t,config:e}=n;return t(kc,{"number, number":function(r,o){return ii(r,o,e.epsilon)}})});var jj="SparseMatrix",Kj=["typed","equalScalar","Matrix"],Xj=He(jj,Kj,n=>{var{typed:t,equalScalar:e,Matrix:s}=n;function r(p,x){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");if(x&&!Fs(x))throw new Error("Invalid datatype: "+x);if(_s(p))o(this,p,x);else if(p&&xe(p.index)&&xe(p.ptr)&&xe(p.size))this._values=p.values,this._index=p.index,this._ptr=p.ptr,this._size=p.size,this._datatype=x||p.datatype;else if(xe(p))i(this,p,x);else{if(p)throw new TypeError("Unsupported type of data ("+Vi(p)+")");this._values=[],this._index=[],this._ptr=[0],this._size=[0,0],this._datatype=x}}function o(p,x,g){x.type==="SparseMatrix"?(p._values=x._values?Je(x._values):void 0,p._index=Je(x._index),p._ptr=Je(x._ptr),p._size=Je(x._size),p._datatype=g||x._datatype):i(p,x.valueOf(),g||x._datatype)}function i(p,x,g){p._values=[],p._index=[],p._ptr=[],p._datatype=g;var b=x.length,w=0,y=e,v=0;if(Fs(g)&&(y=t.find(e,[g,g])||e,v=t.convert(0,g)),b>0){var C=0;do{p._ptr.push(p._index.length);for(var D=0;D<b;D++){var I=x[D];if(xe(I)){if(C===0&&w<I.length&&(w=I.length),C<I.length){var $=I[C];y($,v)||(p._values.push($),p._index.push(D))}}else C===0&&w<1&&(w=1),y(I,v)||(p._values.push(I),p._index.push(D))}C++}while(C<w)}p._ptr.push(p._index.length),p._size=[b,w]}r.prototype=new s,r.prototype.createSparseMatrix=function(p,x){return new r(p,x)},Object.defineProperty(r,"name",{value:"SparseMatrix"}),r.prototype.constructor=r,r.prototype.type="SparseMatrix",r.prototype.isSparseMatrix=!0,r.prototype.getDataType=function(){return Cc(this._values,Vi)},r.prototype.storage=function(){return"sparse"},r.prototype.datatype=function(){return this._datatype},r.prototype.create=function(p,x){return new r(p,x)},r.prototype.density=function(){var p=this._size[0],x=this._size[1];return p!==0&&x!==0?this._index.length/(p*x):0},r.prototype.subset=function(p,x,g){if(!this._values)throw new Error("Cannot invoke subset on a Pattern only matrix");switch(arguments.length){case 1:return a(this,p);case 2:case 3:return u(this,p,x,g);default:throw new SyntaxError("Wrong number of arguments")}};function a(p,x){if(!Sm(x))throw new TypeError("Invalid index");var g=x.isScalar();if(g)return p.get(x.min());var b=x.size();if(b.length!==p._size.length)throw new pe(b.length,p._size.length);var w,y,v,C,D=x.min(),I=x.max();for(w=0,y=p._size.length;w<y;w++)be(D[w],p._size[w]),be(I[w],p._size[w]);var $=p._values,S=p._index,E=p._ptr,N=x.dimension(0),R=x.dimension(1),L=[],O=[];N.forEach(function(q,J){O[q]=J[0],L[q]=!0});var _=$?[]:void 0,j=[],G=[];return R.forEach(function(q){for(G.push(j.length),v=E[q],C=E[q+1];v<C;v++)w=S[v],L[w]===!0&&(j.push(O[w]),_&&_.push($[v]))}),G.push(j.length),new r({values:_,index:j,ptr:G,size:b,datatype:p._datatype})}function u(p,x,g,b){if(!x||x.isIndex!==!0)throw new TypeError("Invalid index");var w=x.size(),y=x.isScalar(),v;if(_s(g)?(v=g.size(),g=g.toArray()):v=xr(g),y){if(v.length!==0)throw new TypeError("Scalar expected");p.set(x.min(),g,b)}else{if(w.length!==1&&w.length!==2)throw new pe(w.length,p._size.length,"<");if(v.length<w.length){for(var C=0,D=0;w[C]===1&&v[C]===1;)C++;for(;w[C]===1;)D++,C++;g=GC(g,w.length,D,v)}if(!oi(w,v))throw new pe(w,v,">");if(w.length===1){var I=x.dimension(0);I.forEach(function(E,N){be(E),p.set([E,0],g[N[0]],b)})}else{var $=x.dimension(0),S=x.dimension(1);$.forEach(function(E,N){be(E),S.forEach(function(R,L){be(R),p.set([E,R],g[N[0]][L[0]],b)})})}}return p}r.prototype.get=function(p){if(!xe(p))throw new TypeError("Array expected");if(p.length!==this._size.length)throw new pe(p.length,this._size.length);if(!this._values)throw new Error("Cannot invoke get on a Pattern only matrix");var x=p[0],g=p[1];be(x,this._size[0]),be(g,this._size[1]);var b=c(x,this._ptr[g],this._ptr[g+1],this._index);return b<this._ptr[g+1]&&this._index[b]===x?this._values[b]:0},r.prototype.set=function(p,x,g){if(!xe(p))throw new TypeError("Array expected");if(p.length!==this._size.length)throw new pe(p.length,this._size.length);if(!this._values)throw new Error("Cannot invoke set on a Pattern only matrix");var b=p[0],w=p[1],y=this._size[0],v=this._size[1],C=e,D=0;Fs(this._datatype)&&(C=t.find(e,[this._datatype,this._datatype])||e,D=t.convert(0,this._datatype)),(b>y-1||w>v-1)&&(d(this,Math.max(b+1,y),Math.max(w+1,v),g),y=this._size[0],v=this._size[1]),be(b,y),be(w,v);var I=c(b,this._ptr[w],this._ptr[w+1],this._index);return I<this._ptr[w+1]&&this._index[I]===b?C(x,D)?l(I,w,this._values,this._index,this._ptr):this._values[I]=x:C(x,D)||h(I,b,w,x,this._values,this._index,this._ptr),this};function c(p,x,g,b){if(g-x===0)return g;for(var w=x;w<g;w++)if(b[w]===p)return w;return x}function l(p,x,g,b,w){g.splice(p,1),b.splice(p,1);for(var y=x+1;y<w.length;y++)w[y]--}function h(p,x,g,b,w,y,v){w.splice(p,0,b),y.splice(p,0,x);for(var C=g+1;C<v.length;C++)v[C]++}r.prototype.resize=function(p,x,g){if(!yc(p))throw new TypeError("Array or Matrix expected");var b=p.valueOf().map(y=>Array.isArray(y)&&y.length===1?y[0]:y);if(b.length!==2)throw new Error("Only two dimensions matrix are supported");b.forEach(function(y){if(!we(y)||!Ve(y)||y<0)throw new TypeError("Invalid size, must contain positive integers (size: "+Sn(b)+")")});var w=g?this.clone():this;return d(w,b[0],b[1],x)};function d(p,x,g,b){var w=b||0,y=e,v=0;Fs(p._datatype)&&(y=t.find(e,[p._datatype,p._datatype])||e,v=t.convert(0,p._datatype),w=t.convert(w,p._datatype));var C=!y(w,v),D=p._size[0],I=p._size[1],$,S,E;if(g>I){for(S=I;S<g;S++)if(p._ptr[S]=p._values.length,C)for($=0;$<D;$++)p._values.push(w),p._index.push($);p._ptr[g]=p._values.length}else g<I&&(p._ptr.splice(g+1,I-g),p._values.splice(p._ptr[g],p._values.length),p._index.splice(p._ptr[g],p._index.length));if(I=g,x>D){if(C){var N=0;for(S=0;S<I;S++){p._ptr[S]=p._ptr[S]+N,E=p._ptr[S+1]+N;var R=0;for($=D;$<x;$++,R++)p._values.splice(E+R,0,w),p._index.splice(E+R,0,$),N++}p._ptr[I]=p._values.length}}else if(x<D){var L=0;for(S=0;S<I;S++){p._ptr[S]=p._ptr[S]-L;var O=p._ptr[S],_=p._ptr[S+1]-L;for(E=O;E<_;E++)$=p._index[E],$>x-1&&(p._values.splice(E,1),p._index.splice(E,1),L++)}p._ptr[S]=p._values.length}return p._size[0]=x,p._size[1]=g,p}r.prototype.reshape=function(p,x){if(!xe(p))throw new TypeError("Array expected");if(p.length!==2)throw new Error("Sparse matrices can only be reshaped in two dimensions");p.forEach(function(q){if(!we(q)||!Ve(q)||q<=-2||q===0)throw new TypeError("Invalid size, must contain positive integers or -1 (size: "+Sn(p)+")")});var g=this._size[0]*this._size[1];p=Em(p,g);var b=p[0]*p[1];if(g!==b)throw new Error("Reshaping sparse matrix will result in the wrong number of elements");var w=x?this.clone():this;if(this._size[0]===p[0]&&this._size[1]===p[1])return w;for(var y=[],v=0;v<w._ptr.length;v++)for(var C=0;C<w._ptr[v+1]-w._ptr[v];C++)y.push(v);for(var D=w._values.slice(),I=w._index.slice(),$=0;$<w._index.length;$++){var S=I[$],E=y[$],N=S*w._size[1]+E;y[$]=N%p[1],I[$]=Math.floor(N/p[1])}w._values.length=0,w._index.length=0,w._ptr.length=p[1]+1,w._size=p.slice();for(var R=0;R<w._ptr.length;R++)w._ptr[R]=0;for(var L=0;L<D.length;L++){var O=I[L],_=y[L],j=D[L],G=c(O,w._ptr[_],w._ptr[_+1],w._index);h(G,O,_,j,w._values,w._index,w._ptr)}return w},r.prototype.clone=function(){var p=new r({values:this._values?Je(this._values):void 0,index:Je(this._index),ptr:Je(this._ptr),size:Je(this._size),datatype:this._datatype});return p},r.prototype.size=function(){return this._size.slice(0)},r.prototype.map=function(p,x){if(!this._values)throw new Error("Cannot invoke map on a Pattern only matrix");var g=this,b=this._size[0],w=this._size[1],y=lD(p),v=function(D,I,$){return y===1?p(D):y===2?p(D,[I,$]):p(D,[I,$],g)};return f(this,0,b-1,0,w-1,v,x)};function f(p,x,g,b,w,y,v){var C=[],D=[],I=[],$=e,S=0;Fs(p._datatype)&&($=t.find(e,[p._datatype,p._datatype])||e,S=t.convert(0,p._datatype));for(var E=function(st,ct,ut){st=y(st,ct,ut),$(st,S)||(C.push(st),D.push(ct))},N=b;N<=w;N++){I.push(C.length);var R=p._ptr[N],L=p._ptr[N+1];if(v)for(var O=R;O<L;O++){var _=p._index[O];_>=x&&_<=g&&E(p._values[O],_-x,N-b)}else{for(var j={},G=R;G<L;G++){var q=p._index[G];j[q]=p._values[G]}for(var J=x;J<=g;J++){var nt=J in j?j[J]:0;E(nt,J-x,N-b)}}}return I.push(C.length),new r({values:C,index:D,ptr:I,size:[g-x+1,w-b+1]})}r.prototype.forEach=function(p,x){if(!this._values)throw new Error("Cannot invoke forEach on a Pattern only matrix");for(var g=this,b=this._size[0],w=this._size[1],y=0;y<w;y++){var v=this._ptr[y],C=this._ptr[y+1];if(x)for(var D=v;D<C;D++){var I=this._index[D];p(this._values[D],[I,y],g)}else{for(var $={},S=v;S<C;S++){var E=this._index[S];$[E]=this._values[S]}for(var N=0;N<b;N++){var R=N in $?$[N]:0;p(R,[N,y],g)}}}},r.prototype[Symbol.iterator]=function*(){if(!this._values)throw new Error("Cannot iterate a Pattern only matrix");for(var p=this._size[1],x=0;x<p;x++)for(var g=this._ptr[x],b=this._ptr[x+1],w=g;w<b;w++){var y=this._index[w];yield{value:this._values[w],index:[y,x]}}},r.prototype.toArray=function(){return m(this._values,this._index,this._ptr,this._size,!0)},r.prototype.valueOf=function(){return m(this._values,this._index,this._ptr,this._size,!1)};function m(p,x,g,b,w){var y=b[0],v=b[1],C=[],D,I;for(D=0;D<y;D++)for(C[D]=[],I=0;I<v;I++)C[D][I]=0;for(I=0;I<v;I++)for(var $=g[I],S=g[I+1],E=$;E<S;E++)D=x[E],C[D][I]=p?w?Je(p[E]):p[E]:1;return C}return r.prototype.format=function(p){for(var x=this._size[0],g=this._size[1],b=this.density(),w="Sparse Matrix ["+Sn(x,p)+" x "+Sn(g,p)+"] density: "+Sn(b,p)+`
`,y=0;y<g;y++)for(var v=this._ptr[y],C=this._ptr[y+1],D=v;D<C;D++){var I=this._index[D];w+=`
    (`+Sn(I,p)+", "+Sn(y,p)+") ==> "+(this._values?Sn(this._values[D],p):"X")}return w},r.prototype.toString=function(){return Sn(this.toArray())},r.prototype.toJSON=function(){return{mathjs:"SparseMatrix",values:this._values,index:this._index,ptr:this._ptr,size:this._size,datatype:this._datatype}},r.prototype.diagonal=function(p){if(p){if(Vn(p)&&(p=p.toNumber()),!we(p)||!Ve(p))throw new TypeError("The parameter k must be an integer number")}else p=0;var x=p>0?p:0,g=p<0?-p:0,b=this._size[0],w=this._size[1],y=Math.min(b-g,w-x),v=[],C=[],D=[];D[0]=0;for(var I=x;I<w&&v.length<y;I++)for(var $=this._ptr[I],S=this._ptr[I+1],E=$;E<S;E++){var N=this._index[E];if(N===I-x+g){v.push(this._values[E]),C[v.length-1]=N-g;break}}return D.push(v.length),new r({values:v,index:C,ptr:D,size:[y,1]})},r.fromJSON=function(p){return new r(p)},r.diagonal=function(p,x,g,b,w){if(!xe(p))throw new TypeError("Array expected, size parameter");if(p.length!==2)throw new Error("Only two dimensions matrix are supported");if(p=p.map(function(q){if(Vn(q)&&(q=q.toNumber()),!we(q)||!Ve(q)||q<1)throw new Error("Size values must be positive integers");return q}),g){if(Vn(g)&&(g=g.toNumber()),!we(g)||!Ve(g))throw new TypeError("The parameter k must be an integer number")}else g=0;var y=e,v=0;Fs(w)&&(y=t.find(e,[w,w])||e,v=t.convert(0,w));var C=g>0?g:0,D=g<0?-g:0,I=p[0],$=p[1],S=Math.min(I-D,$-C),E;if(xe(x)){if(x.length!==S)throw new Error("Invalid value array length");E=function(J){return x[J]}}else if(_s(x)){var N=x.size();if(N.length!==1||N[0]!==S)throw new Error("Invalid matrix length");E=function(J){return x.get([J])}}else E=function(){return x};for(var R=[],L=[],O=[],_=0;_<$;_++){O.push(R.length);var j=_-C;if(j>=0&&j<S){var G=E(j);y(G,v)||(L.push(j+D),R.push(G))}}return O.push(R.length),new r({values:R,index:L,ptr:O,size:[I,$]})},r.prototype.swapRows=function(p,x){if(!we(p)||!Ve(p)||!we(x)||!Ve(x))throw new Error("Row index must be positive integers");if(this._size.length!==2)throw new Error("Only two dimensional matrix is supported");return be(p,this._size[0]),be(x,this._size[0]),r._swapRows(p,x,this._size[1],this._values,this._index,this._ptr),this},r._forEachRow=function(p,x,g,b,w){for(var y=b[p],v=b[p+1],C=y;C<v;C++)w(g[C],x[C])},r._swapRows=function(p,x,g,b,w,y){for(var v=0;v<g;v++){var C=y[v],D=y[v+1],I=c(p,C,D,w),$=c(x,C,D,w);if(I<D&&$<D&&w[I]===p&&w[$]===x){if(b){var S=b[I];b[I]=b[$],b[$]=S}continue}if(I<D&&w[I]===p&&($>=D||w[$]!==x)){var E=b?b[I]:void 0;w.splice($,0,x),b&&b.splice($,0,E),w.splice($<=I?I+1:I,1),b&&b.splice($<=I?I+1:I,1);continue}if($<D&&w[$]===x&&(I>=D||w[I]!==p)){var N=b?b[$]:void 0;w.splice(I,0,p),b&&b.splice(I,0,N),w.splice(I<=$?$+1:$,1),b&&b.splice(I<=$?$+1:$,1)}}},r},{isClass:!0}),M0="matrix",Yj=["typed","Matrix","DenseMatrix","SparseMatrix"],Zj=He(M0,Yj,n=>{var{typed:t,Matrix:e,DenseMatrix:s,SparseMatrix:r}=n;return t(M0,{"":function(){return o([])},string:function(a){return o([],a)},"string, string":function(a,u){return o([],a,u)},Array:function(a){return o(a)},Matrix:function(a){return o(a,a.storage())},"Array | Matrix, string":o,"Array | Matrix, string, string":o});function o(i,a,u){if(a==="dense"||a==="default"||a===void 0)return new s(i,u);if(a==="sparse")return new r(i,u);throw new TypeError("Unknown matrix type "+JSON.stringify(a)+".")}}),Jj="matAlgo11xS0s",Qj=["typed","equalScalar"],hD=He(Jj,Qj,n=>{var{typed:t,equalScalar:e}=n;return function(r,o,i,a){var u=r._values,c=r._index,l=r._ptr,h=r._size,d=r._datatype;if(!u)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var f=h[0],m=h[1],p,x=e,g=0,b=i;typeof d=="string"&&(p=d,x=t.find(e,[p,p]),g=t.convert(0,p),o=t.convert(o,p),b=t.find(i,[p,p]));for(var w=[],y=[],v=[],C=0;C<m;C++){v[C]=y.length;for(var D=l[C],I=l[C+1],$=D;$<I;$++){var S=c[$],E=a?b(o,u[$]):b(u[$],o);x(E,g)||(y.push(S),w.push(E))}}return v[m]=y.length,r.createSparseMatrix({values:w,index:y,ptr:v,size:[f,m],datatype:p})}}),tK="matAlgo12xSfs",eK=["typed","DenseMatrix"],dD=He(tK,eK,n=>{var{typed:t,DenseMatrix:e}=n;return function(r,o,i,a){var u=r._values,c=r._index,l=r._ptr,h=r._size,d=r._datatype;if(!u)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var f=h[0],m=h[1],p,x=i;typeof d=="string"&&(p=d,o=t.convert(o,p),x=t.find(i,[p,p]));for(var g=[],b=[],w=[],y=0;y<m;y++){for(var v=y+1,C=l[y],D=l[y+1],I=C;I<D;I++){var $=c[I];b[$]=u[I],w[$]=v}for(var S=0;S<f;S++)y===0&&(g[S]=[]),w[S]===v?g[S][y]=a?x(o,b[S]):x(b[S],o):g[S][y]=a?x(o,0):x(0,o)}return new e({data:g,size:[f,m],datatype:p})}}),nK="matAlgo14xDs",sK=["typed"],fD=He(nK,sK,n=>{var{typed:t}=n;return function(r,o,i,a){var u=r._data,c=r._size,l=r._datatype,h,d=i;typeof l=="string"&&(h=l,o=t.convert(o,h),d=t.find(i,[h,h]));var f=c.length>0?e(d,0,c,c[0],u,o,a):[];return r.createDenseMatrix({data:f,size:Je(c),datatype:h})};function e(s,r,o,i,a,u,c){var l=[];if(r===o.length-1)for(var h=0;h<i;h++)l[h]=c?s(u,a[h]):s(a[h],u);else for(var d=0;d<i;d++)l[d]=e(s,r+1,o,o[r+1],a[d],u,c);return l}}),Fd="floor",rK=["typed","config","round","matrix","equalScalar","zeros","DenseMatrix"],oK=He(Fd,["typed","config","round"],n=>{var{typed:t,config:e,round:s}=n;return t(Fd,{number:function(o){return ii(o,s(o),e.epsilon)?s(o):Math.floor(o)},"number, number":function(o,i){if(ii(o,s(o,i),e.epsilon))return s(o,i);var[a,u]="".concat(o,"e").split("e"),c=Math.floor(Number("".concat(a,"e").concat(Number(u)+i)));return[a,u]="".concat(c,"e").split("e"),Number("".concat(a,"e").concat(Number(u)-i))}})}),iK=He(Fd,rK,n=>{var{typed:t,config:e,round:s,matrix:r,equalScalar:o,zeros:i,DenseMatrix:a}=n,u=hD({typed:t,equalScalar:o}),c=dD({typed:t,DenseMatrix:a}),l=fD({typed:t}),h=oK({typed:t,config:e,round:s});return t("floor",{number:h.signatures.number,"number,number":h.signatures["number,number"],Complex:function(f){return f.floor()},"Complex, number":function(f,m){return f.floor(m)},"Complex, BigNumber":function(f,m){return f.floor(m.toNumber())},BigNumber:function(f){return Td(f,s(f),e.epsilon)?s(f):f.floor()},"BigNumber, BigNumber":function(f,m){return Td(f,s(f,m),e.epsilon)?s(f,m):f.toDecimalPlaces(m.toNumber(),ho.ROUND_FLOOR)},Fraction:function(f){return f.floor()},"Fraction, number":function(f,m){return f.floor(m)},"Fraction, BigNumber":function(f,m){return f.floor(m.toNumber())},"Array | Matrix":t.referToSelf(d=>f=>ea(f,d)),"Array, number | BigNumber":t.referToSelf(d=>(f,m)=>ea(f,p=>d(p,m))),"SparseMatrix, number | BigNumber":t.referToSelf(d=>(f,m)=>u(f,m,d,!1)),"DenseMatrix, number | BigNumber":t.referToSelf(d=>(f,m)=>l(f,m,d,!1)),"number | Complex | Fraction | BigNumber, Array":t.referToSelf(d=>(f,m)=>l(r(m),f,d,!0).valueOf()),"number | Complex | Fraction | BigNumber, Matrix":t.referToSelf(d=>(f,m)=>o(f,0)?i(m.size(),m.storage()):m.storage()==="dense"?l(m,f,d,!0):c(m,f,d,!0))})}),B0="zeros",aK=["typed","config","matrix","BigNumber"],uK=He(B0,aK,n=>{var{typed:t,config:e,matrix:s,BigNumber:r}=n;return t(B0,{"":function(){return e.matrix==="Array"?o([]):o([],"default")},"...number | BigNumber | string":function(c){var l=c[c.length-1];if(typeof l=="string"){var h=c.pop();return o(c,h)}else return e.matrix==="Array"?o(c):o(c,"default")},Array:o,Matrix:function(c){var l=c.storage();return o(c.valueOf(),l)},"Array | Matrix, string":function(c,l){return o(c.valueOf(),l)}});function o(u,c){var l=i(u),h=l?new r(0):0;if(a(u),c){var d=s(c);return u.length>0?d.resize(u,h):d}else{var f=[];return u.length>0?Id(f,u,h):f}}function i(u){var c=!1;return u.forEach(function(l,h,d){Vn(l)&&(c=!0,d[h]=l.toNumber())}),c}function a(u){u.forEach(function(c){if(typeof c!="number"||!Ve(c)||c<0)throw new Error("Parameters in function zeros must be positive integers")})}}),To="Number of decimals in function round must be an integer",L0="round",cK=["typed","matrix","equalScalar","zeros","BigNumber","DenseMatrix"],lK=He(L0,cK,n=>{var{typed:t,matrix:e,equalScalar:s,zeros:r,BigNumber:o,DenseMatrix:i}=n,a=hD({typed:t,equalScalar:s}),u=dD({typed:t,DenseMatrix:i}),c=fD({typed:t});return t(L0,{number:O0,"number, number":O0,"number, BigNumber":function(h,d){if(!d.isInteger())throw new TypeError(To);return new o(h).toDecimalPlaces(d.toNumber())},Complex:function(h){return h.round()},"Complex, number":function(h,d){if(d%1)throw new TypeError(To);return h.round(d)},"Complex, BigNumber":function(h,d){if(!d.isInteger())throw new TypeError(To);var f=d.toNumber();return h.round(f)},BigNumber:function(h){return h.toDecimalPlaces(0)},"BigNumber, BigNumber":function(h,d){if(!d.isInteger())throw new TypeError(To);return h.toDecimalPlaces(d.toNumber())},Fraction:function(h){return h.round()},"Fraction, number":function(h,d){if(d%1)throw new TypeError(To);return h.round(d)},"Fraction, BigNumber":function(h,d){if(!d.isInteger())throw new TypeError(To);return h.round(d.toNumber())},"Unit, number, Unit":t.referToSelf(l=>function(h,d,f){var m=h.toNumeric(f);return f.multiply(l(m,d))}),"Unit, BigNumber, Unit":t.referToSelf(l=>(h,d,f)=>l(h,d.toNumber(),f)),"Unit, Unit":t.referToSelf(l=>(h,d)=>l(h,0,d)),"Array | Matrix, number, Unit":t.referToSelf(l=>(h,d,f)=>ea(h,m=>l(m,d,f))),"Array | Matrix, BigNumber, Unit":t.referToSelf(l=>(h,d,f)=>l(h,d.toNumber(),f)),"Array | Matrix, Unit":t.referToSelf(l=>(h,d)=>l(h,0,d)),"Array | Matrix":t.referToSelf(l=>h=>ea(h,l)),"SparseMatrix, number | BigNumber":t.referToSelf(l=>(h,d)=>a(h,d,l,!1)),"DenseMatrix, number | BigNumber":t.referToSelf(l=>(h,d)=>c(h,d,l,!1)),"Array, number | BigNumber":t.referToSelf(l=>(h,d)=>c(e(h),d,l,!1).valueOf()),"number | Complex | BigNumber | Fraction, SparseMatrix":t.referToSelf(l=>(h,d)=>s(h,0)?r(d.size(),d.storage()):u(d,h,l,!0)),"number | Complex | BigNumber | Fraction, DenseMatrix":t.referToSelf(l=>(h,d)=>s(h,0)?r(d.size(),d.storage()):c(d,h,l,!0)),"number | Complex | BigNumber | Fraction, Array":t.referToSelf(l=>(h,d)=>c(e(d),h,l,!0).valueOf())})}),hK=px(Date.now());function P0(n){var t;function e(r){t=r===null?hK:px(String(r))}e(n);function s(){return t()}return s}function pD(n,t){var e=[];if(n=n.slice(0),n.length>1)for(var s=0,r=n.shift();s<r;s++)e.push(pD(n,t));else for(var o=0,i=n.shift();o<i;o++)e.push(t());return e}var z0="random",dK=["typed","config","?on"],fK=He(z0,dK,n=>{var{typed:t,config:e,on:s}=n,r=P0(e.randomSeed);return s&&s("config",function(a,u){a.randomSeed!==u.randomSeed&&(r=P0(a.randomSeed))}),t(z0,{"":()=>i(0,1),number:a=>i(0,a),"number, number":(a,u)=>i(a,u),"Array | Matrix":a=>o(a,0,1),"Array | Matrix, number":(a,u)=>o(a,0,u),"Array | Matrix, number, number":(a,u,c)=>o(a,u,c)});function o(a,u,c){var l=pD(a.valueOf(),()=>i(u,c));return _s(a)?a.create(l):l}function i(a,u){return a+r()*(u-a)}}),Am=Ej({config:Ii}),pK=Fj({}),mK=Mj({}),Tm=Pj({}),hh=Wj({Matrix:Tm}),ko=Tq({BigNumber:Am,Complex:pK,DenseMatrix:hh,Fraction:mK}),Fm=qj({config:Ii,typed:ko}),gK=fK({config:Ii,typed:ko}),xK=Xj({Matrix:Tm,equalScalar:Fm,typed:ko}),Rm=Zj({DenseMatrix:hh,Matrix:Tm,SparseMatrix:xK,typed:ko}),mD=uK({BigNumber:Am,config:Ii,matrix:Rm,typed:ko}),bK=lK({BigNumber:Am,DenseMatrix:hh,equalScalar:Fm,matrix:Rm,typed:ko,zeros:mD}),wK=iK({DenseMatrix:hh,config:Ii,equalScalar:Fm,matrix:Rm,round:bK,typed:ko,zeros:mD});const yK={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},vK={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},CK="[^aeiou]",_m="[aeiouy]",$r="("+CK+"[^aeiouy]*)",Sc="("+_m+"[aeiou]*)",Lh=new RegExp("^"+$r+"?"+Sc+$r),DK=new RegExp("^"+$r+"?"+Sc+$r+Sc+"?$"),Lu=new RegExp("^"+$r+"?("+Sc+$r+"){2,}"),V0=new RegExp("^"+$r+"?"+_m),W0=new RegExp("^"+$r+_m+"[^aeiouwxy]$"),IK=/ll$/,$K=/^(.+?)e$/,kK=/^(.+?)y$/,SK=/^(.+?(s|t))(ion)$/,EK=/^(.+?)(ed|ing)$/,NK=/(at|bl|iz)$/,AK=/^(.+?)eed$/,TK=/^.+?[^s]s$/,FK=/^.+?(ss|i)es$/,RK=/([^aeiouylsz])\1$/,_K=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,OK=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,MK=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;function BK(n){let t=String(n).toLowerCase();if(t.length<3)return t;let e=!1;t.codePointAt(0)===121&&(e=!0,t="Y"+t.slice(1)),FK.test(t)?t=t.slice(0,-2):TK.test(t)&&(t=t.slice(0,-1));let s;return(s=AK.exec(t))?Lh.test(s[1])&&(t=t.slice(0,-1)):(s=EK.exec(t))&&V0.test(s[1])&&(t=s[1],NK.test(t)?t+="e":RK.test(t)?t=t.slice(0,-1):W0.test(t)&&(t+="e")),(s=kK.exec(t))&&V0.test(s[1])&&(t=s[1]+"i"),(s=_K.exec(t))&&Lh.test(s[1])&&(t=s[1]+yK[s[2]]),(s=OK.exec(t))&&Lh.test(s[1])&&(t=s[1]+vK[s[2]]),(s=MK.exec(t))?Lu.test(s[1])&&(t=s[1]):(s=SK.exec(t))&&Lu.test(s[1])&&(t=s[1]),(s=$K.exec(t))&&(Lu.test(s[1])||DK.test(s[1])&&!W0.test(s[1]))&&(t=s[1]),IK.test(t)&&Lu.test(t)&&(t=t.slice(0,-1)),e&&(t="y"+t.slice(1)),t}const Fo=t2("goto");function U0(n,t,e){const s=n.slice();return s[22]=t[e],s[24]=e,s}function LK(n){let t,e,s=n[22]+"",r;return{c(){t=Bn("li"),e=Bn("p"),r=q0(s),this.h()},l(o){t=Ln(o,"LI",{class:!0});var i=Es(t);e=Ln(i,"P",{class:!0});var a=Es(e);r=j0(a,s),a.forEach(En),i.forEach(En),this.h()},h(){ve(e,"class","message-item chat-in svelte-gm9il8"),ve(t,"class","message-card svelte-gm9il8")},m(o,i){Ec(o,t,i),on(t,e),on(e,r)},p(o,i){i&4&&s!==(s=o[22]+"")&&K0(r,s)},d(o){o&&En(t)}}}function PK(n){let t,e,s=n[22]+"",r;return{c(){t=Bn("li"),e=Bn("p"),r=q0(s),this.h()},l(o){t=Ln(o,"LI",{class:!0});var i=Es(t);e=Ln(i,"P",{class:!0});var a=Es(e);r=j0(a,s),a.forEach(En),i.forEach(En),this.h()},h(){ve(e,"class","message-item chat-out svelte-gm9il8"),ve(t,"class","message-card svelte-gm9il8")},m(o,i){Ec(o,t,i),on(t,e),on(e,r)},p(o,i){i&4&&s!==(s=o[22]+"")&&K0(r,s)},d(o){o&&En(t)}}}function G0(n){let t;function e(o,i){return o[24]%2==0?PK:LK}let r=e(n)(n);return{c(){r.c(),t=Lm()},l(o){r.l(o),t=Lm()},m(o,i){r.m(o,i),Ec(o,t,i)},p(o,i){r.p(o,i)},d(o){o&&En(t),r.d(o)}}}function zK(n){let t,e,s,r='<div class="icon-holder svelte-gm9il8"><img class="bot-icon-img svelte-gm9il8" src="/bot-icon.svg" alt="bot-icon"/></div>',o,i,a,u,c,l,h,d,f,m,p,x,g,b,w=Pm(n[2]),y=[];for(let v=0;v<w.length;v+=1)y[v]=G0(U0(n,w,v));return{c(){t=Bn("div"),e=Bn("div"),s=Bn("div"),s.innerHTML=r,o=Cu(),i=Bn("ul");for(let v=0;v<y.length;v+=1)y[v].c();a=Cu(),u=Bn("div"),c=Bn("textarea"),l=Cu(),h=Bn("img"),f=Cu(),m=Bn("button"),p=Bn("img"),this.h()},l(v){t=Ln(v,"DIV",{class:!0});var C=Es(t);e=Ln(C,"DIV",{class:!0,id:!0});var D=Es(e);s=Ln(D,"DIV",{class:!0,"data-svelte-h":!0}),JD(s)!=="svelte-1d5rx9s"&&(s.innerHTML=r),o=Du(D),i=Ln(D,"UL",{class:!0});var I=Es(i);for(let E=0;E<y.length;E+=1)y[E].l(I);I.forEach(En),a=Du(D),u=Ln(D,"DIV",{class:!0});var $=Es(u);c=Ln($,"TEXTAREA",{placeholder:!0,class:!0,id:!0}),Es(c).forEach(En),l=Du($),h=Ln($,"IMG",{src:!0,class:!0,alt:!0}),$.forEach(En),D.forEach(En),f=Du(C),m=Ln(C,"BUTTON",{class:!0,"data-target":!0});var S=Es(m);p=Ln(S,"IMG",{class:!0,src:!0,alt:!0}),S.forEach(En),C.forEach(En),this.h()},h(){ve(s,"class","top-banner svelte-gm9il8"),ve(i,"class","chat-log svelte-gm9il8"),ve(c,"placeholder","Enter message..."),c.required=!0,ve(c,"class","user-input svelte-gm9il8"),ve(c,"id","user-input"),dh(h.src,d="send-button.svg")||ve(h,"src",d),ve(h,"class","send-button svelte-gm9il8"),ve(h,"alt","send-button"),ve(u,"class","chat-input svelte-gm9il8"),ve(e,"class","chat-box hide svelte-gm9il8"),ve(e,"id","dropup"),ve(p,"class","chat-button-image svelte-gm9il8"),dh(p.src,x=n[1])||ve(p,"src",x),ve(p,"alt","chat-button"),ve(m,"class","chat-button svelte-gm9il8"),ve(m,"data-target","#dropup"),ve(t,"class","chat-bot-wrapper")},m(v,C){Ec(v,t,C),on(t,e),on(e,s),on(e,o),on(e,i);for(let D=0;D<y.length;D+=1)y[D]&&y[D].m(i,null);on(e,a),on(e,u),on(u,c),Bm(c,n[0]),on(u,l),on(u,h),on(t,f),on(t,m),on(m,p),g||(b=[fh(c,"input",n[5]),fh(c,"keydown",n[3]),fh(m,"click",n[6])],g=!0)},p(v,[C]){if(C&4){w=Pm(v[2]);let D;for(D=0;D<w.length;D+=1){const I=U0(v,w,D);y[D]?y[D].p(I,C):(y[D]=G0(I),y[D].c(),y[D].m(i,null))}for(;D<y.length;D+=1)y[D].d(1);y.length=w.length}C&1&&Bm(c,v[0]),C&2&&!dh(p.src,x=v[1])&&ve(p,"src",x)},i:Om,o:Om,d(v){v&&En(t),QD(y,v),g=!1,jD(b)}}}function Fi(n){var t=document.getElementById(n);setTimeout(function(){t==null||t.scrollIntoView({behavior:"smooth"})},100)}function H0(n){let t=n.toLocaleLowerCase();return t=t.replace(/[^\w\s]|_/g,""),t=t.split(" "),t}function VK(n,t,e){let s,r;Mm(n,e2,$=>e(11,s=$)),Mm(n,ph,$=>e(2,r=$));let o="",i="/chat-button.svg",a=[],u=[],c=[],l=[],h=[],d,f;const m=[{tag:"funny",patterns:["Give me a joke!","Make me laugh","Do you know a joke?","Tell me something funny!"],responses:["Why isn't dark spelt with a C? Because you can't see in the dark!","What do you call a fish with no eyes? A fsh!","What do you call a sleeping Bull? A bulldozer","What happens when a frog parks illegally? It gets toad away..."]},{tag:"creation",patterns:["Who made you?","How were you created?","When were you made?","Who programmed you?","How were you made?"],responses:["I was made by LazyMath. My creator starting programming me in late 2023 and finished in early 2024! :)"]},{tag:"purpose",patterns:["What are you?","Why were you created?","Why did someone decide to make you?","What is your purpose?","Why were you made?","What can you do?","What do you do?"],responses:["I am a chatbot designed to assist those which visit this website with their inquiries!","Currently, I am just a humble chatbot... However, I hope to become more general purpose in the future!","Right now I just assist with inquiries, but my creator plans to train me on data from VCE subjects and allow me to also assist students with their studies!"]},{tag:"apology",patterns:["Sorry about that","Whoops, sorry for that","Apologies for that","My bad I didn't mean that","My bad whoops, sorry","Sorryyy"],responses:["That's okay, don't worry about it :)","Sorry I'm not the best at interpreting language haha, I was just recently made. Hopefully I will improve in the future :)","All good! Don't worry about it!"]},{tag:"goodbye",patterns:["Bye","See you later","Goodbye"],responses:["See you later, thanks for visiting","Have a nice day","Bye! Come back again soon."]},{tag:"greeting",patterns:["Hi","Hey","Is anyone there?","Hello","Good day"],responses:["Heyyy!","Hello, thanks for visiting this site!","Hi there, how can I help?"]},{tag:"semiGreeting",patterns:["Hi, how are you?","Hey, how are you today?","How are you?","Hello, how are you?"],responses:["Hello! I'm good thanks for asking! How about you?","Hi, I am good thanks. I hope you are well too :)","Hey, I am good thank you. How are you?"]},{tag:"compliment",patterns:["That's amazing!","That is awsome!","You are cool","You are amazing","That's fantastic!","That is great","That is so cool!","You are so cool!","you're amazing!","You're awsome!"],responses:["Aww thanks :)","Haha thanks so much!","thanks!","Thanks so much :)"]},{tag:"doingWell",patterns:["I'm good thank you.","I am good too!","I am well thanks","I am all good","I am doing well","Doing good, thanks","Things are doing amazing!"],responses:["That's great to hear!","That's great!","That is good!","Amazing to hear!"]},{tag:"howWork",patterns:["How do you work exactly?","How do I navigate?","How do you work?","How do I use you?","What do you do exactly?"],responses:["I am currently able to assist in navigation and answering questions. If you would like me to help you navigate the website, just type where you want to go in the chat! For example, if you want to go to the methods udfs, just type: mm udfs :)"]},{tag:"compassion",patterns:["I don't feel good today","I am sad","I am depressed","I am not okay","I'm not feeling too well","A lot of bad stuff happened","Something bad happened","I am not happy right now","I failed","I didn't do well in a test"],responses:["Hey, its okay to feel that way when times are rough. I hope you get better soon. If you need someone to talk to please contact lifeline (13 11 14) or beyond blue (1300 22 4636)","I understand what you are going through is tough, but I know you can get through it :)","That's okay, the next few days might be a bit rough, but I know you can get through it :)","Hey, it's not the end of the world. I understand that it's tough, but you will get better soon. If you need someone to talk to please contact (13 11 14) or beyond blue (1300 22 4636)"]},{tag:"student software",patterns:["My student software expired what do I do?","No more student software","Student software gone","Student software expired. What to do?","Student software expired","Ti license expired","Texas Instruments license expired","Can't use student software anymore"],responses:["That is very unfortunate :( Please use this link instead to install our programs, found here: https://nspireconnect.ti.com/nsc/"]},{tag:"contact",patterns:["How do I contact you?","Who do I contact?","How can I contact the owner?","How can I contact the creator?","How can get help?","Need help","Need support","You're not helping","Need further assistance","Not sure what to do"],responses:["Please have a look at our FAQs. If you have already done so and still require help, please contact us via email using: lazymath2024@gmail.com"]},{tag:"thanks",patterns:["Thanks","Thank you","That's helpful","Thank's a lot!"],responses:["Happy to help!","Any time!","My pleasure"]},{tag:"scrollToTop",patterns:["Go to top","scroll to top","go top","scroll top","scroll to start","go to start","go start","go back up","go up","top"],responses:["sure thing!","Can do! Scrolling now!","Scrolling...","Scrolling now!"]},{tag:"scrollToBottom",patterns:["Go to bottom","scroll to bottom","go bottom","scroll end","scroll to end","go to end","go end","bottom","go down"],responses:["sure thing!","Can do! Scrolling now!","Scrolling...","Scrolling now!"]},{tag:"scrollToMM",patterns:["Go to math methods udfs","go to mathematical methods udfs","go to mm udfs","go to mm","go to methods udfs","mm"],responses:["sure thing!","Can do! Scrolling now!","Scrolling...","Scrolling now!"]},{tag:"scrollToSM",patterns:["Go to specialist udfs","go to specialist mathematics udfs","go to sm udfs","go to sm","go to spec udfs","sm"],responses:["sure thing!","Can do! Scrolling now!","Scrolling...","Scrolling now!"]},{tag:"scrollToDownload",patterns:["Go to download","go to download udf","go to download section","go to download part"],responses:["sure thing!","Can do! Scrolling now!","Scrolling...","Scrolling now!"]},{tag:"gotoHome",patterns:["Go to home","go home page","go to home page","go home page","take me to home","take me to home page","load home page","take me back to home page","home"],responses:["sure thing!","Can do! Redirecting now!","Redirecting...","Redirecting now!"]},{tag:"gotoAbout",patterns:["Go to about","go about page","go to about page","go about page","take me to about","take me to about page","load about page","take me back to about page","about us"],responses:["sure thing!","Can do! Redirecting now!","Redirecting...","Redirecting now!"]},{tag:"gotoContact",patterns:["Go to contact","go contact page","go to contact page","go contact page","take me to contact","take me to contact us page","load contact us page","take me back to contact us page","contact us"],responses:["sure thing!","Can do! Redirecting now!","Redirecting...","Redirecting now!"]},{tag:"chatGPT",patterns:["Are you made using the Open AI API?","Are you chatGPT?","Are you made using chatGPT?","Are you a chatGPT clone?"],responses:["Haha I am not! :O I am a humble chatbot made by the owner of this website!","I was not created using the Open AI API, my owner didn't want to pay for the Open AI API, so they made and trained me on their own!"]},{tag:"insult",patterns:["You are stupid","You are dumb","Why are you so stupid","Why are you so dumb?","Stupid chatbot","Stupid robot","Dumbass chatbot","Dumb robot","dumbass","stupid"],responses:["You hurt my feelings :(","Why are you so mean? :(","You make me sad :("]}];function p($){return BK($)}function x($,S){$=$.map(p);let E=Fe([S.length],"float32"),N=Ot(E.shape,E.dtype,E.dataSync());for(var R=0;R<S.length;R++)$.includes(S[R])&&N.set(1,R);return E=N.toTensor(),E}function g(){for(var $=0;$<m.length;$++){let E=m[$];a.push(E.tag);for(var S=0;S<E.patterns.length;S++){let N=H0(E.patterns[S]);u.push(...N),c.push([N,E.tag])}}f=a,u=u.map(p),u=[...new Set(u)].sort(),a=[...new Set(a)].sort();for(var $=0;$<c.length;$++)l.push(x(c[$][0],u)),h.push(a.indexOf(c[$][1]));return[l,h]}async function b($,S){const E=UR(),N=.01,R=10,L=Vr.adam(N);return E.add(Sh({units:100,batchSize:8,inputShape:[u.length],activation:"relu"})),E.add(Sh({units:50,activation:"relu"})),E.add(Sh({units:a.length,activation:"softmax"})),E.compile({optimizer:L,loss:"sparseCategoricalCrossentropy",metrics:["accuracy"]}),E.fit($,S,{epochs:R,callbacks:{onEpochEnd:async(O,_)=>{await yp()}}}),E}async function w(){const[$,S]=g();d=await b(Gs($),zo(S,[S.length],"float32")),setTimeout(function(){d.save("indexeddb://chat-bot"),XD(ph,r[0]="Hello! I am your virtual assistant chatbot! I can help in page navigation, and help answer any questions you have :)",r)},6e3)}function y($){let S=document.querySelector(".send-button"),E=new CustomEvent("click"),N=document.querySelector(".chat-log");$.key=="Enter"&&($.preventDefault(),o.trim()!=""&&(S==null||S.dispatchEvent(E)),v(),setTimeout(()=>{N==null||N.scrollTo(0,N==null?void 0:N.scrollHeight)},100))}async function v(){let $=document.querySelector(".send-button");const S=await zR("indexeddb://chat-bot");$==null||$.addEventListener("click",()=>{if(o.trim()!=""){r.push(o);let E=x(H0(o),u).reshape([1,u.length]),R=S.predict(E).argMax(-1).dataSync(),L=a[R],O=m[f.indexOf(L)].responses,_=O[wK(gK()*O.length)];switch(r.push(_),ph.set(r),e(0,o=""),L){case"scrollToTop":setTimeout(function(){Fi("scrollToTop")},500);break;case"scrollToBottom":setTimeout(function(){Fi("scrollToBottom")},500);break;case"scrollToMM":s.route.id!="/"&&Fo("/"),setTimeout(function(){Fi("scrollToMM")},500);break;case"scrollToSM":s.route.id!="/"&&Fo("/"),setTimeout(function(){Fi("scrollToSM")},500);break;case"scrollToDownload":s.route.id!="/"&&Fo("/"),setTimeout(function(){Fi("scrollToBottom")},500);break;case"gotoHome":Fo("/");break;case"gotoAbout":Fo("/about");break;case"gotoContact":Fo("/contact");break}}})}function C(){let $=document.querySelector(".chat-box"),S=document.querySelector(".chat-log"),E=S==null?void 0:S.lastElementChild;$==null||$.classList.toggle("hide"),i=="/chat-button.svg"?(e(1,i="/x-icon.svg"),setTimeout(function(){E==null||E.scrollIntoView({behavior:"smooth"})},100)):i=="/x-icon.svg"&&e(1,i="/chat-button.svg")}KD(()=>{w()});function D(){o=this.value,e(0,o)}return[o,i,r,y,C,D,()=>C()]}class JK extends YD{constructor(t){super(),ZD(this,t,VK,zK,qD,{})}}export{JK as C,Pm as e};
