import{s as qe,d as Ue,o as be,e as ge,c as ee,n as ue}from"../chunks/scheduler.6db7f009.js";import{S as Ve,i as Ie,g as m,s as C,r as Ee,h as d,j as q,x as H,c as P,f as u,u as Fe,k as g,a as w,y as o,v as Te,z as He,d as Ae,t as ze,A as re,w as Re,m as A,e as te,n as z,l as Ne}from"../chunks/index.d9468d15.js";import{e as X,C as Ge}from"../chunks/chat-bot.70371bcc.js";import{d as de}from"../chunks/store.6cbc4a4d.js";function ye(l,e,i){const t=l.slice();return t[29]=e[i],t[31]=i,t}function _e(l,e,i){const t=l.slice();return t[32]=e[i],t[34]=i,t}function xe(l,e,i){const t=l.slice();return t[35]=e[i],t[37]=i,t}function we(l,e,i){const t=l.slice();return t[29]=e[i],t[31]=i,t}function De(l,e,i){const t=l.slice();return t[32]=e[i],t[34]=i,t}function Ce(l,e,i){const t=l.slice();return t[35]=e[i],t[37]=i,t}function je(l){let e,i,t="Syntax: ",r=l[32].syntax+"",b,a,h,_="<b>Example:</b>",p,n,v,s,L,k,S,V;return{c(){e=m("p"),i=m("b"),i.textContent=t,b=A(r),a=C(),h=m("p"),h.innerHTML=_,p=C(),n=m("img"),s=C(),L=m("br"),k=C(),S=m("img"),this.h()},l(c){e=d(c,"P",{});var f=q(e);i=d(f,"B",{"data-svelte-h":!0}),H(i)!=="svelte-17al1vv"&&(i.textContent=t),b=z(f,r),f.forEach(u),a=P(c),h=d(c,"P",{"data-svelte-h":!0}),H(h)!=="svelte-1pdkta5"&&(h.innerHTML=_),p=P(c),n=d(c,"IMG",{class:!0,src:!0,alt:!0}),s=P(c),L=d(c,"BR",{}),k=P(c),S=d(c,"IMG",{class:!0,src:!0,alt:!0}),this.h()},h(){g(n,"class","disp-img-2"),ee(n.src,v="/images/"+l[32].img+"-example.png")||g(n,"src",v),g(n,"alt","udf_img_example"),g(S,"class","disp-img"),ee(S.src,V="/images/"+l[32].img+".png")||g(S,"src",V),g(S,"alt","udf_img")},m(c,f){w(c,e,f),o(e,i),o(e,b),w(c,a,f),w(c,h,f),w(c,p,f),w(c,n,f),w(c,s,f),w(c,L,f),w(c,k,f),w(c,S,f)},p:ue,d(c){c&&(u(e),u(a),u(h),u(p),u(n),u(s),u(L),u(k),u(S))}}}function $e(l){let e,i=X(l[5][l[32].index]),t=[];for(let r=0;r<i.length;r+=1)t[r]=Pe(Ce(l,i,r));return{c(){for(let r=0;r<t.length;r+=1)t[r].c();e=te()},l(r){for(let b=0;b<t.length;b+=1)t[b].l(r);e=te()},m(r,b){for(let a=0;a<t.length;a+=1)t[a]&&t[a].m(r,b);w(r,e,b)},p(r,b){if(b[0]&33){i=X(r[5][r[32].index]);let a;for(a=0;a<i.length;a+=1){const h=Ce(r,i,a);t[a]?t[a].p(h,b):(t[a]=Pe(h),t[a].c(),t[a].m(e.parentNode,e))}for(;a<t.length;a+=1)t[a].d(1);t.length=i.length}},d(r){r&&u(e),re(t,r)}}}function Pe(l){let e,i,t,r,b=l[37]+1+"",a,h,_=l[35].function+"",p,n,v,s,L="Syntax: ",k=l[35].syntax+"",S,V,c,f="<b>Example:</b>",y,B,$,F,G,W,U,Y,J,O;return{c(){e=m("details"),i=m("summary"),t=m("b"),r=A("Case "),a=A(b),h=A(": "),p=A(_),n=C(),v=m("p"),s=m("b"),s.textContent=L,S=A(k),V=C(),c=m("p"),c.innerHTML=f,y=C(),B=m("img"),F=C(),G=m("br"),W=C(),U=m("img"),J=C(),O=m("br"),this.h()},l(I){e=d(I,"DETAILS",{class:!0,style:!0});var M=q(e);i=d(M,"SUMMARY",{class:!0});var K=q(i);t=d(K,"B",{});var T=q(t);r=z(T,"Case "),a=z(T,b),h=z(T,": "),p=z(T,_),T.forEach(u),K.forEach(u),n=P(M),v=d(M,"P",{});var j=q(v);s=d(j,"B",{"data-svelte-h":!0}),H(s)!=="svelte-17al1vv"&&(s.textContent=L),S=z(j,k),j.forEach(u),V=P(M),c=d(M,"P",{"data-svelte-h":!0}),H(c)!=="svelte-1pdkta5"&&(c.innerHTML=f),y=P(M),B=d(M,"IMG",{class:!0,src:!0,alt:!0}),F=P(M),G=d(M,"BR",{}),W=P(M),U=d(M,"IMG",{class:!0,src:!0,alt:!0}),J=P(M),M.forEach(u),O=d(I,"BR",{}),this.h()},h(){g(i,"class","udf-summary"),g(B,"class","disp-img-2"),ee(B.src,$="/images/"+l[32].img+"-"+(l[37]+1)+"-example.png")||g(B,"src",$),g(B,"alt","udf_img_example"),g(U,"class","disp-img"),ee(U.src,Y="/images/"+l[32].img+"-"+(l[37]+1)+".png")||g(U,"src",Y),g(U,"alt","udf_img"),g(e,"class","name no-cursor"),Ne(e,"font-size","large")},m(I,M){w(I,e,M),o(e,i),o(i,t),o(t,r),o(t,a),o(t,h),o(t,p),o(e,n),o(e,v),o(v,s),o(v,S),o(e,V),o(e,c),o(e,y),o(e,B),o(e,F),o(e,G),o(e,W),o(e,U),o(e,J),w(I,O,M)},p:ue,d(I){I&&(u(e),u(O))}}}function Le(l){let e,i,t,r=l[32].name+"",b,a,h,_,p="Function: ",n=l[32].purpose+"",v,s,L,k;function S(f,y){return f[4].includes(f[32].img)?$e:je}let c=S(l)(l);return{c(){e=m("details"),i=m("summary"),t=m("b"),b=A(r),a=C(),h=m("p"),_=m("b"),_.textContent=p,v=A(n),s=C(),c.c(),L=C(),k=m("br"),this.h()},l(f){e=d(f,"DETAILS",{class:!0});var y=q(e);i=d(y,"SUMMARY",{class:!0});var B=q(i);t=d(B,"B",{});var $=q(t);b=z($,r),$.forEach(u),B.forEach(u),a=P(y),h=d(y,"P",{});var F=q(h);_=d(F,"B",{"data-svelte-h":!0}),H(_)!=="svelte-mid3di"&&(_.textContent=p),v=z(F,n),F.forEach(u),s=P(y),c.l(y),L=P(y),y.forEach(u),k=d(f,"BR",{}),this.h()},h(){g(i,"class","udf-summary"),g(e,"class","name no-cursor udf-infos")},m(f,y){w(f,e,y),o(e,i),o(i,t),o(t,b),o(e,a),o(e,h),o(h,_),o(h,v),o(e,s),c.m(e,null),o(e,L),w(f,k,y)},p(f,y){c.p(f,y)},d(f){f&&(u(e),u(k)),c.d()}}}function Me(l){let e,i=l[29]+"",t,r,b,a,h,_=X(l[0][l[31]]),p=[];for(let n=0;n<_.length;n+=1)p[n]=Le(De(l,_,n));return{c(){e=m("h2"),t=A(i),r=m("br"),b=m("br"),a=C();for(let n=0;n<p.length;n+=1)p[n].c();h=te(),this.h()},l(n){e=d(n,"H2",{class:!0});var v=q(e);t=z(v,i),v.forEach(u),r=d(n,"BR",{}),b=d(n,"BR",{}),a=P(n);for(let s=0;s<p.length;s+=1)p[s].l(n);h=te(),this.h()},h(){g(e,"class","add_grad_3")},m(n,v){w(n,e,v),o(e,t),w(n,r,v),w(n,b,v),w(n,a,v);for(let s=0;s<p.length;s+=1)p[s]&&p[s].m(n,v);w(n,h,v)},p(n,v){if(v[0]&49){_=X(n[0][n[31]]);let s;for(s=0;s<_.length;s+=1){const L=De(n,_,s);p[s]?p[s].p(L,v):(p[s]=Le(L),p[s].c(),p[s].m(h.parentNode,h))}for(;s<p.length;s+=1)p[s].d(1);p.length=_.length}},d(n){n&&(u(e),u(r),u(b),u(a),u(h)),re(p,n)}}}function Ye(l){let e,i,t="Syntax: ",r=l[32].syntax+"",b,a,h,_="<b>Example:</b>",p,n,v,s,L,k,S,V;return{c(){e=m("p"),i=m("b"),i.textContent=t,b=A(r),a=C(),h=m("p"),h.innerHTML=_,p=C(),n=m("img"),s=C(),L=m("br"),k=C(),S=m("img"),this.h()},l(c){e=d(c,"P",{});var f=q(e);i=d(f,"B",{"data-svelte-h":!0}),H(i)!=="svelte-17al1vv"&&(i.textContent=t),b=z(f,r),f.forEach(u),a=P(c),h=d(c,"P",{"data-svelte-h":!0}),H(h)!=="svelte-1pdkta5"&&(h.innerHTML=_),p=P(c),n=d(c,"IMG",{class:!0,src:!0,alt:!0}),s=P(c),L=d(c,"BR",{}),k=P(c),S=d(c,"IMG",{class:!0,src:!0,alt:!0}),this.h()},h(){g(n,"class","disp-img-2"),ee(n.src,v="/images/"+l[32].img+"-example.png")||g(n,"src",v),g(n,"alt","udf_img_example"),g(S,"class","disp-img"),ee(S.src,V="/images/"+l[32].img+".png")||g(S,"src",V),g(S,"alt","udf_img")},m(c,f){w(c,e,f),o(e,i),o(e,b),w(c,a,f),w(c,h,f),w(c,p,f),w(c,n,f),w(c,s,f),w(c,L,f),w(c,k,f),w(c,S,f)},p:ue,d(c){c&&(u(e),u(a),u(h),u(p),u(n),u(s),u(L),u(k),u(S))}}}function Oe(l){let e,i=X(l[5][l[32].index]),t=[];for(let r=0;r<i.length;r+=1)t[r]=Se(xe(l,i,r));return{c(){for(let r=0;r<t.length;r+=1)t[r].c();e=te()},l(r){for(let b=0;b<t.length;b+=1)t[b].l(r);e=te()},m(r,b){for(let a=0;a<t.length;a+=1)t[a]&&t[a].m(r,b);w(r,e,b)},p(r,b){if(b[0]&36){i=X(r[5][r[32].index]);let a;for(a=0;a<i.length;a+=1){const h=xe(r,i,a);t[a]?t[a].p(h,b):(t[a]=Se(h),t[a].c(),t[a].m(e.parentNode,e))}for(;a<t.length;a+=1)t[a].d(1);t.length=i.length}},d(r){r&&u(e),re(t,r)}}}function Se(l){let e,i,t,r,b=l[37]+1+"",a,h,_=l[35].function+"",p,n,v,s,L="Syntax: ",k=l[35].syntax+"",S,V,c,f="<b>Example:</b>",y,B,$,F,G,W,U,Y,J,O;return{c(){e=m("details"),i=m("summary"),t=m("b"),r=A("Case "),a=A(b),h=A(": "),p=A(_),n=C(),v=m("p"),s=m("b"),s.textContent=L,S=A(k),V=C(),c=m("p"),c.innerHTML=f,y=C(),B=m("img"),F=C(),G=m("br"),W=C(),U=m("img"),J=C(),O=m("br"),this.h()},l(I){e=d(I,"DETAILS",{class:!0});var M=q(e);i=d(M,"SUMMARY",{class:!0});var K=q(i);t=d(K,"B",{});var T=q(t);r=z(T,"Case "),a=z(T,b),h=z(T,": "),p=z(T,_),T.forEach(u),K.forEach(u),n=P(M),v=d(M,"P",{});var j=q(v);s=d(j,"B",{"data-svelte-h":!0}),H(s)!=="svelte-17al1vv"&&(s.textContent=L),S=z(j,k),j.forEach(u),V=P(M),c=d(M,"P",{"data-svelte-h":!0}),H(c)!=="svelte-1pdkta5"&&(c.innerHTML=f),y=P(M),B=d(M,"IMG",{class:!0,src:!0,alt:!0}),F=P(M),G=d(M,"BR",{}),W=P(M),U=d(M,"IMG",{class:!0,src:!0,alt:!0}),J=P(M),M.forEach(u),O=d(I,"BR",{}),this.h()},h(){g(i,"class","udf-summary"),g(B,"class","disp-img-2"),ee(B.src,$="/images/"+l[32].img+"-"+(l[37]+1)+"-example.png")||g(B,"src",$),g(B,"alt","udf_img_example"),g(U,"class","disp-img"),ee(U.src,Y="/images/"+l[32].img+"-"+(l[37]+1)+".png")||g(U,"src",Y),g(U,"alt","udf_img"),g(e,"class","name no-cursor")},m(I,M){w(I,e,M),o(e,i),o(i,t),o(t,r),o(t,a),o(t,h),o(t,p),o(e,n),o(e,v),o(v,s),o(v,S),o(e,V),o(e,c),o(e,y),o(e,B),o(e,F),o(e,G),o(e,W),o(e,U),o(e,J),w(I,O,M)},p:ue,d(I){I&&(u(e),u(O))}}}function Be(l){let e,i,t,r=l[32].name+"",b,a,h,_,p="Function: ",n=l[32].purpose+"",v,s,L,k;function S(f,y){return f[4].includes(f[32].img)?Oe:Ye}let c=S(l)(l);return{c(){e=m("details"),i=m("summary"),t=m("b"),b=A(r),a=C(),h=m("p"),_=m("b"),_.textContent=p,v=A(n),s=C(),c.c(),L=C(),k=m("br"),this.h()},l(f){e=d(f,"DETAILS",{class:!0});var y=q(e);i=d(y,"SUMMARY",{class:!0});var B=q(i);t=d(B,"B",{});var $=q(t);b=z($,r),$.forEach(u),B.forEach(u),a=P(y),h=d(y,"P",{});var F=q(h);_=d(F,"B",{"data-svelte-h":!0}),H(_)!=="svelte-mid3di"&&(_.textContent=p),v=z(F,n),F.forEach(u),s=P(y),c.l(y),L=P(y),y.forEach(u),k=d(f,"BR",{}),this.h()},h(){g(i,"class","udf-summary"),g(e,"class","name no-cursor udf-infos")},m(f,y){w(f,e,y),o(e,i),o(i,t),o(t,b),o(e,a),o(e,h),o(h,_),o(h,v),o(e,s),c.m(e,null),o(e,L),w(f,k,y)},p(f,y){c.p(f,y)},d(f){f&&(u(e),u(k)),c.d()}}}function ke(l){let e,i=l[29]+"",t,r,b,a,h,_=X(l[2][l[31]]),p=[];for(let n=0;n<_.length;n+=1)p[n]=Be(_e(l,_,n));return{c(){e=m("h2"),t=A(i),r=m("br"),b=m("br"),a=C();for(let n=0;n<p.length;n+=1)p[n].c();h=te(),this.h()},l(n){e=d(n,"H2",{class:!0});var v=q(e);t=z(v,i),v.forEach(u),r=d(n,"BR",{}),b=d(n,"BR",{}),a=P(n);for(let s=0;s<p.length;s+=1)p[s].l(n);h=te(),this.h()},h(){g(e,"class","add_grad_3")},m(n,v){w(n,e,v),o(e,t),w(n,r,v),w(n,b,v),w(n,a,v);for(let s=0;s<p.length;s+=1)p[s]&&p[s].m(n,v);w(n,h,v)},p(n,v){if(v[0]&52){_=X(n[2][n[31]]);let s;for(s=0;s<_.length;s+=1){const L=_e(n,_,s);p[s]?p[s].p(L,v):(p[s]=Be(L),p[s].c(),p[s].m(h.parentNode,h))}for(;s<p.length;s+=1)p[s].d(1);p.length=_.length}},d(n){n&&(u(e),u(r),u(b),u(a),u(h)),re(p,n)}}}function We(l){let e,i,t,r='<h1 class="add_grad main-text">You will never think about buying UDFs ever again</h1>',b,a,h="Get access to high quality UDFs for <u>free</u>",_,p,n,v="<h1>Explore the programs</h1>",s,L,k="<span></span> <span></span> <span></span>",S,V,c='<div class="intro hidden"><br id="scrollToHere_1"/> <h1 class="animate">Introducing our revolutionary UDFs...</h1></div> <div class="row_1"><div class="left_row_1 hidden"><img src="/images/quadroots_ad.jpg" class="animate sample-img" id="ad_img" alt="quadroots"/></div> <div class="right_row_1 hidden"><div class="content_1 animate"><div><ul><li><h3 class="add_grad_3">Unparalleled Speed</h3> <h5>Get the answer in mere <u>seconds</u></h5></li> <li><h3 class="add_grad_3">Full Worked Solutions</h3> <h5>Our UDFs show all working needed to gain <u class="change-under">full marks</u></h5></li> <li><h3 class="add_grad_3">Highly Competitive Price of $0.00</h3> <h5>They are completely <u>free</u>!</h5></li></ul></div></div></div></div>',f,y,B,$='<br id="scrollToMM"/> <h1>Mathematical Methods UDFs</h1>',F,G,W,U,Y,J='<br id="scrollToSM"/> <h1>Specialist Mathematics UDFs</h1>',O,I,M,K,T,j,oe='<div class="intro_4"><h1>Download</h1> <h3>UDF Files:</h3> <div class="link-text"><a class="dwn-text-1" href="/MM3&amp;4_UDFs_v3.0.zip" download=""><h2 class="dwn-text-2"><u>Download Mathematical Methods UDFs</u></h2></a> <a class="dwn-text-1" href="/SM3&amp;4_UDFs_v3.1.zip" download=""><h2 class="dwn-text-2"><u>Download Specialist Mathematics UDFs</u></h2></a></div> <p>Instructions on how to install the UDFs are available in <b><a href="/contact" class="stay">Contact Us</a></b> under &quot;How do I install the UDFs?&quot;</p> <p><b>Note: </b>Latest version is v3.0. for MM and v3.1 for SM. Please ensure that the version you install is up to date. <b>Important:</b> Due to limited time the new UDFs have not been extensively tested.</p> <h6>Latest Changes (v2.1 - v3.1)</h6> <ul><li><p><b>Note:</b> MM3&amp;4 UDFs are intended for MM3&amp;4, inputting SM3&amp;4 functions may result in unexpected behaviour</p></li> <li><p>Added new UDFs <b>sm_calc\\para_tangnorm</b>, <b>sm_calc\\para_2nd_deriv</b>, <b>sm_calc\\para_closep</b>, <b>sm_comp\\segment</b>, <b>sm_calc\\conic</b>, <b>mm_misc\\triginfo</b></p></li> <li><p>Added warnings to new UDFs, and UDFs with bugs.</p></li> <li><p>Fixed working out for sm_pr\\confint, accidentally made it print out the lower bound twice (oops)</p></li> <li><p>Bug fixes to <b>sm_linalg\\intslpl</b> and <b>sm_linalg\\ints2pl</b> (fixed issues when letting z = t gave weird solution)</p></li> <li><p>Bug fix to <b>sm_linalg\\dist2l</b> (fixed parallel line detection)</p></li> <li><p>Bug fix to <b>sm_kin\\suvat</b> and <b>sm_pr\\prerror</b> (fixed working out so it formated correctly)</p></li> <li><p>Added working out to <b>sm_linalg\\ints2pl</b></p></li> <li><p>Added E(X), Var(X), Sd(X) to <b>mm_dpr/samplebinom</b> and <b>mm_dpr/samplehypergeo</b></p></li> <li><p>Made <b>sm_linalg\\ints</b> UDFs find acute angle, as that&#39;s what questions usually ask for</p></li></ul> <h3>UDF Guides:</h3> <a class="dwn-text-1" href="/MM_UDF_Guide_v2.1.pdf" download=""><h2 class="dwn-text-2"><u>Mathematical Methods UDF Guide</u></h2></a> <a class="dwn-text-1" href="/SM_UDF_Guide_v2.0.pdf" download=""><h2 class="dwn-text-2"><u>Specialist Mathematics UDF Guide</u></h2></a> <p><b>Note: </b>The latest version is v2.0. for SM and v2.1 for MM Please ensure that the version you install is up to date.</p> <h3>Version Updates &amp; Mailing List</h3> <p><b>New version v2: </b>New version released! 10 new UDFs :D also some bug fixes included. Asymtpote UDF issue with exponentials resolved!</p> <p>Join our mailing list so you don&#39;t miss the latest updates :D sign up <a class="dwn-text=1" href="https://forms.gle/hzjq4hDd44cHJWxg6">here</a></p> <h3>Program Bugs:</h3> <p>While the vast majority of the programs work fine, it&#39;s difficult for us to determine every single bug.</p> <p>If you encounter any issues or difficulties, please contact us and we will try to help you out.</p> <h5>Bugs Unresolved:</h5> <ul><li><p>Inverse intersections (invints) sometimes does not give accurate included/excluded values due to CAS approximation. Please make sure to <b>verify</b> the results graphically</p></li> <li><p>nroots, nstps, npois don&#39;t work for <b>non-polynomial</b> functions, documentation has been updated to reflect this.</p></li> <li><p>Domain and Range function does not handle parameters well</p></li> <li><p>Domain and Range may give inaccurate results if the domain is not restricted for complicated functions.</p></li> <li><p>Domain and Range function does not handle rational functions well. Beware of auto-simplification.</p></li> <li><p>Domain and Range function may round undefined endpoints into defined endpoints.</p></li></ul></div>',Q,ne,le,me,fe,ae=X(l[1]),R=[];for(let D=0;D<ae.length;D+=1)R[D]=Me(we(l,ae,D));let se=X(l[3]),N=[];for(let D=0;D<se.length;D+=1)N[D]=ke(ye(l,se,D));return ne=new Ge({}),{c(){e=m("div"),i=m("div"),t=m("div"),t.innerHTML=r,b=C(),a=m("h1"),a.innerHTML=h,_=C(),p=m("div"),n=m("button"),n.innerHTML=v,s=C(),L=m("div"),L.innerHTML=k,S=C(),V=m("div"),V.innerHTML=c,f=C(),y=m("div"),B=m("div"),B.innerHTML=$,F=C(),G=m("div");for(let D=0;D<R.length;D+=1)R[D].c();W=C(),U=m("div"),Y=m("div"),Y.innerHTML=J,O=C(),I=m("div");for(let D=0;D<N.length;D+=1)N[D].c();M=C(),K=m("br"),T=C(),j=m("div"),j.innerHTML=oe,Q=C(),Ee(ne.$$.fragment),this.h()},l(D){e=d(D,"DIV",{class:!0,id:!0});var E=q(e);i=d(E,"DIV",{class:!0});var x=q(i);t=d(x,"DIV",{class:!0,"data-svelte-h":!0}),H(t)!=="svelte-8cmmle"&&(t.innerHTML=r),b=P(x),a=d(x,"H1",{class:!0,"data-svelte-h":!0}),H(a)!=="svelte-n57la1"&&(a.innerHTML=h),_=P(x),p=d(x,"DIV",{class:!0});var Z=q(p);n=d(Z,"BUTTON",{class:!0,"data-svelte-h":!0}),H(n)!=="svelte-1l612m1"&&(n.innerHTML=v),Z.forEach(u),s=P(x),L=d(x,"DIV",{class:!0,"data-svelte-h":!0}),H(L)!=="svelte-1rpu3qi"&&(L.innerHTML=k),x.forEach(u),S=P(E),V=d(E,"DIV",{class:!0,"data-svelte-h":!0}),H(V)!=="svelte-re39ls"&&(V.innerHTML=c),f=P(E),y=d(E,"DIV",{class:!0});var ce=q(y);B=d(ce,"DIV",{class:!0,"data-svelte-h":!0}),H(B)!=="svelte-1avxz1r"&&(B.innerHTML=$),F=P(ce),G=d(ce,"DIV",{class:!0});var he=q(G);for(let ie=0;ie<R.length;ie+=1)R[ie].l(he);he.forEach(u),ce.forEach(u),W=P(E),U=d(E,"DIV",{class:!0});var pe=q(U);Y=d(pe,"DIV",{class:!0,"data-svelte-h":!0}),H(Y)!=="svelte-183bk8v"&&(Y.innerHTML=J),O=P(pe),I=d(pe,"DIV",{class:!0});var ve=q(I);for(let ie=0;ie<N.length;ie+=1)N[ie].l(ve);ve.forEach(u),pe.forEach(u),M=P(E),K=d(E,"BR",{id:!0}),T=P(E),j=d(E,"DIV",{class:!0,"data-svelte-h":!0}),H(j)!=="svelte-r6jwb5"&&(j.innerHTML=oe),E.forEach(u),Q=P(D),Fe(ne.$$.fragment,D),this.h()},h(){g(t,"class","main_display"),g(a,"class","sub-main-text"),g(n,"class","back_grad exp-prgm-button"),g(p,"class","exp_button"),g(L,"class","down_arrow"),g(i,"class","centre_main"),g(V,"class","main_display"),g(B,"class","intro_2"),g(G,"class","mm-udf-info"),g(y,"class","main_display"),g(Y,"class","intro_3"),g(I,"class","sm-udf-info"),g(U,"class","main_display"),g(K,"id","scrollToBottom"),g(j,"class","main_display"),g(e,"class","info"),g(e,"id","scrollToTop")},m(D,E){w(D,e,E),o(e,i),o(i,t),o(i,b),o(i,a),o(i,_),o(i,p),o(p,n),o(i,s),o(i,L),o(e,S),o(e,V),o(e,f),o(e,y),o(y,B),o(y,F),o(y,G);for(let x=0;x<R.length;x+=1)R[x]&&R[x].m(G,null);o(e,W),o(e,U),o(U,Y),o(U,O),o(U,I);for(let x=0;x<N.length;x+=1)N[x]&&N[x].m(I,null);o(e,M),o(e,K),o(e,T),o(e,j),w(D,Q,E),Te(ne,D,E),le=!0,me||(fe=He(n,"click",l[6]),me=!0)},p(D,E){if(E[0]&51){ae=X(D[1]);let x;for(x=0;x<ae.length;x+=1){const Z=we(D,ae,x);R[x]?R[x].p(Z,E):(R[x]=Me(Z),R[x].c(),R[x].m(G,null))}for(;x<R.length;x+=1)R[x].d(1);R.length=ae.length}if(E[0]&60){se=X(D[3]);let x;for(x=0;x<se.length;x+=1){const Z=ye(D,se,x);N[x]?N[x].p(Z,E):(N[x]=ke(Z),N[x].c(),N[x].m(I,null))}for(;x<N.length;x+=1)N[x].d(1);N.length=se.length}},i(D){le||(Ae(ne.$$.fragment,D),le=!0)},o(D){ze(ne.$$.fragment,D),le=!1},d(D){D&&(u(e),u(Q)),re(R,D),re(N,D),Re(ne,D),me=!1,fe()}}}function Xe(l){var e;(e=document.getElementById(l))==null||e.scrollIntoView(!0)}function Je(l,e,i){let t;return Ue(l,de,T=>i(7,t=T)),be(()=>{const T=new IntersectionObserver(oe=>{oe.forEach(Q=>{Q.isIntersecting&&(Q.target.classList.add("show-animate"),Q.target.classList.remove("hidden-animate"))})});document.querySelectorAll(".hidden").forEach(oe=>T.observe(oe))}),be(()=>{document.body.classList.remove("about-theme"),document.body.classList.add("home-theme"),document.body.classList.remove("contact-theme"),document.body.classList.contains("dark-mode")?ge(de,t={svg_id:"/sun.svg",logo_id:"/logo-dark.svg",compass_id:"/compass-dark.svg"},t):ge(de,t={svg_id:"/moon.svg",logo_id:"/logo-light.svg",compass_id:"/compass-light.svg"},t)}),[[[{name:"Average Rate of Change (avgroc)",purpose:"Determines the average rate of change of a function",syntax:"avgroc(function, variable, lower, upper)",img:"avgroc"},{name:"Average Value (avgval)",purpose:"Calculates the average value of a function",syntax:"avgval(function, variable, lower, upper)",img:"avgval"},{name:"Bound Area (boundarea)",purpose:"Determines the area bound by two graphs (if any) across their maximal domains",syntax:"boundarea(function1, function2, variable)",img:"boundarea"},{name:"Bound Area with domain (boundaread)",purpose:"Determines the bound area between two functions in a restricted domain",syntax:"boundaread(function1, function2, variable, lower, upper)",img:"boundaread"},{name:"Integral Solve (intsolve)",purpose:"Determines the answer for the integration multiple choice questions",syntax:"intsolve({lower1, upper1, value1, lower2, upper2, value2}, {transformations}, {lower3, upper3})",img:"intsolve",index:0,cases:3},{name:"Newton's Method (newtons)",purpose:"Estimates the root of a function using newton's method",syntax:"newtons(function, variable, x0, iterations)",img:"newtons"},{name:"Number of Roots (nroot)",purpose:"Determines the value(s) of a parameter required for a specified number of roots.",syntax:"nroot(polynomial, variable, parameter, number of roots)",img:"nroot"},{name:"Number of Stationary Points (nstp)",purpose:"Determines the value(s) of a parameter required for a specified number of stationary points.",syntax:"nstp(polynomial, variable, parameter, number of stationary points)",img:"nstp"},{name:"Number of Points of Inflection (npoi)",purpose:"Determines the value(s) of a parameter required for a specified number of points of inflection.",syntax:"npoi(polynomial, variable, parameter, number of points of inflection)",img:"npoi"},{name:"Points of Inflection (pois)",purpose:"Determines the points of inflection of a function",syntax:"pois(function, variable)",img:"pois"},{name:"Sign Table (signtab)",purpose:"Uses a sign table to determine the stationary points of a function and their nature",syntax:"signtab(function, variable)",img:"signtab"},{name:"Stationary Points (stps)",purpose:"Determines the stationary points of a function",syntax:"stps(function, variable)",img:"stps"},{name:"Tangent Solve (tangsolve)",purpose:"Determines the equation of the tangents to a function which pass through a specified point",syntax:"tangsolve(function, variable, x-coordinate, y-coordinate)",img:"tangsolve"},{name:"Trapezoid Approximation (trapapprox)",purpose:"Approximates an integral using the trapezoidal rule",syntax:"trapapprox(function, variable, lower, upper, number of trapezia)",img:"trapapprox"}],[{name:"Continuous Conditional Probability (ccondpr)",purpose:"Determines conditional probability for a continuous distribution",syntax:"ccondpr(Probability Density Function, Lower Bound, Upper Bound)",img:"ccondpr",index:1,cases:2},{name:"Confidence Interval (confint)",purpose:"Determines a confidence interval as well as the z-score, margin of error and standard deviation",syntax:"confint(Sample Size,P_hat, . confidence)",img:"confint"},{name:"Confidence Interval Solve (confintsolve)",purpose:"Determines the sample size, standard deviation or percentage confidence depending on the provided data",syntax:"confintsolve(Lower Bound, Upper Bound, Sample Size or Sample Standard Deviation or . Confidence)",img:"confintsolve"},{name:"Continuous Distribution Information (continfo)",purpose:"Determines the expected value, mean, variance, standard deviation of a continuous probability distribution",syntax:"continfo(function, variable, lower, upper)",img:"continfo"},{name:"Inverse Normal (invnormvals)",purpose:"Determines the left, right and centre possibilities for probability of a distribution",syntax:"invnormvals(mean, standard deviation, probability)",img:"invnormvals"},{name:"Normal Solve (normsolve)",purpose:"Determines the mean and standard deviation for lower and upper type questions",syntax:"normsolve(Lower, Probability of Lower, Upper, Probability of Upper)",img:"normsolve",index:2,cases:5}],[{name:"Binomial Distribution Information (binominfo)",purpose:"Determines the expected value, variance, standard deviation, sample expected value, and sample standard deviation for a binomial distribution",syntax:"binominfo(Sample Size, Probability of Success)",img:"binominfo"},{name:"Binomial Solve (binomsolve)",purpose:"Determines the number of trials required to achieve a certain probability",syntax:"binomsolve(outcome, probability of success, threshold value)",img:"binomsolve"},{name:"Discrete Conditional Probability (dcondpr)",purpose:"Determines conditional probability for a discrete distribution",img:"dcondpr",index:3,cases:3},{name:"Hypergeometric Cumulative Probability Function (hypergeocdf)",purpose:"Determines the probability of selecting items without replacement, but over an interval of outcomes",syntax:"hypergeocdf(sample size, population size, number of successful items, lower bound, upper bound)",img:"hypergeocdf"},{name:"Hypergeometric Probability Density Function (hypergeopdf)",purpose:"Determines the probability of selecting items without replacement, but for specific outcomes",syntax:"hypergeopdf(sample size, population size, number of successful items, outcome)",img:"hypergeopdf"},{name:"Inverse Binomial (invbinomial)",purpose:"Determines the outcome required to achieve the probability",syntax:"invbinomial(number of trials, probability of success, known probability value)",img:"invbinomial"},{name:"Probability Table (prtable)",purpose:"Determines the mean, variance, standard deviation of a probability table",syntax:"prtable({outcomes}, {probabilities})",img:"prtable"},{name:"Sample Distribution Binomial (samplebinom)",purpose:"Determines the distribution for the sample proportion of a binomially distributed sample",syntax:"samplebinom(Sample Size, Probability of Success)",img:"samplebinom"},{name:"Sample Binomial Probability (samplebinompr)",purpose:"Determines the probability for the sample proportion for a binomially distributed sample",syntax:"samplebinompr(Sample Size, Probability of Success, Lower, Upper)",img:"samplebinompr"},{name:"Sample Distribution Hypergeometric (samplehypergeo)",purpose:"Determines the distribution for the sample proportion of a hypergeometrically distributed sample",syntax:"samplehypergeo(Sample Size, Population Size, Number Successful)",img:"samplehypergeo"},{name:"Sample Hypergeometric probability (samplehyppr)",purpose:"Determines the probability for the sample proportion for a hypergeometrically distributed sample",syntax:"samplehyppr(Sample Size, Population Size, Number Successful, Lower, Upper)",img:"samplehyppr"}],[{name:"Asymptotes (asymp)",purpose:"Determines the vertical and horizontal asymptotes of a function",syntax:"asymp(function, variable)",img:"asymp"},{name:"Composite Check (ccheck)",purpose:"Checks whether a composite function is valid, and the maximal domain required for the composite to be valid.",syntax:"ccheck(function 1, function 2)",img:"ccheck"},{name:"Discriminant (discrim)",purpose:"Calculates the discriminant of an inputted quadratic expression",syntax:"discrim(quadratic Expr, variable)",img:"discrim"},{name:"Domain and Range (domrang)",purpose:"Determines the domain and range of a function",syntax:"domrang(function, variable)",img:"domrang"},{name:"Intercepts (intercepts)",purpose:"Finding the x and y intercepts of a function",syntax:"intercepts(function,variable)",img:"intercepts"},{name:"Intersects (intersects)",purpose:"Determines the points of intersection of two functions across their maximal domains.",syntax:"intersects(function1,function2,variable)",img:"intersects"},{name:"Intersects with domain (intersectsd)",purpose:"Determines the points of intersection between two functions in a restricted domain",syntax:"intersectsd(function1, function2, variable, lower, upper)",img:"intersectsd"},{name:"Inverse Function (inverse)",purpose:"Determines the inverse of a function",syntax:"inverse(function, variable, x in domain of f)",img:"inverse"},{name:"Inverse Intersections (invints)",purpose:"Determines the values of a parameter, k, required for a function and its inverse function to have a certain number of intersections",syntax:"invints(function, number of intersections with inverse)",img:"invints",index:9,cases:7},{name:"Angle Between Two Lines (lineang)",purpose:"Determines the angle between two lines in degrees (Assumes CAS in raidans mode)",syntax:"lineang(Line 1, Line 2, Variable)",img:"lineang"},{name:"Unique, None, Infinite Solution (linesolve)",purpose:"Determines when two linear equations will have an unique, none or infinitely many solutions. Note: Equations must be in the form: Ax + By = C , rather than Ax + By + C = 0",syntax:"linesolve(Equation1, Equation2)",img:"linesolve"},{name:"Property Check (pcheck)",purpose:"Determines which function satisfies a specific property",syntax:"pcheck(function, variable, LHS, RHS)",img:"pcheck"},{name:"Point Information (pointinfo)",purpose:"Determines the gradient, perpendicular gradient, line, x and y intercepts of a line, midpoint, distance",syntax:"pointinfo(x1, y1, x2, y2)",img:"pointinfo"},{name:"Polynomial Fit (polyfit)",purpose:"Determines the equation of a polynomial which passes through a set of points.",syntax:"polyfit({x1, y1, x2, y2, ...})",img:"polyfit"},{name:"Transformations (transform)",purpose:"Determines the transformed function after applying certain transformations",syntax:"transform(function, {transformations})",img:"transform"}],[{name:"Column Augment (ca)",purpose:"Converts answer into easily readable matrix form",img:"ca",index:6,cases:2},{name:"Domain Solve (dsolve)",purpose:"Solves equations in a restricted domain",syntax:"dsolve(Equation, Variable, Lower Bound, Upper Bound)",img:"dsolve"},{name:"Graph Information (graphinfo)",purpose:"Determines the endpoints, x-intercepts, y-intercepts, stationary points, points of inflection of a function",img:"graphinfo",index:7,cases:2},{name:"Rewrite (rr)",purpose:"Gets the right hand side of an equation/answer",syntax:"rr(Equation/Answer)",img:"rr"},{name:"Triganometric Solve (tsolve)",purpose:"Gives exact values of circular function equations (Ones which TiNspire cannot properly solve on its own)",img:"tsolve",index:8,cases:2}]],["Calculus","Continuous Probability","Discrete Probability","Functions","Miscellaneous"],[[{name:"Arc Length (arclength)",purpose:"Determines the arc length for parametric curve",syntax:"arclength(Position Vector, Variable, Lower Bound, Upper Bound)",img:"arclength",cases:1,index:4},{name:"Bound Volume (boundvol)",purpose:"Determines the volume of the solid formed by the region(s) bound by two curves",syntax:"boundvol(Function 1, Function 2, Variable)",img:"boundvol"},{name:"Bound Volume Domain (boundvold)",purpose:"Determines the volume of the solid formed by the region(s) bound by two curves in a restricted domain",syntax:"boundvold(Function 1, Function 2, Variable, Lower Bound, Upper Bound)",img:"boundvold"},{name:"Euler's Method (eulers)",purpose:"Uses euler's method to estimate the solution to a differential equation",syntax:"eulers(Differential Equation, Independent Variable, x0, xn, y0, step-size)",img:"eulers"},{name:"Mixing Problems (mix)",purpose:"Determines the differential equation of the mixing problem",syntax:"mix() (You will be prompted for inputs)",img:"mix"},{name:"Rational Function (rational)",purpose:"Determines holes, straight line asymptotes, and oblique asymptotes of a rational function.",syntax:"rational(numerator, denominator, variable)",img:"rational"},{name:"Surface Area of Solid (surfarea)",purpose:"Determines the surface area of a solid of revolution",syntax:"surfarea(Function, Variable, Lower Bound, Upper Bound)",img:"surfarea",cases:3,index:5}],[{name:"De Moivre's Theorem (demoiv)",purpose:"Determines the solutions to roots of unity questions",syntax:"demoiv(Power , Number)",img:"demoiv"},{name:"Circle Locus First Form (locicir1)",purpose:"Determines cartesian equation of circle loci in the form |z - a| = r",syntax:"locicir1(Point , Radius)",img:"locicir1"},{name:"Circle Locus Second Form (locicir2)",purpose:"Determines cartesian equation of circle loci in the form |z - a| = k|z - b|",syntax:"locicir2(Point 1, Point 2, k)",img:"locicir2"},{name:"Ellipse Locus (lociellp)",purpose:"Determines cartesian equation of ellipse loci",syntax:"lociellp(Point 1, Point 2, Length)",img:"lociellp"},{name:"Hyperbola Locus (locihyp)",purpose:"Determines cartesian equation of hyperbola loci",syntax:"locihyp(Point 1, Point 2, Length)",img:"locihyp"},{name:"Line Locus (lociline)",purpose:"Determines cartesian equation of line in the form |z - a| = |z - b|",syntax:"lociline(Point 1, Point 2)",img:"lociline"},{name:"Quadratic Roots (quadroots)",purpose:"Determines quadratic roots of a complex number algebraically",syntax:"quadroots(Number)",img:"quadroots"},{name:"Ray (ray)",purpose:"Determines the cartesian equation of a ray given a point and an angle",syntax:"ray(Point, Angle)",img:"ray"}],[{name:"Collision Detector (collision)",purpose:"Determines whether two particles collide and where their paths intersect",syntax:"collision(Position Vector 1, Position Vector 2)",img:"collision"},{name:"Projectile Motion (projm)",purpose:"Determines the accleration, velocity, position, max height, max displacement, return speed of a particle",syntax:"projm(Initial Position, Initial Velocity, Launch Angle, Initial Acceleration)",img:"projm"},{name:"Constant Acceleration Equations (suvat)",purpose:"Enter 3 known values and 2 unknown variables, it will determine the unknowns",syntax:"suvat(s (displacement), u (initial velocity), v (final velocity), a (acceleration), t (time))",img:"suvat"}],[{name:"Unit Vector Bisector (bisec)",purpose:"Determines the unit vector which bisects the angle between two vectors",syntax:"bisec(vector 1, vector 2)",img:"bisec"},{name:"Colinear (colin)",purpose:"Determines value(s) of a variable required for points to be collinear",syntax:"colin(Point 1, Point 2, Point 3)",img:"colin"},{name:"Linear Dependence (lindep)",purpose:"Determines value(s) of a variable required for 3 vectors to be linearly dependent",syntax:"lindep(Vector 1, Vector 2, Vector 3)",img:"lindep"},{name:"Angle between Vectors (vecang)",purpose:"Determines the angle between the two inputted vectors.",syntax:"vecang(Vector1, Vector2)",img:"vecang"},{name:"Vector Projection (vproj)",purpose:"Determines vector, scalar resolute, & angle for two inputted vectors",syntax:"vproj(Vector 1, Vector 2)",img:"vproj"}],[{name:"Line Cartesian to Vector (car2vecline)",purpose:"Converts equation of line from cartesian form to vector form",syntax:"car2vecline(line Cartesian)",img:"car2vecline"},{name:"Plane Cartesian to Vector (car2vecplane)",purpose:"Converts equation of plane from cartesian form to vector form",syntax:"car2vecplane(Plane Cartesian)",img:"car2vecplane"},{name:"Line Vector to Cartesian (vec2carline)",purpose:"Converts equation of line from vector form to cartesian form",syntax:"vec2carline(line Vector)",img:"vec2carline"},{name:"Plane Vector to Cartesian (vec2carplane)",purpose:"Converts equation of plane from vector form to cartesian form",syntax:"vec2carplane(Plane Vector)",img:"vec2carplane"},{name:"Minimum Distance between 2 lines (dist2l)",purpose:"Determines minimum distance between two lines",syntax:"dist2l(Line Vector 1, Line Vector 2)",img:"dist2l"},{name:"Minimum Distance between 2 planes (dist2pl)",purpose:"Determines minimum distance between two planes",syntax:"dist2pl(Plane Cartesian 1, Plane Cartesian 2)",img:"dist2pl"},{name:"Minimum Distance between line and plane (distlpl)",purpose:"Determines the minimum distance between a plane and line",syntax:"distlpl(Line Vector, Plane Cartesian)",img:"distlpl"},{name:"Minimum Distance between line and point (distlp)",purpose:"Determines minimum distance between a line and point",syntax:"distlp(Line Vector, Point)",img:"distlp"},{name:"Minimum Distance between plane and point (distplp)",purpose:"Determines minimum distance between a plane and point",syntax:"distlp(Plane Equation, Point)",img:"distplp"},{name:"Intersection between 2 lines (ints2l)",purpose:"Determines the point of intersection & angle between two lines",syntax:"ints2l(Line Vector 1, Line Vector 2)",img:"ints2l"},{name:"Intersection between 2 planes (ints2pl)",purpose:"Determines the line of intersection & angle between two planes",syntax:"ints2pl(Plane Cartesian 1, Plane Cartesian 2)",img:"ints2pl"},{name:"Intersection between plane and line (intslpl)",purpose:"Determines the point of intersection & angle between line and plane",syntax:"intslpl(Line Vector, Plane Cartesian)",img:"intslpl"},{name:"Create line with 2 points (line2p)",purpose:"Determines the equation of a line given two points",syntax:"line2p(Point 1, Point 2)",img:"line2p"},{name:"Create line with direction vector and point (linedp)",purpose:"Determines the equation of a line given a direction vector and point",syntax:"linedp(Direction Vector, Point)",img:"linedp"},{name:"Create plane with 3 points (plane3p)",purpose:"Determines the equation of a plane given three points",syntax:"plane3p(Point 1, Point 2, Point 3)",img:"plane3p"},{name:"Create plane with normal and point (planenp)",purpose:"Determines the equation of a plane given a normal vector and a point",syntax:"planenp(Normal Vector, Point)",img:"planenp"},{name:"Plane formed by intersecting lines (planeintl)",purpose:"Determines the equation of the plane formed by two intersecting lines",syntax:"planeintl(Line Vector 1, Line Vector 2)",img:"planeintl"}],[{name:"Sample Mean Confidence Interval (confint)",purpose:"Determines the confidence interval for the sample mean",syntax:"confint(Sample Mean, Population Standard Deviation, Sample Size, . confidence)",img:"confint_sm"},{name:"Hypothesis Testing (hyptest)",purpose:"Determines whether the null hypothesis should be rejected by calculating p-values",syntax:"hyptest() (You will be prompted for inputs)",img:"hyptest"},{name:"Probability of Error (prerror)",purpose:"Determines the probability of Type I and Type II errors occuring",syntax:"prerror() (You will be prompted for inputs)",img:"prerror"},{name:"p-value (pval)",purpose:"Determines the p-value of a hypothesis test",syntax:"pval() (You will be prompted for inputs)",img:"pval"}]],["Calculus","Complex Numbers","Kinematics","Vectors","Linear Algebra","Probability"],["intsolve","ccondpr","normsolve","dcondpr","arclength","surfarea","ca","graphinfo","tsolve","invints"],[[{function:"One integral given, find transformed integral",syntax:"intsolve({lower1,upper1, value1}, {transformations}, {lower2, upper2})"},{function:"Two integrals given, find untransformed integral",syntax:"intsolve({lower1, upper1, value1}, {lower2, upper2, value2}, {lower3, upper3})"},{function:"Two integrals given, find transformed integral",syntax:"intsolve({lower1, upper1, value1, lower2, upper2, value2}, {transformations}, {lower3, upper3})"}],[{function:"Probability density function",syntax:"ccondpr(Probability Density Function, Lower Bound, Upper Bound, Condition 1, Condition 2)"},{function:"Normal Distribution",syntax:"ccondpr(Blank String, Mean, Standard Deviation, Condition 1, Condition 2)"}],[{function:"Both Lower and Upper given",syntax:"normsolve(Lower, Probability of Lower, Upper, Probability of Upper)"},{function:"Lower and Mean given",syntax:"normsolve(Lower, Probability of Lower, Mean, Blank String)"},{function:"Lower and Standard Deviation given",syntax:"normsolve(Lower, Probability of Lower, Blank String, Standard Deviation)"},{function:"Upper and Mean given",syntax:"normsolve(Mean, Blank String, Upper, Probability of Upper)"},{function:"Upper and Standard Deviation given",syntax:"normsolve(Blank String, Standard Deviation, Upper, Probability of Upper)"}],[{function:"Binomial Distribution",syntax:"dcondpr(number of trials, probability of success, condition 1, condition 2)"},{function:"Discrete Probability Table",syntax:"dcondpr({List containing outcomes}, {List containing probabilities}, condition 1, condition 2)"},{function:"Probability Mass Function",syntax:"dcondpr({List containing outcomes}, PMF, condition 1, condition 2)"}],[{function:"Function",syntax:"arclength(Function, Variable, Lower Bound, Upper Bound)",cases:2},{function:"Parametric Equation",syntax:"arclength(Vector, Variable, Lower, Upper)"}],[{function:"Function of x rotated about x-axis",syntax:"surfarea(Function, Variable, Lower Bound, Upper Bound)"},{function:"Function of y rotated about y-axis",syntax:"surfarea(Function, Variable, Lower Bound, Upper Bound)"},{function:"Function of x rotated about y-axis",syntax:"surfarea(Function, y, x-lower, x-upper)"},{function:"Parametric Equation",syntax:"surfarea(Function, t, Lower Bound, Upper Bound)"}],[{function:"One Variable",syntax:"surfarea(Function, t, Lower Bound, Upper Bound)"},{function:"Multiple Variables (Up to 5)",syntax:"ca(Ans, {var1, var2,..., var5}"}],[{function:"Restricted Domain",syntax:"graphinfo(Function, Variable, Lower Bound, Upper Bound)"},{function:"Across Maximal Domain",syntax:"graphinfo(Function, Variable, Blank String, Random Character)"}],[{function:"Trigonometric Equation",syntax:"tsolve(Equation, Variable, Lower Bound, Upper Bound)"},{function:"Trigonometric Inequality",syntax:"tsolve(Inequality, Variable, Lower Bound, Upper Bound)"}],[{function:"Square Root",syntax:"invints(function, number of intersections with inverse)"},{function:"Parabola",syntax:"invints(function, number of intersections with inverse) *You will be prompted to enter an initial condition"},{function:"Exponential",syntax:"invints(function, number of intersections with inverse)"},{function:"Logarithm",syntax:"invints(function, number of intersections with inverse)"},{function:"Hyperbola",syntax:"invints(function, number of intersections with inverse)"},{function:"Simple Cubic (Either 0 or 1 turning points)",syntax:"invints(function, number of intersections with inverse)"},{function:"Complicated Cubic (More than 1 turning point)",syntax:"invints(function, number of intersections with inverse) *You will be prompted to enter the domain"}]],()=>Xe("scrollToHere_1")]}class tt extends Ve{constructor(e){super(),Ie(this,e,Je,We,qe,{},null,[-1,-1])}}export{tt as component};
