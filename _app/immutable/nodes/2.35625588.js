import{s as Ie,d as Ve,o as be,e as ge,c as ee,n as ue}from"../chunks/scheduler.6db7f009.js";import{S as Ee,i as qe,g as m,s as P,r as Te,h as d,j as I,x as H,c as C,f as u,u as Ue,k as g,a as w,y as o,v as Fe,z as He,d as ze,t as Ae,A as re,w as Re,m as z,e as te,n as A,l as Ne}from"../chunks/index.d9468d15.js";import{e as K,C as Ge}from"../chunks/chat-bot.bf1b9140.js";import{d as de}from"../chunks/store.6cbc4a4d.js";function _e(l,e,i){const t=l.slice();return t[29]=e[i],t[31]=i,t}function ye(l,e,i){const t=l.slice();return t[32]=e[i],t[34]=i,t}function xe(l,e,i){const t=l.slice();return t[35]=e[i],t[37]=i,t}function we(l,e,i){const t=l.slice();return t[29]=e[i],t[31]=i,t}function De(l,e,i){const t=l.slice();return t[32]=e[i],t[34]=i,t}function Pe(l,e,i){const t=l.slice();return t[35]=e[i],t[37]=i,t}function je(l){let e,i,t="Syntax: ",r=l[32].syntax+"",b,a,h,y="<b>Example:</b>",p,n,v,s,L,k,M,E;return{c(){e=m("p"),i=m("b"),i.textContent=t,b=z(r),a=P(),h=m("p"),h.innerHTML=y,p=P(),n=m("img"),s=P(),L=m("br"),k=P(),M=m("img"),this.h()},l(c){e=d(c,"P",{});var f=I(e);i=d(f,"B",{"data-svelte-h":!0}),H(i)!=="svelte-17al1vv"&&(i.textContent=t),b=A(f,r),f.forEach(u),a=C(c),h=d(c,"P",{"data-svelte-h":!0}),H(h)!=="svelte-1pdkta5"&&(h.innerHTML=y),p=C(c),n=d(c,"IMG",{class:!0,src:!0,alt:!0}),s=C(c),L=d(c,"BR",{}),k=C(c),M=d(c,"IMG",{class:!0,src:!0,alt:!0}),this.h()},h(){g(n,"class","disp-img-2"),ee(n.src,v="/images/"+l[32].img+"-example.png")||g(n,"src",v),g(n,"alt","udf_img_example"),g(M,"class","disp-img"),ee(M.src,E="/images/"+l[32].img+".png")||g(M,"src",E),g(M,"alt","udf_img")},m(c,f){w(c,e,f),o(e,i),o(e,b),w(c,a,f),w(c,h,f),w(c,p,f),w(c,n,f),w(c,s,f),w(c,L,f),w(c,k,f),w(c,M,f)},p:ue,d(c){c&&(u(e),u(a),u(h),u(p),u(n),u(s),u(L),u(k),u(M))}}}function $e(l){let e,i=K(l[5][l[32].index]),t=[];for(let r=0;r<i.length;r+=1)t[r]=Ce(Pe(l,i,r));return{c(){for(let r=0;r<t.length;r+=1)t[r].c();e=te()},l(r){for(let b=0;b<t.length;b+=1)t[b].l(r);e=te()},m(r,b){for(let a=0;a<t.length;a+=1)t[a]&&t[a].m(r,b);w(r,e,b)},p(r,b){if(b[0]&33){i=K(r[5][r[32].index]);let a;for(a=0;a<i.length;a+=1){const h=Pe(r,i,a);t[a]?t[a].p(h,b):(t[a]=Ce(h),t[a].c(),t[a].m(e.parentNode,e))}for(;a<t.length;a+=1)t[a].d(1);t.length=i.length}},d(r){r&&u(e),re(t,r)}}}function Ce(l){let e,i,t,r,b=l[37]+1+"",a,h,y=l[35].function+"",p,n,v,s,L="Syntax: ",k=l[35].syntax+"",M,E,c,f="<b>Example:</b>",_,B,$,U,G,W,V,Y,Q,O;return{c(){e=m("details"),i=m("summary"),t=m("b"),r=z("Case "),a=z(b),h=z(": "),p=z(y),n=P(),v=m("p"),s=m("b"),s.textContent=L,M=z(k),E=P(),c=m("p"),c.innerHTML=f,_=P(),B=m("img"),U=P(),G=m("br"),W=P(),V=m("img"),Q=P(),O=m("br"),this.h()},l(q){e=d(q,"DETAILS",{class:!0,style:!0});var S=I(e);i=d(S,"SUMMARY",{class:!0});var J=I(i);t=d(J,"B",{});var F=I(t);r=A(F,"Case "),a=A(F,b),h=A(F,": "),p=A(F,y),F.forEach(u),J.forEach(u),n=C(S),v=d(S,"P",{});var j=I(v);s=d(j,"B",{"data-svelte-h":!0}),H(s)!=="svelte-17al1vv"&&(s.textContent=L),M=A(j,k),j.forEach(u),E=C(S),c=d(S,"P",{"data-svelte-h":!0}),H(c)!=="svelte-1pdkta5"&&(c.innerHTML=f),_=C(S),B=d(S,"IMG",{class:!0,src:!0,alt:!0}),U=C(S),G=d(S,"BR",{}),W=C(S),V=d(S,"IMG",{class:!0,src:!0,alt:!0}),Q=C(S),S.forEach(u),O=d(q,"BR",{}),this.h()},h(){g(i,"class","udf-summary"),g(B,"class","disp-img-2"),ee(B.src,$="/images/"+l[32].img+"-"+(l[37]+1)+"-example.png")||g(B,"src",$),g(B,"alt","udf_img_example"),g(V,"class","disp-img"),ee(V.src,Y="/images/"+l[32].img+"-"+(l[37]+1)+".png")||g(V,"src",Y),g(V,"alt","udf_img"),g(e,"class","name no-cursor"),Ne(e,"font-size","large")},m(q,S){w(q,e,S),o(e,i),o(i,t),o(t,r),o(t,a),o(t,h),o(t,p),o(e,n),o(e,v),o(v,s),o(v,M),o(e,E),o(e,c),o(e,_),o(e,B),o(e,U),o(e,G),o(e,W),o(e,V),o(e,Q),w(q,O,S)},p:ue,d(q){q&&(u(e),u(O))}}}function Le(l){let e,i,t,r=l[32].name+"",b,a,h,y,p="Function: ",n=l[32].purpose+"",v,s,L,k;function M(f,_){return f[4].includes(f[32].img)?$e:je}let c=M(l)(l);return{c(){e=m("details"),i=m("summary"),t=m("b"),b=z(r),a=P(),h=m("p"),y=m("b"),y.textContent=p,v=z(n),s=P(),c.c(),L=P(),k=m("br"),this.h()},l(f){e=d(f,"DETAILS",{class:!0});var _=I(e);i=d(_,"SUMMARY",{class:!0});var B=I(i);t=d(B,"B",{});var $=I(t);b=A($,r),$.forEach(u),B.forEach(u),a=C(_),h=d(_,"P",{});var U=I(h);y=d(U,"B",{"data-svelte-h":!0}),H(y)!=="svelte-mid3di"&&(y.textContent=p),v=A(U,n),U.forEach(u),s=C(_),c.l(_),L=C(_),_.forEach(u),k=d(f,"BR",{}),this.h()},h(){g(i,"class","udf-summary"),g(e,"class","name no-cursor udf-infos")},m(f,_){w(f,e,_),o(e,i),o(i,t),o(t,b),o(e,a),o(e,h),o(h,y),o(h,v),o(e,s),c.m(e,null),o(e,L),w(f,k,_)},p(f,_){c.p(f,_)},d(f){f&&(u(e),u(k)),c.d()}}}function Se(l){let e,i=l[29]+"",t,r,b,a,h,y=K(l[0][l[31]]),p=[];for(let n=0;n<y.length;n+=1)p[n]=Le(De(l,y,n));return{c(){e=m("h2"),t=z(i),r=m("br"),b=m("br"),a=P();for(let n=0;n<p.length;n+=1)p[n].c();h=te(),this.h()},l(n){e=d(n,"H2",{class:!0});var v=I(e);t=A(v,i),v.forEach(u),r=d(n,"BR",{}),b=d(n,"BR",{}),a=C(n);for(let s=0;s<p.length;s+=1)p[s].l(n);h=te(),this.h()},h(){g(e,"class","add_grad_3")},m(n,v){w(n,e,v),o(e,t),w(n,r,v),w(n,b,v),w(n,a,v);for(let s=0;s<p.length;s+=1)p[s]&&p[s].m(n,v);w(n,h,v)},p(n,v){if(v[0]&49){y=K(n[0][n[31]]);let s;for(s=0;s<y.length;s+=1){const L=De(n,y,s);p[s]?p[s].p(L,v):(p[s]=Le(L),p[s].c(),p[s].m(h.parentNode,h))}for(;s<p.length;s+=1)p[s].d(1);p.length=y.length}},d(n){n&&(u(e),u(r),u(b),u(a),u(h)),re(p,n)}}}function Ye(l){let e,i,t="Syntax: ",r=l[32].syntax+"",b,a,h,y="<b>Example:</b>",p,n,v,s,L,k,M,E;return{c(){e=m("p"),i=m("b"),i.textContent=t,b=z(r),a=P(),h=m("p"),h.innerHTML=y,p=P(),n=m("img"),s=P(),L=m("br"),k=P(),M=m("img"),this.h()},l(c){e=d(c,"P",{});var f=I(e);i=d(f,"B",{"data-svelte-h":!0}),H(i)!=="svelte-17al1vv"&&(i.textContent=t),b=A(f,r),f.forEach(u),a=C(c),h=d(c,"P",{"data-svelte-h":!0}),H(h)!=="svelte-1pdkta5"&&(h.innerHTML=y),p=C(c),n=d(c,"IMG",{class:!0,src:!0,alt:!0}),s=C(c),L=d(c,"BR",{}),k=C(c),M=d(c,"IMG",{class:!0,src:!0,alt:!0}),this.h()},h(){g(n,"class","disp-img-2"),ee(n.src,v="/images/"+l[32].img+"-example.png")||g(n,"src",v),g(n,"alt","udf_img_example"),g(M,"class","disp-img"),ee(M.src,E="/images/"+l[32].img+".png")||g(M,"src",E),g(M,"alt","udf_img")},m(c,f){w(c,e,f),o(e,i),o(e,b),w(c,a,f),w(c,h,f),w(c,p,f),w(c,n,f),w(c,s,f),w(c,L,f),w(c,k,f),w(c,M,f)},p:ue,d(c){c&&(u(e),u(a),u(h),u(p),u(n),u(s),u(L),u(k),u(M))}}}function Oe(l){let e,i=K(l[5][l[32].index]),t=[];for(let r=0;r<i.length;r+=1)t[r]=Me(xe(l,i,r));return{c(){for(let r=0;r<t.length;r+=1)t[r].c();e=te()},l(r){for(let b=0;b<t.length;b+=1)t[b].l(r);e=te()},m(r,b){for(let a=0;a<t.length;a+=1)t[a]&&t[a].m(r,b);w(r,e,b)},p(r,b){if(b[0]&36){i=K(r[5][r[32].index]);let a;for(a=0;a<i.length;a+=1){const h=xe(r,i,a);t[a]?t[a].p(h,b):(t[a]=Me(h),t[a].c(),t[a].m(e.parentNode,e))}for(;a<t.length;a+=1)t[a].d(1);t.length=i.length}},d(r){r&&u(e),re(t,r)}}}function Me(l){let e,i,t,r,b=l[37]+1+"",a,h,y=l[35].function+"",p,n,v,s,L="Syntax: ",k=l[35].syntax+"",M,E,c,f="<b>Example:</b>",_,B,$,U,G,W,V,Y,Q,O;return{c(){e=m("details"),i=m("summary"),t=m("b"),r=z("Case "),a=z(b),h=z(": "),p=z(y),n=P(),v=m("p"),s=m("b"),s.textContent=L,M=z(k),E=P(),c=m("p"),c.innerHTML=f,_=P(),B=m("img"),U=P(),G=m("br"),W=P(),V=m("img"),Q=P(),O=m("br"),this.h()},l(q){e=d(q,"DETAILS",{class:!0});var S=I(e);i=d(S,"SUMMARY",{class:!0});var J=I(i);t=d(J,"B",{});var F=I(t);r=A(F,"Case "),a=A(F,b),h=A(F,": "),p=A(F,y),F.forEach(u),J.forEach(u),n=C(S),v=d(S,"P",{});var j=I(v);s=d(j,"B",{"data-svelte-h":!0}),H(s)!=="svelte-17al1vv"&&(s.textContent=L),M=A(j,k),j.forEach(u),E=C(S),c=d(S,"P",{"data-svelte-h":!0}),H(c)!=="svelte-1pdkta5"&&(c.innerHTML=f),_=C(S),B=d(S,"IMG",{class:!0,src:!0,alt:!0}),U=C(S),G=d(S,"BR",{}),W=C(S),V=d(S,"IMG",{class:!0,src:!0,alt:!0}),Q=C(S),S.forEach(u),O=d(q,"BR",{}),this.h()},h(){g(i,"class","udf-summary"),g(B,"class","disp-img-2"),ee(B.src,$="/images/"+l[32].img+"-"+(l[37]+1)+"-example.png")||g(B,"src",$),g(B,"alt","udf_img_example"),g(V,"class","disp-img"),ee(V.src,Y="/images/"+l[32].img+"-"+(l[37]+1)+".png")||g(V,"src",Y),g(V,"alt","udf_img"),g(e,"class","name no-cursor")},m(q,S){w(q,e,S),o(e,i),o(i,t),o(t,r),o(t,a),o(t,h),o(t,p),o(e,n),o(e,v),o(v,s),o(v,M),o(e,E),o(e,c),o(e,_),o(e,B),o(e,U),o(e,G),o(e,W),o(e,V),o(e,Q),w(q,O,S)},p:ue,d(q){q&&(u(e),u(O))}}}function Be(l){let e,i,t,r=l[32].name+"",b,a,h,y,p="Function: ",n=l[32].purpose+"",v,s,L,k;function M(f,_){return f[4].includes(f[32].img)?Oe:Ye}let c=M(l)(l);return{c(){e=m("details"),i=m("summary"),t=m("b"),b=z(r),a=P(),h=m("p"),y=m("b"),y.textContent=p,v=z(n),s=P(),c.c(),L=P(),k=m("br"),this.h()},l(f){e=d(f,"DETAILS",{class:!0});var _=I(e);i=d(_,"SUMMARY",{class:!0});var B=I(i);t=d(B,"B",{});var $=I(t);b=A($,r),$.forEach(u),B.forEach(u),a=C(_),h=d(_,"P",{});var U=I(h);y=d(U,"B",{"data-svelte-h":!0}),H(y)!=="svelte-mid3di"&&(y.textContent=p),v=A(U,n),U.forEach(u),s=C(_),c.l(_),L=C(_),_.forEach(u),k=d(f,"BR",{}),this.h()},h(){g(i,"class","udf-summary"),g(e,"class","name no-cursor udf-infos")},m(f,_){w(f,e,_),o(e,i),o(i,t),o(t,b),o(e,a),o(e,h),o(h,y),o(h,v),o(e,s),c.m(e,null),o(e,L),w(f,k,_)},p(f,_){c.p(f,_)},d(f){f&&(u(e),u(k)),c.d()}}}function ke(l){let e,i=l[29]+"",t,r,b,a,h,y=K(l[2][l[31]]),p=[];for(let n=0;n<y.length;n+=1)p[n]=Be(ye(l,y,n));return{c(){e=m("h2"),t=z(i),r=m("br"),b=m("br"),a=P();for(let n=0;n<p.length;n+=1)p[n].c();h=te(),this.h()},l(n){e=d(n,"H2",{class:!0});var v=I(e);t=A(v,i),v.forEach(u),r=d(n,"BR",{}),b=d(n,"BR",{}),a=C(n);for(let s=0;s<p.length;s+=1)p[s].l(n);h=te(),this.h()},h(){g(e,"class","add_grad_3")},m(n,v){w(n,e,v),o(e,t),w(n,r,v),w(n,b,v),w(n,a,v);for(let s=0;s<p.length;s+=1)p[s]&&p[s].m(n,v);w(n,h,v)},p(n,v){if(v[0]&52){y=K(n[2][n[31]]);let s;for(s=0;s<y.length;s+=1){const L=ye(n,y,s);p[s]?p[s].p(L,v):(p[s]=Be(L),p[s].c(),p[s].m(h.parentNode,h))}for(;s<p.length;s+=1)p[s].d(1);p.length=y.length}},d(n){n&&(u(e),u(r),u(b),u(a),u(h)),re(p,n)}}}function We(l){let e,i,t,r='<h1 class="add_grad main-text">You will never think about buying UDFs ever again</h1>',b,a,h="Get access to high quality UDFs for <u>free</u>",y,p,n,v="<h1>Explore the programs</h1>",s,L,k="<span></span> <span></span> <span></span>",M,E,c='<div class="intro hidden"><br id="scrollToHere_1"/> <h1 class="animate">Introducing our revolutionary UDFs...</h1></div> <div class="row_1"><div class="left_row_1 hidden"><img src="/images/quadroots_ad.jpg" class="animate sample-img" id="ad_img" alt="quadroots"/></div> <div class="right_row_1 hidden"><div class="content_1 animate"><div><ul><li><h3 class="add_grad_3">Unparalleled Speed</h3> <h5>Get the answer in mere <u>seconds</u></h5></li> <li><h3 class="add_grad_3">Full Worked Solutions</h3> <h5>Our UDFs show all working needed to gain <u class="change-under">full marks</u></h5></li> <li><h3 class="add_grad_3">Highly Competitive Price of $0.00</h3> <h5>They are completely <u>free</u>!</h5></li></ul></div></div></div></div>',f,_,B,$='<br id="scrollToMM"/> <h1>Mathematical Methods UDFs</h1>',U,G,W,V,Y,Q='<br id="scrollToSM"/> <h1>Specialist Mathematics UDFs</h1>',O,q,S,J,F,j,oe='<div class="intro_4"><h1>Download</h1> <h3>UDF Files:</h3> <div class="link-text"><a class="dwn-text-1" href="/MM3&amp;4_UDFs_v1.0.zip" download=""><h2 class="dwn-text-2"><u>Download Mathematical Methods UDFs</u></h2></a> <a class="dwn-text-1" href="/SM3&amp;4_UDFs_v1.0.zip" download=""><h2 class="dwn-text-2"><u>Download Specialist Mathematics UDFs</u></h2></a></div> <p><b>Note: </b>The latest version is v1.0. Please ensure that the version you install is up to date.</p> <h3>UDF Guides:</h3> <p>Want a guide to put in your bound reference? Well you&#39;re in luck! These will be coming soon... :D</p> <h3>Program Bugs:</h3> <p>After extensive testing our beta testers identified only a few bugs, with the vast majority of the programs working fine! :D</p> <p>While many of the programs worked fine for us, if you encounter any issues or difficulties, please contact us and we will try to help you out.</p> <h5>Bugs Identified:</h5> <ul><li><p>Domain and Range function does not handle parameters well</p></li> <li><p>Domain and Range may give inaccurate results if the domain is not restricted for complicated functions</p></li></ul></div>',X,ne,le,me,fe,ae=K(l[1]),R=[];for(let D=0;D<ae.length;D+=1)R[D]=Se(we(l,ae,D));let se=K(l[3]),N=[];for(let D=0;D<se.length;D+=1)N[D]=ke(_e(l,se,D));return ne=new Ge({}),{c(){e=m("div"),i=m("div"),t=m("div"),t.innerHTML=r,b=P(),a=m("h1"),a.innerHTML=h,y=P(),p=m("div"),n=m("button"),n.innerHTML=v,s=P(),L=m("div"),L.innerHTML=k,M=P(),E=m("div"),E.innerHTML=c,f=P(),_=m("div"),B=m("div"),B.innerHTML=$,U=P(),G=m("div");for(let D=0;D<R.length;D+=1)R[D].c();W=P(),V=m("div"),Y=m("div"),Y.innerHTML=Q,O=P(),q=m("div");for(let D=0;D<N.length;D+=1)N[D].c();S=P(),J=m("br"),F=P(),j=m("div"),j.innerHTML=oe,X=P(),Te(ne.$$.fragment),this.h()},l(D){e=d(D,"DIV",{class:!0,id:!0});var T=I(e);i=d(T,"DIV",{class:!0});var x=I(i);t=d(x,"DIV",{class:!0,"data-svelte-h":!0}),H(t)!=="svelte-8cmmle"&&(t.innerHTML=r),b=C(x),a=d(x,"H1",{class:!0,"data-svelte-h":!0}),H(a)!=="svelte-n57la1"&&(a.innerHTML=h),y=C(x),p=d(x,"DIV",{class:!0});var Z=I(p);n=d(Z,"BUTTON",{class:!0,"data-svelte-h":!0}),H(n)!=="svelte-1l612m1"&&(n.innerHTML=v),Z.forEach(u),s=C(x),L=d(x,"DIV",{class:!0,"data-svelte-h":!0}),H(L)!=="svelte-1rpu3qi"&&(L.innerHTML=k),x.forEach(u),M=C(T),E=d(T,"DIV",{class:!0,"data-svelte-h":!0}),H(E)!=="svelte-re39ls"&&(E.innerHTML=c),f=C(T),_=d(T,"DIV",{class:!0});var ce=I(_);B=d(ce,"DIV",{class:!0,"data-svelte-h":!0}),H(B)!=="svelte-1avxz1r"&&(B.innerHTML=$),U=C(ce),G=d(ce,"DIV",{class:!0});var he=I(G);for(let ie=0;ie<R.length;ie+=1)R[ie].l(he);he.forEach(u),ce.forEach(u),W=C(T),V=d(T,"DIV",{class:!0});var pe=I(V);Y=d(pe,"DIV",{class:!0,"data-svelte-h":!0}),H(Y)!=="svelte-183bk8v"&&(Y.innerHTML=Q),O=C(pe),q=d(pe,"DIV",{class:!0});var ve=I(q);for(let ie=0;ie<N.length;ie+=1)N[ie].l(ve);ve.forEach(u),pe.forEach(u),S=C(T),J=d(T,"BR",{id:!0}),F=C(T),j=d(T,"DIV",{class:!0,"data-svelte-h":!0}),H(j)!=="svelte-buf2s6"&&(j.innerHTML=oe),T.forEach(u),X=C(D),Ue(ne.$$.fragment,D),this.h()},h(){g(t,"class","main_display"),g(a,"class","sub-main-text"),g(n,"class","back_grad exp-prgm-button"),g(p,"class","exp_button"),g(L,"class","down_arrow"),g(i,"class","centre_main"),g(E,"class","main_display"),g(B,"class","intro_2"),g(G,"class","mm-udf-info"),g(_,"class","main_display"),g(Y,"class","intro_3"),g(q,"class","sm-udf-info"),g(V,"class","main_display"),g(J,"id","scrollToBottom"),g(j,"class","main_display"),g(e,"class","info"),g(e,"id","scrollToTop")},m(D,T){w(D,e,T),o(e,i),o(i,t),o(i,b),o(i,a),o(i,y),o(i,p),o(p,n),o(i,s),o(i,L),o(e,M),o(e,E),o(e,f),o(e,_),o(_,B),o(_,U),o(_,G);for(let x=0;x<R.length;x+=1)R[x]&&R[x].m(G,null);o(e,W),o(e,V),o(V,Y),o(V,O),o(V,q);for(let x=0;x<N.length;x+=1)N[x]&&N[x].m(q,null);o(e,S),o(e,J),o(e,F),o(e,j),w(D,X,T),Fe(ne,D,T),le=!0,me||(fe=He(n,"click",l[6]),me=!0)},p(D,T){if(T[0]&51){ae=K(D[1]);let x;for(x=0;x<ae.length;x+=1){const Z=we(D,ae,x);R[x]?R[x].p(Z,T):(R[x]=Se(Z),R[x].c(),R[x].m(G,null))}for(;x<R.length;x+=1)R[x].d(1);R.length=ae.length}if(T[0]&60){se=K(D[3]);let x;for(x=0;x<se.length;x+=1){const Z=_e(D,se,x);N[x]?N[x].p(Z,T):(N[x]=ke(Z),N[x].c(),N[x].m(q,null))}for(;x<N.length;x+=1)N[x].d(1);N.length=se.length}},i(D){le||(ze(ne.$$.fragment,D),le=!0)},o(D){Ae(ne.$$.fragment,D),le=!1},d(D){D&&(u(e),u(X)),re(R,D),re(N,D),Re(ne,D),me=!1,fe()}}}function Ke(l){var e;(e=document.getElementById(l))==null||e.scrollIntoView(!0)}function Qe(l,e,i){let t;return Ve(l,de,F=>i(7,t=F)),be(()=>{const F=new IntersectionObserver(oe=>{oe.forEach(X=>{X.isIntersecting&&(X.target.classList.add("show-animate"),X.target.classList.remove("hidden-animate"))})});document.querySelectorAll(".hidden").forEach(oe=>F.observe(oe))}),be(()=>{document.body.classList.remove("about-theme"),document.body.classList.add("home-theme"),document.body.classList.remove("contact-theme"),document.body.classList.contains("dark-mode")?ge(de,t={svg_id:"/sun.svg",logo_id:"/logo-dark.svg",compass_id:"/compass-dark.svg"},t):ge(de,t={svg_id:"/moon.svg",logo_id:"/logo-light.svg",compass_id:"/compass-light.svg"},t)}),[[[{name:"Average Rate of Change (avgroc)",purpose:"Determines the average rate of change of a function",syntax:"avgroc(function, variable, lower, upper)",img:"avgroc"},{name:"Average Value (avgval)",purpose:"Calculates the average value of a function",syntax:"avgval(function, variable, lower, upper)",img:"avgval"},{name:"Bound Area (boundarea)",purpose:"Determines the area bound by two graphs (if any) across their maximal domains",syntax:"boundarea(function1, function2, variable)",img:"boundarea"},{name:"Bound Area with domain (boundaread)",purpose:"Determines the bound area between two functions in a restricted domain",syntax:"boundaread(function1, function2, variable, lower, upper)",img:"boundaread"},{name:"Integral Solve (intsolve)",purpose:"Determines the answer for the integration multiple choice questions",syntax:"intsolve({lower1, upper1, value1, lower2, upper2, value2}, {transformations}, {lower3, upper3})",img:"intsolve",index:0,cases:3},{name:"Newton's Method (newtons)",purpose:"Estimates the root of a function using newton's method",syntax:"newtons(function, variable, x0, iterations)",img:"newtons"},{name:"Points of Inflection (pois)",purpose:"Determines the points of inflection of a function",syntax:"pois(function, variable)",img:"pois"},{name:"Stationary Points (stps)",purpose:"Determines the stationary points of a function",syntax:"stps(function, variable)",img:"stps"},{name:"Trapezoid Approximation (trapapprox)",purpose:"Approximates an integral using the trapezoidal rule",syntax:"trapapprox(function, variable, lower, upper, number of trapezia)",img:"trapapprox"}],[{name:"Continuous Conditional Probability (ccondpr)",purpose:"Determines conditional probability for a continuous distribution",syntax:"ccondpr(Probability Density Function, Lower Bound, Upper Bound)",img:"ccondpr",index:1,cases:2},{name:"Confidence Interval (confint)",purpose:"Determines a confidence interval as well as the z-score, margin of error and standard deviation",syntax:"confint(Sample Size,P_hat, . confidence)",img:"confint"},{name:"Confidence Interval Solve (confintsolve)",purpose:"Determines the sample size, standard deviation or percentage confidence depending on the provided data",syntax:"confintsolve(Lower Bound, Upper Bound, Sample Size or Sample Standard Deviation or . Confidence)",img:"confintsolve"},{name:"Continuous Distribution Information (continfo)",purpose:"Determines the expected value, mean, variance, standard deviation of a continuous probability distribution",syntax:"continfo(function, variable, lower, upper)",img:"continfo"},{name:"Inverse Normal (invnormvals)",purpose:"Determines the left, right and centre possibilities for probability of a distribution",syntax:"invnormvals(mean, standard deviation, probability)",img:"invnormvals"},{name:"Normal Solve (normsolve)",purpose:"Determines the mean and standard deviation for lower and upper type questions",syntax:"normsolve(Lower, Probability of Lower, Upper, Probability of Upper)",img:"normsolve",index:2,cases:5}],[{name:"Binomial Distribution Information (binominfo)",purpose:"Determines the expected value, variance, standard deviation, sample expected value, and sample standard deviation for a binomial distribution",syntax:"binominfo(Sample Size, Probability of Success)",img:"binominfo"},{name:"Binomial Solve (binomsolve)",purpose:"Determines the number of trials required to achieve a certain probability",syntax:"binomsolve(outcome, probability of success, threshold value)",img:"binomsolve"},{name:"Discrete Conditional Probability (dcondpr)",purpose:"Determines conditional probability for a discrete distribution",img:"dcondpr",index:3,cases:3},{name:"Hypergeometric Cumulative Probability Function (hypergeocdf)",purpose:"Determines the probability of selecting items without replacement, but over an interval of outcomes",syntax:"hypergeocdf(sample size, population size, number of successful items, lower bound, upper bound)",img:"hypergeocdf"},{name:"Hypergeometric Probability Density Function (hypergeopdf)",purpose:"Determines the probability of selecting items without replacement, but for specific outcomes",syntax:"hypergeopdf(sample size, population size, number of successful items, outcome)",img:"hypergeopdf"},{name:"Inverse Binomial (invbinomial)",purpose:"Determines the outcome required to achieve the probability",syntax:"invbinomial(number of trials, probability of success, known probability value)",img:"invbinomial"},{name:"Probability Table (prtable)",purpose:"Determines the mean, variance, standard deviation of a probability table",syntax:"prtable({outcomes}, {probabilities})",img:"prtable"},{name:"Sample Distribution Binomial (samplebinom)",purpose:"Determines the distribution for the sample proportion of a binomially distributed sample",syntax:"samplebinom(Sample Size, Probability of Success)",img:"samplebinom"},{name:"Sample Binomial Probability (samplebinompr)",purpose:"Determines the probability for the sample proportion for a binomially distributed sample",syntax:"samplebinompr(Sample Size, Probability of Success, Lower, Upper)",img:"samplebinompr"},{name:"Sample Distribution Hypergeometric (samplehypergeo)",purpose:"Determines the distribution for the sample proportion of a hypergeometrically distributed sample",syntax:"samplehypergeo(Sample Size, Population Size, Number Successful)",img:"samplehypergeo"},{name:"Sample Hypergeometric probability (samplehyppr)",purpose:"Determines the probability for the sample proportion for a hypergeometrically distributed sample",syntax:"samplehyppr(Sample Size, Population Size, Number Successful, Lower, Upper)",img:"samplehyppr"}],[{name:"Asymptotes (asymp)",purpose:"Determines the vertical and horizontal asymptotes of a function",syntax:"asymp(function, variable)",img:"asymp"},{name:"Composite Check (ccheck)",purpose:"Checks whether a composite function is valid, and the maximal domain required for the composite to be valid.",syntax:"ccheck(function 1, function 2)",img:"ccheck"},{name:"Discriminant (discrim)",purpose:"Calculates the discriminant of an inputted quadratic expression",syntax:"discrim(quadratic Expr, variable)",img:"discrim"},{name:"Domain and Range (domrang)",purpose:"Determines the domain and range of a function",syntax:"domrang(function, variable)",img:"domrang"},{name:"Intercepts (intercepts)",purpose:"Finding the x and y intercepts of a function",syntax:"intercepts(function,variable)",img:"intercepts"},{name:"Intersects (intersects)",purpose:"Determines the points of intersection of two functions across their maximal domains.",syntax:"intersects(function1,function2,variable)",img:"intersects"},{name:"Intersects with domain (intersectsd)",purpose:"Determines the points of intersection between two functions in a restricted domain",syntax:"intersectsd(function1, function2, variable, lower, upper)",img:"intersectsd"},{name:"Inverse Function (inverse)",purpose:"Determines the inverse of a function",syntax:"inverse(function, variable, x in domain of f)",img:"inverse"},{name:"Inverse Intersections (invints)",purpose:"Determines the values of a parameter, k, required for a function and its inverse function to have a certain number of intersections",syntax:"invints(function, number of intersections with inverse)",img:"invints",index:9,cases:7},{name:"Unique, None, Infinite Solution (linesolve)",purpose:"Determines when two linear equations will have an unique, none or infinitely many solutions",syntax:"linesolve(Equation1, Equation2)",img:"linesolve"},{name:"Property Check (pcheck)",purpose:"Determines which function satisfies a specific property",syntax:"pcheck(function, variable, LHS, RHS)",img:"pcheck"},{name:"Point Information (pointinfo)",purpose:"Determines the gradient, perpendicular gradient, line, x and y intercepts of a line, midpoint, distance",syntax:"pointinfo(x1, y1, x2, y2)",img:"pointinfo"},{name:"Transformations (transform)",purpose:"Determines the transformed function after applying certain transformations",syntax:"transform(function, {transformations})",img:"transform"}],[{name:"Column Augment (ca)",purpose:"Converts answer into easily readable matrix form",img:"ca",index:6,cases:2},{name:"Domain Solve (dsolve)",purpose:"Solves equations in a restricted domain",syntax:"dsolve(Equation, Variable, Lower Bound, Upper Bound)",img:"dsolve"},{name:"Graph Information (graphinfo)",purpose:"Determines the endpoints, x-intercepts, y-intercepts, stationary points, points of inflection of a function",img:"graphinfo",index:7,cases:2},{name:"Rewrite (rr)",purpose:"Gets the right hand side of an equation/answer",syntax:"rr(Equation/Answer)",img:"rr"},{name:"Triganometric Solve (tsolve)",purpose:"Gives exact values of circular function equations (Ones which TiNspire cannot properly solve on its own)",img:"tsolve",index:8,cases:2}]],["Calculus","Continuous Probability","Discrete Probability","Functions","Miscellaneous"],[[{name:"Arc Length (arclength)",purpose:"Determines the arc length for parametric curve",syntax:"arclength(Position Vector, Variable, Lower Bound, Upper Bound)",img:"arclength",cases:1,index:4},{name:"Bound Volume (boundvol)",purpose:"Determines the volume of the solid formed by the region(s) bound by two curves",syntax:"boundvol(Function 1, Function 2, Variable)",img:"boundvol"},{name:"Euler's Method (eulers)",purpose:"Uses euler's method to estimate the solution to a differential equation",syntax:"eulers(Differential Equation, Independent Variable, x0, xn, y0, step-size)",img:"eulers"},{name:"Mixing Problems (mix)",purpose:"Determines the differential equation of the mixing problem",syntax:"mix() (You will be prompted for inputs)",img:"mix"},{name:"Surface Area of Solid (surfarea)",purpose:"Determines the surface area of a solid of revolution",syntax:"surfarea(Function, Variable, Lower Bound, Upper Bound)",img:"surfarea",cases:3,index:5}],[{name:"De Moivre's Theorem (demoiv)",purpose:"Determines the solutions to roots of unity questions",syntax:"demoiv(Power , Number)",img:"demoiv"},{name:"Circle Locus First Form (locicir1)",purpose:"Determines cartesian equation of circle loci in the form |z - a| = r",syntax:"locicir1(Point , Radius)",img:"locicir1"},{name:"Circle Locus Second Form (locicir2)",purpose:"Determines cartesian equation of circle loci in the form |z - a| = k|z - b|",syntax:"locicir2(Point 1, Point 2, k)",img:"locicir2"},{name:"Ellipse Locus (lociellp)",purpose:"Determines cartesian equation of ellipse loci",syntax:"lociellp(Point 1, Point 2, Length)",img:"lociellp"},{name:"Hyperbola Locus (locihyp)",purpose:"Determines cartesian equation of hyperbola loci",syntax:"locihyp(Point 1, Point 2, Length)",img:"locihyp"},{name:"Line Locus (lociline)",purpose:"Determines cartesian equation of line in the form |z - a| = |z - b|",syntax:"lociline(Point 1, Point 2)",img:"lociline"},{name:"Quadratic Roots (quadroots)",purpose:"Determines quadratic roots of a complex number algebraically",syntax:"quadroots(Number)",img:"quadroots"},{name:"Ray (ray)",purpose:"Determines the cartesian equation of a ray given a point and an angle",syntax:"ray(Point, Angle)",img:"ray"}],[{name:"Collision Detector (collision)",purpose:"Determines whether two particles collide and where their paths intersect",syntax:"collision(Position Vector 1, Position Vector 2)",img:"collision"},{name:"Projectile Motion (projm)",purpose:"Determines the accleration, velocity, position, max height, max displacement, return speed of a particle",syntax:"projm(Initial Position, Initial Velocity, Launch Angle, Initial Acceleration)",img:"projm"},{name:"Constant Acceleration Equations (suvat)",purpose:"Enter 3 known values and 2 unknown variables, it will determine the unknowns",syntax:"suvat(s (displacement), u (initial velocity), v (final velocity), a (acceleration), t (time))",img:"suvat"}],[{name:"Unit Vector Bisector (bisec)",purpose:"Determines the unit vector which bisects the angle between two vectors",syntax:"bisec(vector 1, vector 2)",img:"bisec"},{name:"Colinear (colin)",purpose:"Determines value(s) of a variable required for points to be collinear",syntax:"colin(Point 1, Point 2, Point 3)",img:"colin"},{name:"Linear Dependence (lindep)",purpose:"Determines value(s) of a variable required for 3 vectors to be linearly dependent",syntax:"lindep(Vector 1, Vector 2, Vector 3)",img:"lindep"},{name:"Vector Projection (vproj)",purpose:"Determines vector, scalar resolute, & angle for two inputted vectors",syntax:"vproj(Vector 1, Vector 2)",img:"vproj"}],[{name:"Line Cartesian to Vector (car2vecline)",purpose:"Converts equation of line from cartesian form to vector form",syntax:"car2vecline(line Cartesian)",img:"car2vecline"},{name:"Plane Cartesian to Vector (car2vecplane)",purpose:"Converts equation of plane from cartesian form to vector form",syntax:"car2vecplane(Plane Cartesian)",img:"car2vecplane"},{name:"Line Vector to Cartesian (vec2carline)",purpose:"Converts equation of line from vector form to cartesian form",syntax:"vec2carline(line Vector)",img:"vec2carline"},{name:"Plane Vector to Cartesian (vec2carplane)",purpose:"Converts equation of plane from vector form to cartesian form",syntax:"vec2carplane(Plane Vector)",img:"vec2carplane"},{name:"Minimum Distance between 2 lines (dist2l)",purpose:"Determines minimum distance between two lines",syntax:"dist2l(Line Vector 1, Line Vector 2)",img:"dist2l"},{name:"Minimum Distance between 2 planes (dist2pl)",purpose:"Determines minimum distance between two planes",syntax:"dist2pl(Plane Cartesian 1, Plane Cartesian 2)",img:"dist2pl"},{name:"Minimum Distance between line and plane (distlpl)",purpose:"Determines the minimum distance between a plane and line",syntax:"distlpl(Line Vector, Plane Cartesian)",img:"distlpl"},{name:"Minimum Distance between line and point (distlp)",purpose:"Determines minimum distance between a line and point",syntax:"distlp(Line Vector, Point)",img:"distlp"},{name:"Minimum Distance between plane and point (distplp)",purpose:"Determines minimum distance between a plane and point",syntax:"distlp(Plane Equation, Point)",img:"distplp"},{name:"Intersection between 2 lines (ints2l)",purpose:"Determines the point of intersection & angle between two lines",syntax:"ints2l(Line Vector 1, Line Vector 2)",img:"ints2l"},{name:"Intersection between 2 planes (ints2pl)",purpose:"Determines the line of intersection & angle between two planes",syntax:"ints2pl(Plane Cartesian 1, Plane Cartesian 2)",img:"ints2pl"},{name:"Intersection between plane and line (intslpl)",purpose:"Determines the point of intersection & angle between line and plane",syntax:"intslpl(Line Vector, Plane Cartesian)",img:"intslpl"},{name:"Create line with 2 points (line2p)",purpose:"Determines the equation of a line given two points",syntax:"line2p(Point 1, Point 2)",img:"line2p"},{name:"Create line with direction vector and point (linedp)",purpose:"Determines the equation of a line given a direction vector and point",syntax:"linedp(Direction Vector, Point)",img:"linedp"},{name:"Create plane with 3 points (plane3p)",purpose:"Determines the equation of a plane given three points",syntax:"plane3p(Point 1, Point 2, Point 3)",img:"plane3p"},{name:"Create plane with normal and point (planenp)",purpose:"Determines the equation of a plane given a normal vector and a point",syntax:"planenp(Normal Vector, Point)",img:"planenp"},{name:"Plane formed by intersecting lines (planeintl)",purpose:"Determines the equation of the plane formed by two intersecting lines",syntax:"planeintl(Line Vector 1, Line Vector 2)",img:"planeintl"}],[{name:"Sample Mean Confidence Interval (confint)",purpose:"Determines the confidence interval for the sample mean",syntax:"confint(Sample Mean, Population Standard Deviation, Sample Size, . confidence)",img:"confint_sm"},{name:"Hypothesis Testing (hyptest)",purpose:"Determines whether the null hypothesis should be rejected by calculating p-values",syntax:"hyptest() (You will be prompted for inputs)",img:"hyptest"},{name:"Probability of Error (prerror)",purpose:"Determines the probability of Type I and Type II errors occuring",syntax:"prerror() (You will be prompted for inputs)",img:"prerror"},{name:"p-value (pval)",purpose:"Determines the p-value of a hypothesis test",syntax:"pval() (You will be prompted for inputs)",img:"pval"}]],["Calculus","Complex Numbers","Kinematics","Vectors","Linear Algebra","Probability"],["intsolve","ccondpr","normsolve","dcondpr","arclength","surfarea","ca","graphinfo","tsolve","invints"],[[{function:"One integral given, find transformed integral",syntax:"intsolve({lower1,upper1, value1}, {transformations}, {lower2, upper2})"},{function:"Two integrals given, find untransformed integral",syntax:"intsolve({lower1, upper1, value1}, {lower2, upper2, value2}, {lower3, upper3})"},{function:"Two integrals given, find transformed integral",syntax:"intsolve({lower1, upper1, value1, lower2, upper2, value2}, {transformations}, {lower3, upper3})"}],[{function:"Probability density function",syntax:"ccondpr(Probability Density Function, Lower Bound, Upper Bound, Condition 1, Condition 2)"},{function:"Normal Distribution",syntax:"ccondpr(Blank String, Mean, Standard Deviation, Condition 1, Condition 2)"}],[{function:"Both Lower and Upper given",syntax:"normsolve(Lower, Probability of Lower, Upper, Probability of Upper)"},{function:"Lower and Mean given",syntax:"normsolve(Lower, Probability of Lower, Mean, Blank String)"},{function:"Lower and Standard Deviation given",syntax:"normsolve(Lower, Probability of Lower, Blank String, Standard Deviation)"},{function:"Upper and Mean given",syntax:"normsolve(Mean, Blank String, Upper, Probability of Upper)"},{function:"Upper and Standard Deviation given",syntax:"normsolve(Blank String, Standard Deviation, Upper, Probability of Upper)"}],[{function:"Binomial Distribution",syntax:"dcondpr(number of trials, probability of success, condition 1, condition 2)"},{function:"Discrete Probability Table",syntax:"dcondpr({List containing outcomes}, {List containing probabilities}, condition 1, condition 2)"},{function:"Probability Mass Function",syntax:"dcondpr({List containing outcomes}, PMF, condition 1, condition 2)"}],[{function:"Function",syntax:"arclength(Function, Variable, Lower Bound, Upper Bound)",cases:2},{function:"Parametric Equation",syntax:"arclength(Vector, Variable, Lower, Upper)"}],[{function:"Function of x rotated about x-axis",syntax:"surfarea(Function, Variable, Lower Bound, Upper Bound)"},{function:"Function of y rotated about y-axis",syntax:"surfarea(Function, Variable, Lower Bound, Upper Bound)"},{function:"Function of x rotated about y-axis",syntax:"surfarea(Function, y, x-lower, x-upper)"},{function:"Parametric Equation",syntax:"surfarea(Function, t, Lower Bound, Upper Bound)"}],[{function:"One Variable",syntax:"surfarea(Function, t, Lower Bound, Upper Bound)"},{function:"Multiple Variables (Up to 5)",syntax:"ca(Ans, {var1, var2,..., var5}"}],[{function:"Restricted Domain",syntax:"graphinfo(Function, Variable, Lower Bound, Upper Bound)"},{function:"Across Maximal Domain",syntax:"graphinfo(Function, Variable, Blank String, Random Character)"}],[{function:"Trigonometric Equation",syntax:"tsolve(Equation, Variable, Lower Bound, Upper Bound)"},{function:"Trigonometric Inequality",syntax:"tsolve(Inequality, Variable, Lower Bound, Upper Bound)"}],[{function:"Square Root",syntax:"invints(function, number of intersections with inverse)"},{function:"Parabola",syntax:"invints(function, number of intersections with inverse) *You will be prompted to enter an initial condition"},{function:"Exponential",syntax:"invints(function, number of intersections with inverse)"},{function:"Logarithm",syntax:"invints(function, number of intersections with inverse)"},{function:"Hyperbola",syntax:"invints(function, number of intersections with inverse)"},{function:"Simple Cubic (Either 0 or 1 turning points)",syntax:"invints(function, number of intersections with inverse)"},{function:"Complicated Cubic (More than 1 turning point)",syntax:"invints(function, number of intersections with inverse) *You will be prompted to enter the domain"}]],()=>Ke("scrollToHere_1")]}class tt extends Ee{constructor(e){super(),qe(this,e,Qe,We,Ie,{},null,[-1,-1])}}export{tt as component};
